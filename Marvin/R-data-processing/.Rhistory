list
list
# clean work space
rm(list=ls())
# set working directory
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# install packages
BiocManager::install("edgeR")
# install packages
BiocManager::install("edgeR")
library(edgeR)
library(tidyr)
library(xlsx)
library(data.table)
library(clusterProfiler)
library(dplyr)
library(ggpubr)
#BiocManager::install("EnhancedVolcano")
library(EnhancedVolcano)
BiocManager::install("EnhancedVolcano")
library(EnhancedVolcano)
# functions
### filLow
filLow <- function(data){
#library(edgeR)
#library(tidyr)
myCPM <- cpm(data)
head(myCPM)
thresh <- myCPM > 0.5
table(rowSums(thresh))
keep <- rowSums(thresh) >= 1
data <- data[keep,]
data <- drop_na(data)
}
x
x
### exprs
exprs <- function(data,x,y,group){
y <- DGEList(counts = data[,x:y], group = group)
y <- calcNormFactors(y)
design <- model.matrix(~1 + group)
y <- estimateDisp(y, design)
fit <- glmQLFit(y, design)
qlf <- glmQLFTest(fit, coef = 2)
res <- as.data.frame(topTags(qlf,n=Inf))
}
# get filenames
ls <- list.files(path = "./separated")
ls <- gsub(".txt", "", ls)
getwd()
setwd("~/GitHub/2021-internship/Marvin/R-data-processing")
# get filenames
ls <- list.files(path = "./data")
ls <- gsub(".txt", "", ls)
# loop over files and run functions
for (fileName in ls){
# load datafile
data <- read.table(paste0("./data/", fileName, ".txt"), header = T, sep = "\t")
data <- data %>% select(X, starts_with("DMSO"), everything(), -starts_with("NK"))
# create rownames from probeID column -- column "X"
row.names(data) <- data$X
data <- data[-1]
#######################
##### FC ANALYSIS #####
#######################
# filter lowly expressed genes
data <- filLow(data = data)
# run EdgeR
dataExpr <- exprs(data = data, x = 1, y = 10,
group = factor(c(rep("control", 5), rep("case", 5)),
levels = c("control", "case")))
############################
##### FINISHING RESULT #####
############################
# clean result file, rownames (gene IDs) as first column -- match with IDs from ID file and save them
dataExpr <- setDT(dataExpr, keep.rownames = TRUE)[]
colnames(dataExpr)[1] <- "IDs"
dataExpr <- dataExpr %>% tidyr::separate(IDs, c("gene_symbol","ID"), "_")
vp <- EnhancedVolcano(dataExpr, title = paste0(fileName), lab = dataExpr$ID,
x = 'logFC',y = 'PValue', xlim = c(min(dataExpr$logFC), max(dataExpr$logFC)), FCcutoff = 0.26, pCutoff = 0.05,
col = c("grey30", "orange", "royalblue", "darkorange4"), selectLab = '', ylim = c(0, max(-log10(dataExpr$PValue))+0.5))
svg(file=paste0("./results/volcanoPlots/", fileName, ".svg"), width = 17, height = 18)
plot(vp)
dev.off()
dataExpr <- merge.data.frame(dataExpr, IDs, by.x = "ID", by.y = "pid")
dataExpr <- dataExpr[-2]
write.table(dataExpr, file = paste0("results/expr/expr_", fileName,".txt"), sep="\t", quote = F, row.names = F)
##################
##### PW ORA #####
##################
# ORA
ora(wpid2gene, wpid2name, data = dataExpr, 0.26, file = paste0(fileName))
}
# loop over files and run functions
for (fileName in ls){
# load datafile
data <- read.table(paste0("./data/", fileName, ".txt"), header = T, sep = "\t")
data <- data %>% select(X, starts_with("DMSO"), everything(), -starts_with("NK"))
# create rownames from probeID column -- column "X"
row.names(data) <- data$X
data <- data[-1]
#######################
##### FC ANALYSIS #####
#######################
# filter lowly expressed genes
data <- filLow(data = data)
# run EdgeR
dataExpr <- exprs(data = data, x = 1, y = 10,
group = factor(c(rep("control", 5), rep("case", 5)),
levels = c("control", "case")))
############################
##### FINISHING RESULT #####
############################
# clean result file, rownames (gene IDs) as first column -- match with IDs from ID file and save them
dataExpr <- setDT(dataExpr, keep.rownames = TRUE)[]
colnames(dataExpr)[1] <- "IDs"
dataExpr <- dataExpr %>% tidyr::separate(IDs, c("gene_symbol","ID"), "_")
vp <- EnhancedVolcano(dataExpr, title = paste0(fileName), lab = dataExpr$ID,
x = 'logFC',y = 'PValue', xlim = c(min(dataExpr$logFC), max(dataExpr$logFC)), FCcutoff = 0.26, pCutoff = 0.05,
col = c("grey30", "orange", "royalblue", "darkorange4"), selectLab = '', ylim = c(0, max(-log10(dataExpr$PValue))+0.5))
svg(file=paste0("./results/volcanoPlots/", fileName, ".svg"), width = 17, height = 18)
plot(vp)
dev.off()
dataExpr <- merge.data.frame(dataExpr, IDs, by.x = "ID", by.y = "pid")
dataExpr <- dataExpr[-2]
write.table(dataExpr, file = paste0("results/expr/expr_", fileName,".txt"), sep="\t", quote = F, row.names = F)
##################
##### PW ORA #####
##################
# ORA
# for now # ora(wpid2gene, wpid2name, data = dataExpr, 0.26, file = paste0(fileName))
}
View(data)
View(data)
# loop over files and run functions
for (fileName in ls){
# load datafile
data <- read.table(paste0("./data/", fileName, ".txt"), header = T, sep = "\t")
data <- data %>% select(X, starts_with("DMSO"), everything(), -starts_with("NK"))
# create rownames from probeID column -- column "X"
row.names(data) <- data$X
data <- data[-1]
#######################
##### FC ANALYSIS #####
#######################
# filter lowly expressed genes
data <- filLow(data = data)
# run EdgeR
dataExpr <- exprs(data = data, x = 1, y = 10,
group = factor(c(rep("control", 5), rep("case", 5)),
levels = c("control", "case")))
############################
##### FINISHING RESULT #####
############################
# clean result file, rownames (gene IDs) as first column -- match with IDs from ID file and save them
dataExpr <- setDT(dataExpr, keep.rownames = TRUE)[]
colnames(dataExpr)[1] <- "IDs"
dataExpr <- dataExpr %>% tidyr::separate(IDs, c("gene_symbol","ID"), "_")
vp <- EnhancedVolcano(dataExpr, title = paste0(fileName), lab = dataExpr$ID,
x = 'logFC',y = 'PValue', xlim = c(min(dataExpr$logFC), max(dataExpr$logFC)), FCcutoff = 0.26, pCutoff = 0.05,
col = c("grey30", "orange", "royalblue", "darkorange4"), selectLab = '', ylim = c(0, max(-log10(dataExpr$PValue))+0.5))
svg(file=paste0("./results/volcanoPlots/", fileName, ".svg"), width = 17, height = 18)
plot(vp)
dev.off()
# dataExpr <- merge.data.frame(dataExpr, INSERTID, by.x = "ID", by.y = "pid")
# dataExpr <- dataExpr[-2]
write.table(dataExpr, file = paste0("results/expr/expr_", fileName,".txt"), sep="\t", quote = F, row.names = F)
##################
##### PW ORA #####
##################
# ORA
# for now # ora(wpid2gene, wpid2name, data = dataExpr, 0.26, file = paste0(fileName))
}
# loop over files and run functions
for (fileName in ls){
# load datafile
data <- read.table(paste0("./data/", fileName, ".txt"), header = T, sep = "\t")
data <- data %>% select(X, starts_with("DMSO"), everything(), -starts_with("NK"))
# create rownames from probeID column -- column "X"
row.names(data) <- data$X
data <- data[-1]
#######################
##### FC ANALYSIS #####
#######################
# filter lowly expressed genes
data <- filLow(data = data)
# run EdgeR
dataExpr <- exprs(data = data, x = 1, y = 10,
group = factor(c(rep("control", 5), rep("case", 5)),
levels = c("control", "case")))
}
# loop over files and run functions
for (fileName in ls){
# load datafile
data <- read.table(paste0("./data/", fileName, ".txt"), header = T, sep = "\t")
data <- data %>% select(X, starts_with("DMSO"), everything(), -starts_with("NK"))
# create rownames from probeID column -- column "X"
row.names(data) <- data$X
data <- data[-1]
#######################
##### FC ANALYSIS #####
#######################
# filter lowly expressed genes
data <- filLow(data = data)
# run EdgeR
dataExpr <- exprs(data = data, x = 1, y = 6,
group = factor(c(rep("control", 3), rep("case", 3)),
levels = c("control", "case")))
}
View(dataExpr)
# loop over files and run functions
for (fileName in ls){
# load datafile
data <- read.table(paste0("./data/", fileName, ".txt"), header = T, sep = "\t")
data <- data %>% select(X, starts_with("DMSO"), everything(), -starts_with("NK"))
# create rownames from probeID column -- column "X"
row.names(data) <- data$X
data <- data[-1]
#######################
##### FC ANALYSIS #####
#######################
# filter lowly expressed genes
data <- filLow(data = data)
# run EdgeR
dataExpr <- exprs(data = data, x = 1, y = 7,
group = factor(c(rep("control", 3), rep("case", 3)),
levels = c("control", "case")))
}
# loop over files and run functions
for (fileName in ls){
# load datafile
data <- read.table(paste0("./data/", fileName, ".txt"), header = T, sep = "\t")
data <- data %>% select(X, starts_with("DMSO"), everything(), -starts_with("NK"))
# create rownames from probeID column -- column "X"
row.names(data) <- data$X
data <- data[-1]
#######################
##### FC ANALYSIS #####
#######################
# filter lowly expressed genes
data <- filLow(data = data)
# run EdgeR
dataExpr <- exprs(data = data, x = 2, y = 6,
group = factor(c(rep("control", 3), rep("case", 3)),
levels = c("control", "case")))
}
# loop over files and run functions
for (fileName in ls){
# load datafile
data <- read.table(paste0("./data/", fileName, ".txt"), header = T, sep = "\t")
data <- data %>% select(X, starts_with("DMSO"), everything(), -starts_with("NK"))
# create rownames from probeID column -- column "X"
row.names(data) <- data$X
data <- data[-1]
#######################
##### FC ANALYSIS #####
#######################
# filter lowly expressed genes
data <- filLow(data = data)
# run EdgeR
dataExpr <- exprs(data = data, x = 2, y = 7,
group = factor(c(rep("control", 3), rep("case", 3)),
levels = c("control", "case")))
}
# loop over files and run functions
for (fileName in ls){
# load datafile
data <- read.table(paste0("./data/", fileName, ".txt"), header = T, sep = "\t")
data <- data %>% select(X, starts_with("DMSO"), everything(), -starts_with("NK"))
# create rownames from probeID column -- column "X"
row.names(data) <- data$X
data <- data[-1]
#######################
##### FC ANALYSIS #####
#######################
# filter lowly expressed genes
data <- filLow(data = data)
# run EdgeR
dataExpr <- exprs(data = data, x = 1, y = 6,
group = factor(c(rep("control", 3), rep("case", 3)),
levels = c("control", "case")))
}
# loop over files and run functions
for (fileName in ls){
# load datafile
data <- read.table(paste0("./data/", fileName, ".txt"), header = T, sep = "\t")
#  data <- data %>% select(X, starts_with("Series1"), everything())
# create rownames from probeID column -- column "X"
row.names(data) <- data$X
data <- data[-1]
#######################
##### FC ANALYSIS #####
#######################
# filter lowly expressed genes
data <- filLow(data = data)
# run EdgeR
dataExpr <- exprs(data = data, x = 1, y = 6,
group = factor(c(rep("control", 3), rep("case", 3)),
levels = c("control", "case")))
}
test = cpm(data)
View(test)
test = cpm(data, shrink=T)
test = cpm(data, shrink=T)
test2 = cpm(data)
View(test2)
View(test2)
levels = c("control, "case")
############################
##### FINISHING RESULT #####
############################
#   # clean result file, rownames (gene IDs) as first column -- match with IDs from ID file and save them
#   #dataExpr <- setDT(dataExpr, keep.rownames = TRUE)[]
#   #colnames(dataExpr)[1] <- "IDs"
#  # dataExpr <- dataExpr %>% tidyr::separate(IDs, c("gene_symbol","ID"), "_")
#
#   #vp <- EnhancedVolcano(dataExpr, title = paste0(fileName), lab = dataExpr$ID,
#                       x = 'logFC',y = 'PValue', xlim = c(min(dataExpr$logFC), max(dataExpr$logFC)), FCcutoff = 0.26, pCutoff = 0.05,
#                       col = c("grey30", "orange", "royalblue", "darkorange4"), selectLab = '', ylim = c(0, max(-log10(dataExpr$PValue))+0.5))
#
#   svg(file=paste0("./results/volcanoPlots/", fileName, ".svg"), width = 17, height = 18)
#   plot(vp)
#   dev.off()
#
#  # dataExpr <- merge.data.frame(dataExpr, INSERTID, by.x = "ID", by.y = "pid")
#  # dataExpr <- dataExpr[-2]
#
#   write.table(dataExpr, file = paste0("results/expr/expr_", fileName,".txt"), sep="\t", quote = F, row.names = F)
#
# ##################
# ##### PW ORA #####
# ##################
#
#   # ORA
#  # for now # ora(wpid2gene, wpid2name, data = dataExpr, 0.26, file = paste0(fileName))
#
# }
#
# # session information
# sessionInfo()
levels = c("control, "case")
############################
##### FINISHING RESULT #####
############################
#   # clean result file, rownames (gene IDs) as first column -- match with IDs from ID file and save them
#   #dataExpr <- setDT(dataExpr, keep.rownames = TRUE)[]
#   #colnames(dataExpr)[1] <- "IDs"
#  # dataExpr <- dataExpr %>% tidyr::separate(IDs, c("gene_symbol","ID"), "_")
#
#   #vp <- EnhancedVolcano(dataExpr, title = paste0(fileName), lab = dataExpr$ID,
#                       x = 'logFC',y = 'PValue', xlim = c(min(dataExpr$logFC), max(dataExpr$logFC)), FCcutoff = 0.26, pCutoff = 0.05,
#                       col = c("grey30", "orange", "royalblue", "darkorange4"), selectLab = '', ylim = c(0, max(-log10(dataExpr$PValue))+0.5))
#
#   svg(file=paste0("./results/volcanoPlots/", fileName, ".svg"), width = 17, height = 18)
#   plot(vp)
#   dev.off()
#
#  # dataExpr <- merge.data.frame(dataExpr, INSERTID, by.x = "ID", by.y = "pid")
#  # dataExpr <- dataExpr[-2]
#
#   write.table(dataExpr, file = paste0("results/expr/expr_", fileName,".txt"), sep="\t", quote = F, row.names = F)
#
# ##################
# ##### PW ORA #####
# ##################
#
#   # ORA
#  # for now # ora(wpid2gene, wpid2name, data = dataExpr, 0.26, file = paste0(fileName))
#
# }
#
# # session information
# sessionInfo()
levels = c("control", "case")
levels
#session information
sessionInfo()
