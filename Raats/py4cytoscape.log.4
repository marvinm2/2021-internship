Returning 'sandbox_get_from': {'filePath': 'C:\\Users\\stefa\\CytoscapeConfiguration\\filetransfer\\default_sandbox\\stefanNetwork.svg', 'modifiedTime': '2021-06-21 09:18:59.0980', 'fileByteCount': 486855}
--------------------
Here is a very exciting log message, just for you
Calling cytoscape_version_info()
Calling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
Attempting to connect to local Cytoscape
Detected local Cytoscape
HTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/setSandbox), json: {'sandboxName': 'default_sandbox', 'copySamples': True, 'reinitialize': True}
OK[200], content: {
 "data": {"sandboxPath":"C:\\Users\\stefa\\CytoscapeConfiguration\\filetransfer\\default_sandbox"},
 "errors":[]
}
HTTP GET(http://127.0.0.1:1234/v1/version)
OK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.8.2"}
Returning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2'}
Returning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2', 'automationAPIVersion': '1.2.0', 'py4cytoscapeVersion': '0.0.9'}
--------------------
Calling commands_run('session open file=" C:\\Users\\stefa\\Documents\\GitHub\\2021-internship\\Raats\\networkSigandExp.cys "')
Calling commands_get('session open file=" C:\\Users\\stefa\\Documents\\GitHub\\2021-internship\\Raats\\networkSigandExp.cys "', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/commands/session/open), params: {'file': ' C:\\Users\\stefa\\Documents\\GitHub\\2021-internship\\Raats\\networkSigandExp.cys '}
OK[200], content: Finished

Returning 'commands_get': []
Returning 'commands_run': []
--------------------
Calling get_table_column_names('node')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks/2039/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Ext","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Type","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.label","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayID","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneID","type":"String","immutable":false,"primaryKey":false},{"name":"Unnamed: 0","type":"String","immutable":false,"primaryKey":false},{"name":"logFC","type":"Double","immutable":false,"primaryKey":false},{"name":"logCPM","type":"Double","immutable":false,"primaryKey":false},{"name":"F","type":"Double","immutable":false,"primaryKey":false},{"name":"PValue","type":"Double","immutable":false,"primaryKey":false},{"name":"FDR","type":"Double","immutable":false,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Ext', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Unnamed: 0', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'logFC', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'logCPM', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'F', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'PValue', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FDR', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
Returning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'CTL.Ext', 'CTL.Type', 'CTL.PathwayName', 'CTL.label', 'CTL.PathwayID', 'CTL.GeneName', 'CTL.GeneID', 'Unnamed: 0', 'logFC', 'logCPM', 'F', 'PValue', 'FDR']
--------------------
Calling create_column_filter('only_genes_filter', 'CTL.Type', 'gene', 'IS')
Calling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None)
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling commands_post('network set current network="SUID:2039"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:2039'}
OK[200], content: {
 "data": {},
 "errors":[]
}
Returning 'commands_post': {}
Returning 'set_current_network': {}
Calling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks/2039/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Ext","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Type","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.label","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayID","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneID","type":"String","immutable":false,"primaryKey":false},{"name":"Unnamed: 0","type":"String","immutable":false,"primaryKey":false},{"name":"logFC","type":"Double","immutable":false,"primaryKey":false},{"name":"logCPM","type":"Double","immutable":false,"primaryKey":false},{"name":"F","type":"Double","immutable":false,"primaryKey":false},{"name":"PValue","type":"Double","immutable":false,"primaryKey":false},{"name":"FDR","type":"Double","immutable":false,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Ext', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Unnamed: 0', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'logFC', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'logCPM', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'F', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'PValue', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FDR', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
Returning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'CTL.Ext', 'CTL.Type', 'CTL.PathwayName', 'CTL.label', 'CTL.PathwayID', 'CTL.GeneName', 'CTL.GeneID', 'Unnamed: 0', 'logFC', 'logCPM', 'F', 'PValue', 'FDR']
Calling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/version)
OK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.8.2"}
Returning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2'}
Returning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2', 'automationAPIVersion': '1.2.0', 'py4cytoscapeVersion': '0.0.9'}
Calling cyrest_post('commands/filter/create', body={'name': 'only_genes_filter', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "gene", "columnName": "CTL.Type", "predicate": "IS", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}'}, base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'only_genes_filter', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "gene", "columnName": "CTL.Type", "predicate": "IS", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}'}
OK[200], content: {
 "data": {},
 "errors":[]
}
Returning 'cyrest_post': {'data': {}, 'errors': []}
Calling get_node_count(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks/2039/nodes/count', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/nodes/count)
OK[200], content: {"count":374}
Returning 'cyrest_get': {'count': 374}
Returning 'get_node_count': 374
Calling get_edge_count(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks/2039/edges/count', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/edges/count)
OK[200], content: {"count":429}
Returning 'cyrest_get': {'count': 429}
Returning 'get_edge_count': 429
Calling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/version)
OK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.8.2"}
Returning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2'}
Returning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2', 'automationAPIVersion': '1.2.0', 'py4cytoscapeVersion': '0.0.9'}
Calling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling get_selected_node_count(2039, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(2039, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [2868,3093,2039,152,381,78]
Returning 'cyrest_get': [2868, 3093, 2039, 152, 381, 78]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks/2039/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/nodes), params: {'column': 'selected', 'query': 'true'}
OK[200], content: [2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2150,2151,2152,2153,2154,2155,2156,2157,2158,2159,2160,2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2186,2187,2188,2189,2190,2191,2192,2193,2194,2195,2196,2197,2198,2199,2200,2201,2202,2203,2204,2205,2206,2207,2208,2209,2210,2211,2212,2213,2214,2215,2216,2217,2218,2219,2220,2221,2222,2223,2224,2225,2226,2227,2228,2229,2230,2231,2232,2233,2234,2235,2236,2237,2238,2239,2240,2241,2242,2243,2244,2245,2246,2247,2248,2249,2250,2251,2252,2253,2254,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2266,2267,2268,2269,2270,2271,2272,2273,2274,2275,2276,2277,2278,2279,2280,2281,2282,2283,2284,2285,2286,2287,2288,2289,2290,2291,2292,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315,2316,2317,2318,2319,2320,2321,2322,2323,2324,2325,2326,2327,2328,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345,2346,2347,2348,2349,2350,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2361,2362,2363,2364,2365,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2390,2391,2392,2393,2394,2395,2396,2397,2398,2399,2400,2401,2402,2403,2404,2405,2406,2407,2408,2409,2410,2411,2412,2413,2414,2415,2416,2417,2418,2419,2420,2421,2422]
Returning 'cyrest_get': [2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422]
Returning 'get_selected_node_count': 351
Calling cyrest_get('networks/2039/nodes', parameters={'column': 'selected', 'query': 'true'})
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/nodes), params: {'column': 'selected', 'query': 'true'}
OK[200], content: [2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2150,2151,2152,2153,2154,2155,2156,2157,2158,2159,2160,2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2186,2187,2188,2189,2190,2191,2192,2193,2194,2195,2196,2197,2198,2199,2200,2201,2202,2203,2204,2205,2206,2207,2208,2209,2210,2211,2212,2213,2214,2215,2216,2217,2218,2219,2220,2221,2222,2223,2224,2225,2226,2227,2228,2229,2230,2231,2232,2233,2234,2235,2236,2237,2238,2239,2240,2241,2242,2243,2244,2245,2246,2247,2248,2249,2250,2251,2252,2253,2254,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2266,2267,2268,2269,2270,2271,2272,2273,2274,2275,2276,2277,2278,2279,2280,2281,2282,2283,2284,2285,2286,2287,2288,2289,2290,2291,2292,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315,2316,2317,2318,2319,2320,2321,2322,2323,2324,2325,2326,2327,2328,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345,2346,2347,2348,2349,2350,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2361,2362,2363,2364,2365,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2390,2391,2392,2393,2394,2395,2396,2397,2398,2399,2400,2401,2402,2403,2404,2405,2406,2407,2408,2409,2410,2411,2412,2413,2414,2415,2416,2417,2418,2419,2420,2421,2422]
Returning 'cyrest_get': [2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422]
Calling get_table_columns('node', ['name'], 'default', 2039, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(2039, 'http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [2868,3093,2039,152,381,78]
Returning 'cyrest_get': [2868, 3093, 2039, 152, 381, 78]
Returning 'get_network_suid': 2039
Calling get_table_column_types('node', namespace='default', network=2039, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(2039, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [2868,3093,2039,152,381,78]
Returning 'cyrest_get': [2868, 3093, 2039, 152, 381, 78]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks/2039/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Ext","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Type","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.label","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayID","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneID","type":"String","immutable":false,"primaryKey":false},{"name":"Unnamed: 0","type":"String","immutable":false,"primaryKey":false},{"name":"logFC","type":"Double","immutable":false,"primaryKey":false},{"name":"logCPM","type":"Double","immutable":false,"primaryKey":false},{"name":"F","type":"Double","immutable":false,"primaryKey":false},{"name":"PValue","type":"Double","immutable":false,"primaryKey":false},{"name":"FDR","type":"Double","immutable":false,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Ext', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Unnamed: 0', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'logFC', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'logCPM', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'F', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'PValue', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FDR', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
Returning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'GraphID': 'String', 'Type': 'String', 'XrefId': 'String', 'XrefDatasource': 'String', 'Color': 'String', 'Border Width': 'Double', 'Node Size': 'Double', 'Label Font Size': 'Double', 'Ensembl': 'String', 'CTL.Ext': 'String', 'CTL.Type': 'String', 'CTL.PathwayName': 'String', 'CTL.label': 'String', 'CTL.PathwayID': 'String', 'CTL.GeneName': 'String', 'CTL.GeneID': 'String', 'Unnamed: 0': 'String', 'logFC': 'Double', 'logCPM': 'Double', 'F': 'Double', 'PValue': 'Double', 'FDR': 'Double'}
Calling cyrest_get('networks/2039/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/tables/defaultnode/columns/SUID)
OK[200], content: {"name":"SUID","values":[2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2150,2151,2152,2153,2154,2155,2156,2157,2158,2159,2160,2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2186,2187,2188,2189,2190,2191,2192,2193,2194,2195,2196,2197,2198,2199,2200,2201,2202,2203,2204,2205,2206,2207,2208,2209,2210,2211,2212,2213,2214,2215,2216,2217,2218,2219,2220,2221,2222,2223,2224,2225,2226,2227,2228,2229,2230,2231,2232,2233,2234,2235,2236,2237,2238,2239,2240,2241,2242,2243,2244,2245,2246,2247,2248,2249,2250,2251,2252,2253,2254,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2266,2267,2268,2269,2270,2271,2272,2273,2274,2275,2276,2277,2278,2279,2280,2281,2282,2283,2284,2285,2286,2287,2288,2289,2290,2291,2292,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315,2316,2317,2318,2319,2320,2321,2322,2323,2324,2325,2326,2327,2328,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345,2346,2347,2348,2349,2350,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2361,2362,2363,2364,2365,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2390,2391,2392,2393,2394,2395,2396,2397,2398,2399,2400,2401,2402,2403,2404,2405,2406,2407,2408,2409,2410,2411,2412,2413,2414,2415,2416,2417,2418,2419,2420,2421,2422]}
Returning 'cyrest_get': {'name': 'SUID', 'values': [2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422]}
Calling cyrest_get('networks/2039/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/tables/defaultnode/columns/name)
OK[200], content: {"name":"name","values":["Overview of proinflammatory and profibrotic mediators","Kinin-Kallikrein Pathway","Increased, Prostaglandin E2 secretion","ACE2 inhibition","Angiotensin II receptor type 1 pathway","Binding of agonist, Angiotensin II receptor type 1 receptor (AT1R)","Collagen biosynthesis and modifying enzymes","KE1276: Lung Fibrosis","KE68: Collagen Accumulation","KE1743: Increased plasma Angiotensin II","KE1752: Increased Angiotensin II","NF-KB pathway","Oxidative stress","KE1740: ACE2 inhibition","Bradykinin system, hyperactivated","Renin Angiotensin Aldosterone System","Increased, Reactive oxygen species","Metabolism of Angiotensinogen to Angiotensins","Increase activation, Nuclear factor kappa B (NF-kB)","Increased, secretion of proinflammatory and profibrotic mediators","Bradykinin receptor B1 activation","Bradykinin signaling network","Prostaglandin signaling","COL1A1","COL3A1","COL1A2","COL4A4","SERPINH1","COL5A3","BMP1","P4HA1","COL11A2","COL11A1","COL6A2","COL5A1","PPIB","COL9A1","CRTAP","ADAMTS2","P4HA2","COL4A1","COL5A2","P4HB","COL4A2","COL2A1","PLOD1","PLOD2","COL7A1","COL10A1","COL23A1","COL26A1","COL12A1","COL13A1","COL25A1","COL17A1","COL6A1","COL15A1","COL14A1","COL16A1","COL19A1","COL18A1","P3H1","P3H2","COLGALT1","COL4A6","COL9A3","COL9A2","CTSD","AGT","CMA1","CPB2","ACE2","REN","ACE","CES1","CTSZ","MME","ANPEP","CTSG","GZMH","ATP6AP2","TLL1","ADAMTS14","COL4A3","ADAMTS3","COL4A5","PCOLCE","COL24A1","COL8A2","COL8A1","COL27A1","TLL2","COL6A3","P3H3","COLGALT2","P4HA3","COL6A6","COL6A5","COL20A1","PLOD3","COL28A1","COL21A1","COL22A1","PCOLCE2","CPB1","CPA3","ENPEP","C9orf3","IL12A","PYCARD","IRF7","PTGES","IL37","CXCL16","IFNL3","TGFBR1","IL17C","RACK1","PF4","TGFB1","CCL23","CCL21","NOX4","IL17D","MAS1","IL27","IFNA16","TGFBR2","ACTA2","IL1A","IFNA4","RAF1","CCL2","PTPN11","F12","IL1B","SMAD3","CXCL12","JUND","CXCL9","IL11RA","IL6","IL11","IL25","IL36G","RRAS","AGTR1","CXCL8","MAP2K6","IFNG","SP1","IFNA8","CCL5","IL6ST","TNFSF13","CCL7","SMAD4","NFKB1","MAPK1","CCL11","PDGFD","SERPING1","CXCL5","CPN1","OSM","BDKRB2","HIF1A","CTGF","CXCL2","KNG1","CCL4","BDKRB1","CCL18","KLKB1","IL10","IFNA5","CXCL14","IL3","CCL13","CX3CL1","CCL24","IFNA13","CCL4L2","IL33","IL9","IFNK","IL21","VEGFA","IL22","IL12B","LIF","IL5","IL15","CSF3","CSF1","AREG","CTF1","IFNA1","CNTF","CCL15","IL36B","IFNW1","IL36RN","CXCL6","IFNA17","CXCL3","IL1F10","IFNA14","IFNA7","CSF2","IFNA10","IFNB1","MMP1","IL20","PPBP","IL7","CCL19","CCL17","CCL20","TNFSF13B","AHR","IL2","CASP1","CCL22","IL17F","EPO","IFNA21","IL17A","IFNL1","CCR2","IFNA6","PTGER2","CCL25","CCL28","SPP1","CXCL1","IL23A","CCL3","MMP9","EBI3","IL26","IL19","CD28","IFNL2","KLRD1","CCL16","CXCL10","CCL1","TNF","IL36A","NLRP3","IL24","TSLP","PIK3CG","CCL8","PTGER4","CXCL17","CXCL13","IL18","CCL26","IFNA2","IL4","IL13","LTA","CCL14","CCL3L3","XCL2","IL17B","MMP3","IL1RN","XCL1","IL31","PF4V1","CXCL11","AGTR2","NOS3","NR3C2","CYP11B2","CYP11A1","ATF6B","CALML3","CALML3","CALML3","CAMK1","CAMK1","CAMK2A","CYP11A1","CAMK2D","CAMK2D","CAMK2G","CAMK2G","CAMK4","CREB3","CAMK2A","CAMK2A","CAMK2B","CAMK2B","CREB3","CREB3L1","ITPR3","CREB3L1","CREB3L3","CREB3L3","GNAQ","GNAQ","ITPR1","ITPR1","ITPR3","ATF2","ATF4","CALM1","CREB1","CREB3L2","CREB3L2","CREB3L4","CREB5","CREB5","CALM2","CALM3","CALML4","CALML4","CALML5","CALML6","ITPR2","ATF1","PLCB2","PLCB2","HSD3B1","HSD3B2","HSD3B2","STAR","CYP21A2","HSD3B1","CAMK1D","CAMK1G","CAMK1G","STAR","CHUK","IKBKG","IKBKB","NFKBIA","RELA","REL","NFKBIE","CYP1A1","NQO1","FOS","MAPK14","CYBB","NFE2L2","MAPK10","GPX1","SOD1","SOD2","HMOX1","GCLC","CAT","UGT1A6","MAOA","GPX3","XDH","SOD3","MT1X","JUNB","TXNRD2","TXNRD1","GSR","GSTT2","NOX1","MGST1","NFIX","TXN2","NOX5","NOX3"]}
Returning 'cyrest_get': {'name': 'name', 'values': ['Overview of proinflammatory and profibrotic mediators', 'Kinin-Kallikrein Pathway', 'Increased, Prostaglandin E2 secretion', 'ACE2 inhibition', 'Angiotensin II receptor type 1 pathway', 'Binding of agonist, Angiotensin II receptor type 1 receptor (AT1R)', 'Collagen biosynthesis and modifying enzymes', 'KE1276: Lung Fibrosis', 'KE68: Collagen Accumulation', 'KE1743: Increased plasma Angiotensin II', 'KE1752: Increased Angiotensin II', 'NF-KB pathway', 'Oxidative stress', 'KE1740: ACE2 inhibition', 'Bradykinin system, hyperactivated', 'Renin Angiotensin Aldosterone System', 'Increased, Reactive oxygen species', 'Metabolism of Angiotensinogen to Angiotensins', 'Increase activation, Nuclear factor kappa B (NF-kB)', 'Increased, secretion of proinflammatory and profibrotic mediators', 'Bradykinin receptor B1 activation', 'Bradykinin signaling network', 'Prostaglandin signaling', 'COL1A1', 'COL3A1', 'COL1A2', 'COL4A4', 'SERPINH1', 'COL5A3', 'BMP1', 'P4HA1', 'COL11A2', 'COL11A1', 'COL6A2', 'COL5A1', 'PPIB', 'COL9A1', 'CRTAP', 'ADAMTS2', 'P4HA2', 'COL4A1', 'COL5A2', 'P4HB', 'COL4A2', 'COL2A1', 'PLOD1', 'PLOD2', 'COL7A1', 'COL10A1', 'COL23A1', 'COL26A1', 'COL12A1', 'COL13A1', 'COL25A1', 'COL17A1', 'COL6A1', 'COL15A1', 'COL14A1', 'COL16A1', 'COL19A1', 'COL18A1', 'P3H1', 'P3H2', 'COLGALT1', 'COL4A6', 'COL9A3', 'COL9A2', 'CTSD', 'AGT', 'CMA1', 'CPB2', 'ACE2', 'REN', 'ACE', 'CES1', 'CTSZ', 'MME', 'ANPEP', 'CTSG', 'GZMH', 'ATP6AP2', 'TLL1', 'ADAMTS14', 'COL4A3', 'ADAMTS3', 'COL4A5', 'PCOLCE', 'COL24A1', 'COL8A2', 'COL8A1', 'COL27A1', 'TLL2', 'COL6A3', 'P3H3', 'COLGALT2', 'P4HA3', 'COL6A6', 'COL6A5', 'COL20A1', 'PLOD3', 'COL28A1', 'COL21A1', 'COL22A1', 'PCOLCE2', 'CPB1', 'CPA3', 'ENPEP', 'C9orf3', 'IL12A', 'PYCARD', 'IRF7', 'PTGES', 'IL37', 'CXCL16', 'IFNL3', 'TGFBR1', 'IL17C', 'RACK1', 'PF4', 'TGFB1', 'CCL23', 'CCL21', 'NOX4', 'IL17D', 'MAS1', 'IL27', 'IFNA16', 'TGFBR2', 'ACTA2', 'IL1A', 'IFNA4', 'RAF1', 'CCL2', 'PTPN11', 'F12', 'IL1B', 'SMAD3', 'CXCL12', 'JUND', 'CXCL9', 'IL11RA', 'IL6', 'IL11', 'IL25', 'IL36G', 'RRAS', 'AGTR1', 'CXCL8', 'MAP2K6', 'IFNG', 'SP1', 'IFNA8', 'CCL5', 'IL6ST', 'TNFSF13', 'CCL7', 'SMAD4', 'NFKB1', 'MAPK1', 'CCL11', 'PDGFD', 'SERPING1', 'CXCL5', 'CPN1', 'OSM', 'BDKRB2', 'HIF1A', 'CTGF', 'CXCL2', 'KNG1', 'CCL4', 'BDKRB1', 'CCL18', 'KLKB1', 'IL10', 'IFNA5', 'CXCL14', 'IL3', 'CCL13', 'CX3CL1', 'CCL24', 'IFNA13', 'CCL4L2', 'IL33', 'IL9', 'IFNK', 'IL21', 'VEGFA', 'IL22', 'IL12B', 'LIF', 'IL5', 'IL15', 'CSF3', 'CSF1', 'AREG', 'CTF1', 'IFNA1', 'CNTF', 'CCL15', 'IL36B', 'IFNW1', 'IL36RN', 'CXCL6', 'IFNA17', 'CXCL3', 'IL1F10', 'IFNA14', 'IFNA7', 'CSF2', 'IFNA10', 'IFNB1', 'MMP1', 'IL20', 'PPBP', 'IL7', 'CCL19', 'CCL17', 'CCL20', 'TNFSF13B', 'AHR', 'IL2', 'CASP1', 'CCL22', 'IL17F', 'EPO', 'IFNA21', 'IL17A', 'IFNL1', 'CCR2', 'IFNA6', 'PTGER2', 'CCL25', 'CCL28', 'SPP1', 'CXCL1', 'IL23A', 'CCL3', 'MMP9', 'EBI3', 'IL26', 'IL19', 'CD28', 'IFNL2', 'KLRD1', 'CCL16', 'CXCL10', 'CCL1', 'TNF', 'IL36A', 'NLRP3', 'IL24', 'TSLP', 'PIK3CG', 'CCL8', 'PTGER4', 'CXCL17', 'CXCL13', 'IL18', 'CCL26', 'IFNA2', 'IL4', 'IL13', 'LTA', 'CCL14', 'CCL3L3', 'XCL2', 'IL17B', 'MMP3', 'IL1RN', 'XCL1', 'IL31', 'PF4V1', 'CXCL11', 'AGTR2', 'NOS3', 'NR3C2', 'CYP11B2', 'CYP11A1', 'ATF6B', 'CALML3', 'CALML3', 'CALML3', 'CAMK1', 'CAMK1', 'CAMK2A', 'CYP11A1', 'CAMK2D', 'CAMK2D', 'CAMK2G', 'CAMK2G', 'CAMK4', 'CREB3', 'CAMK2A', 'CAMK2A', 'CAMK2B', 'CAMK2B', 'CREB3', 'CREB3L1', 'ITPR3', 'CREB3L1', 'CREB3L3', 'CREB3L3', 'GNAQ', 'GNAQ', 'ITPR1', 'ITPR1', 'ITPR3', 'ATF2', 'ATF4', 'CALM1', 'CREB1', 'CREB3L2', 'CREB3L2', 'CREB3L4', 'CREB5', 'CREB5', 'CALM2', 'CALM3', 'CALML4', 'CALML4', 'CALML5', 'CALML6', 'ITPR2', 'ATF1', 'PLCB2', 'PLCB2', 'HSD3B1', 'HSD3B2', 'HSD3B2', 'STAR', 'CYP21A2', 'HSD3B1', 'CAMK1D', 'CAMK1G', 'CAMK1G', 'STAR', 'CHUK', 'IKBKG', 'IKBKB', 'NFKBIA', 'RELA', 'REL', 'NFKBIE', 'CYP1A1', 'NQO1', 'FOS', 'MAPK14', 'CYBB', 'NFE2L2', 'MAPK10', 'GPX1', 'SOD1', 'SOD2', 'HMOX1', 'GCLC', 'CAT', 'UGT1A6', 'MAOA', 'GPX3', 'XDH', 'SOD3', 'MT1X', 'JUNB', 'TXNRD2', 'TXNRD1', 'GSR', 'GSTT2', 'NOX1', 'MGST1', 'NFIX', 'TXN2', 'NOX5', 'NOX3']}
Returning 'get_table_columns':                                                    name
2049  Overview of proinflammatory and profibrotic me...
2050                           Kinin-Kallikrein Pathway
2051              Increased, Prostaglandin E2 secretion
2052                                    ACE2 inhibition
2053             Angiotensin II receptor type 1 pathway
...                                                 ...
2418                                              MGST1
2419                                               NFIX
2420                                               TXN2
2421                                               NOX5
2422                                               NOX3

[374 rows x 1 columns]
Returning 'get_selected_nodes': ['COL1A1', 'COL3A1', 'COL1A2', 'COL4A4', 'SERPINH1', 'COL5A3', 'BMP1', 'P4HA1', 'COL11A2', 'COL11A1', 'COL6A2', 'COL5A1', 'PPIB', 'COL9A1', 'CRTAP', 'ADAMTS2', 'P4HA2', 'COL4A1', 'COL5A2', 'P4HB', 'COL4A2', 'COL2A1', 'PLOD1', 'PLOD2', 'COL7A1', 'COL10A1', 'COL23A1', 'COL26A1', 'COL12A1', 'COL13A1', 'COL25A1', 'COL17A1', 'COL6A1', 'COL15A1', 'COL14A1', 'COL16A1', 'COL19A1', 'COL18A1', 'P3H1', 'P3H2', 'COLGALT1', 'COL4A6', 'COL9A3', 'COL9A2', 'CTSD', 'AGT', 'CMA1', 'CPB2', 'ACE2', 'REN', 'ACE', 'CES1', 'CTSZ', 'MME', 'ANPEP', 'CTSG', 'GZMH', 'ATP6AP2', 'TLL1', 'ADAMTS14', 'COL4A3', 'ADAMTS3', 'COL4A5', 'PCOLCE', 'COL24A1', 'COL8A2', 'COL8A1', 'COL27A1', 'TLL2', 'COL6A3', 'P3H3', 'COLGALT2', 'P4HA3', 'COL6A6', 'COL6A5', 'COL20A1', 'PLOD3', 'COL28A1', 'COL21A1', 'COL22A1', 'PCOLCE2', 'CPB1', 'CPA3', 'ENPEP', 'C9orf3', 'IL12A', 'PYCARD', 'IRF7', 'PTGES', 'IL37', 'CXCL16', 'IFNL3', 'TGFBR1', 'IL17C', 'RACK1', 'PF4', 'TGFB1', 'CCL23', 'CCL21', 'NOX4', 'IL17D', 'MAS1', 'IL27', 'IFNA16', 'TGFBR2', 'ACTA2', 'IL1A', 'IFNA4', 'RAF1', 'CCL2', 'PTPN11', 'F12', 'IL1B', 'SMAD3', 'CXCL12', 'JUND', 'CXCL9', 'IL11RA', 'IL6', 'IL11', 'IL25', 'IL36G', 'RRAS', 'AGTR1', 'CXCL8', 'MAP2K6', 'IFNG', 'SP1', 'IFNA8', 'CCL5', 'IL6ST', 'TNFSF13', 'CCL7', 'SMAD4', 'NFKB1', 'MAPK1', 'CCL11', 'PDGFD', 'SERPING1', 'CXCL5', 'CPN1', 'OSM', 'BDKRB2', 'HIF1A', 'CTGF', 'CXCL2', 'KNG1', 'CCL4', 'BDKRB1', 'CCL18', 'KLKB1', 'IL10', 'IFNA5', 'CXCL14', 'IL3', 'CCL13', 'CX3CL1', 'CCL24', 'IFNA13', 'CCL4L2', 'IL33', 'IL9', 'IFNK', 'IL21', 'VEGFA', 'IL22', 'IL12B', 'LIF', 'IL5', 'IL15', 'CSF3', 'CSF1', 'AREG', 'CTF1', 'IFNA1', 'CNTF', 'CCL15', 'IL36B', 'IFNW1', 'IL36RN', 'CXCL6', 'IFNA17', 'CXCL3', 'IL1F10', 'IFNA14', 'IFNA7', 'CSF2', 'IFNA10', 'IFNB1', 'MMP1', 'IL20', 'PPBP', 'IL7', 'CCL19', 'CCL17', 'CCL20', 'TNFSF13B', 'AHR', 'IL2', 'CASP1', 'CCL22', 'IL17F', 'EPO', 'IFNA21', 'IL17A', 'IFNL1', 'CCR2', 'IFNA6', 'PTGER2', 'CCL25', 'CCL28', 'SPP1', 'CXCL1', 'IL23A', 'CCL3', 'MMP9', 'EBI3', 'IL26', 'IL19', 'CD28', 'IFNL2', 'KLRD1', 'CCL16', 'CXCL10', 'CCL1', 'TNF', 'IL36A', 'NLRP3', 'IL24', 'TSLP', 'PIK3CG', 'CCL8', 'PTGER4', 'CXCL17', 'CXCL13', 'IL18', 'CCL26', 'IFNA2', 'IL4', 'IL13', 'LTA', 'CCL14', 'CCL3L3', 'XCL2', 'IL17B', 'MMP3', 'IL1RN', 'XCL1', 'IL31', 'PF4V1', 'CXCL11', 'AGTR2', 'NOS3', 'NR3C2', 'CYP11B2', 'CYP11A1', 'ATF6B', 'CALML3', 'CALML3', 'CALML3', 'CAMK1', 'CAMK1', 'CAMK2A', 'CYP11A1', 'CAMK2D', 'CAMK2D', 'CAMK2G', 'CAMK2G', 'CAMK4', 'CREB3', 'CAMK2A', 'CAMK2A', 'CAMK2B', 'CAMK2B', 'CREB3', 'CREB3L1', 'ITPR3', 'CREB3L1', 'CREB3L3', 'CREB3L3', 'GNAQ', 'GNAQ', 'ITPR1', 'ITPR1', 'ITPR3', 'ATF2', 'ATF4', 'CALM1', 'CREB1', 'CREB3L2', 'CREB3L2', 'CREB3L4', 'CREB5', 'CREB5', 'CALM2', 'CALM3', 'CALML4', 'CALML4', 'CALML5', 'CALML6', 'ITPR2', 'ATF1', 'PLCB2', 'PLCB2', 'HSD3B1', 'HSD3B2', 'HSD3B2', 'STAR', 'CYP21A2', 'HSD3B1', 'CAMK1D', 'CAMK1G', 'CAMK1G', 'STAR', 'CHUK', 'IKBKG', 'IKBKB', 'NFKBIA', 'RELA', 'REL', 'NFKBIE', 'CYP1A1', 'NQO1', 'FOS', 'MAPK14', 'CYBB', 'NFE2L2', 'MAPK10', 'GPX1', 'SOD1', 'SOD2', 'HMOX1', 'GCLC', 'CAT', 'UGT1A6', 'MAOA', 'GPX3', 'XDH', 'SOD3', 'MT1X', 'JUNB', 'TXNRD2', 'TXNRD1', 'GSR', 'GSTT2', 'NOX1', 'MGST1', 'NFIX', 'TXN2', 'NOX5', 'NOX3']
Calling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling get_selected_edge_count(2039, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(2039, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [2868,3093,2039,152,381,78]
Returning 'cyrest_get': [2868, 3093, 2039, 152, 381, 78]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks/2039/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/edges), params: {'column': 'selected', 'query': 'true'}
OK[200], content: []
Returning 'cyrest_get': []
Returning 'get_selected_edge_count': 0
Returning 'get_selected_edges': None
Returning 'create_column_filter': {'nodes': ['COL1A1', 'COL3A1', 'COL1A2', 'COL4A4', 'SERPINH1', 'COL5A3', 'BMP1', 'P4HA1', 'COL11A2', 'COL11A1', 'COL6A2', 'COL5A1', 'PPIB', 'COL9A1', 'CRTAP', 'ADAMTS2', 'P4HA2', 'COL4A1', 'COL5A2', 'P4HB', 'COL4A2', 'COL2A1', 'PLOD1', 'PLOD2', 'COL7A1', 'COL10A1', 'COL23A1', 'COL26A1', 'COL12A1', 'COL13A1', 'COL25A1', 'COL17A1', 'COL6A1', 'COL15A1', 'COL14A1', 'COL16A1', 'COL19A1', 'COL18A1', 'P3H1', 'P3H2', 'COLGALT1', 'COL4A6', 'COL9A3', 'COL9A2', 'CTSD', 'AGT', 'CMA1', 'CPB2', 'ACE2', 'REN', 'ACE', 'CES1', 'CTSZ', 'MME', 'ANPEP', 'CTSG', 'GZMH', 'ATP6AP2', 'TLL1', 'ADAMTS14', 'COL4A3', 'ADAMTS3', 'COL4A5', 'PCOLCE', 'COL24A1', 'COL8A2', 'COL8A1', 'COL27A1', 'TLL2', 'COL6A3', 'P3H3', 'COLGALT2', 'P4HA3', 'COL6A6', 'COL6A5', 'COL20A1', 'PLOD3', 'COL28A1', 'COL21A1', 'COL22A1', 'PCOLCE2', 'CPB1', 'CPA3', 'ENPEP', 'C9orf3', 'IL12A', 'PYCARD', 'IRF7', 'PTGES', 'IL37', 'CXCL16', 'IFNL3', 'TGFBR1', 'IL17C', 'RACK1', 'PF4', 'TGFB1', 'CCL23', 'CCL21', 'NOX4', 'IL17D', 'MAS1', 'IL27', 'IFNA16', 'TGFBR2', 'ACTA2', 'IL1A', 'IFNA4', 'RAF1', 'CCL2', 'PTPN11', 'F12', 'IL1B', 'SMAD3', 'CXCL12', 'JUND', 'CXCL9', 'IL11RA', 'IL6', 'IL11', 'IL25', 'IL36G', 'RRAS', 'AGTR1', 'CXCL8', 'MAP2K6', 'IFNG', 'SP1', 'IFNA8', 'CCL5', 'IL6ST', 'TNFSF13', 'CCL7', 'SMAD4', 'NFKB1', 'MAPK1', 'CCL11', 'PDGFD', 'SERPING1', 'CXCL5', 'CPN1', 'OSM', 'BDKRB2', 'HIF1A', 'CTGF', 'CXCL2', 'KNG1', 'CCL4', 'BDKRB1', 'CCL18', 'KLKB1', 'IL10', 'IFNA5', 'CXCL14', 'IL3', 'CCL13', 'CX3CL1', 'CCL24', 'IFNA13', 'CCL4L2', 'IL33', 'IL9', 'IFNK', 'IL21', 'VEGFA', 'IL22', 'IL12B', 'LIF', 'IL5', 'IL15', 'CSF3', 'CSF1', 'AREG', 'CTF1', 'IFNA1', 'CNTF', 'CCL15', 'IL36B', 'IFNW1', 'IL36RN', 'CXCL6', 'IFNA17', 'CXCL3', 'IL1F10', 'IFNA14', 'IFNA7', 'CSF2', 'IFNA10', 'IFNB1', 'MMP1', 'IL20', 'PPBP', 'IL7', 'CCL19', 'CCL17', 'CCL20', 'TNFSF13B', 'AHR', 'IL2', 'CASP1', 'CCL22', 'IL17F', 'EPO', 'IFNA21', 'IL17A', 'IFNL1', 'CCR2', 'IFNA6', 'PTGER2', 'CCL25', 'CCL28', 'SPP1', 'CXCL1', 'IL23A', 'CCL3', 'MMP9', 'EBI3', 'IL26', 'IL19', 'CD28', 'IFNL2', 'KLRD1', 'CCL16', 'CXCL10', 'CCL1', 'TNF', 'IL36A', 'NLRP3', 'IL24', 'TSLP', 'PIK3CG', 'CCL8', 'PTGER4', 'CXCL17', 'CXCL13', 'IL18', 'CCL26', 'IFNA2', 'IL4', 'IL13', 'LTA', 'CCL14', 'CCL3L3', 'XCL2', 'IL17B', 'MMP3', 'IL1RN', 'XCL1', 'IL31', 'PF4V1', 'CXCL11', 'AGTR2', 'NOS3', 'NR3C2', 'CYP11B2', 'CYP11A1', 'ATF6B', 'CALML3', 'CALML3', 'CALML3', 'CAMK1', 'CAMK1', 'CAMK2A', 'CYP11A1', 'CAMK2D', 'CAMK2D', 'CAMK2G', 'CAMK2G', 'CAMK4', 'CREB3', 'CAMK2A', 'CAMK2A', 'CAMK2B', 'CAMK2B', 'CREB3', 'CREB3L1', 'ITPR3', 'CREB3L1', 'CREB3L3', 'CREB3L3', 'GNAQ', 'GNAQ', 'ITPR1', 'ITPR1', 'ITPR3', 'ATF2', 'ATF4', 'CALM1', 'CREB1', 'CREB3L2', 'CREB3L2', 'CREB3L4', 'CREB5', 'CREB5', 'CALM2', 'CALM3', 'CALML4', 'CALML4', 'CALML5', 'CALML6', 'ITPR2', 'ATF1', 'PLCB2', 'PLCB2', 'HSD3B1', 'HSD3B2', 'HSD3B2', 'STAR', 'CYP21A2', 'HSD3B1', 'CAMK1D', 'CAMK1G', 'CAMK1G', 'STAR', 'CHUK', 'IKBKG', 'IKBKB', 'NFKBIA', 'RELA', 'REL', 'NFKBIE', 'CYP1A1', 'NQO1', 'FOS', 'MAPK14', 'CYBB', 'NFE2L2', 'MAPK10', 'GPX1', 'SOD1', 'SOD2', 'HMOX1', 'GCLC', 'CAT', 'UGT1A6', 'MAOA', 'GPX3', 'XDH', 'SOD3', 'MT1X', 'JUNB', 'TXNRD2', 'TXNRD1', 'GSR', 'GSTT2', 'NOX1', 'MGST1', 'NFIX', 'TXN2', 'NOX5', 'NOX3'], 'edges': None}
--------------------
Calling create_column_filter('no_expr_data', 'logFC', [-1000, 1000], 'IS_NOT_BETWEEN')
Calling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None)
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling commands_post('network set current network="SUID:2039"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:2039'}
OK[200], content: {
 "data": {},
 "errors":[]
}
Returning 'commands_post': {}
Returning 'set_current_network': {}
Calling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks/2039/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Ext","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Type","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.label","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayID","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneID","type":"String","immutable":false,"primaryKey":false},{"name":"Unnamed: 0","type":"String","immutable":false,"primaryKey":false},{"name":"logFC","type":"Double","immutable":false,"primaryKey":false},{"name":"logCPM","type":"Double","immutable":false,"primaryKey":false},{"name":"F","type":"Double","immutable":false,"primaryKey":false},{"name":"PValue","type":"Double","immutable":false,"primaryKey":false},{"name":"FDR","type":"Double","immutable":false,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Ext', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Unnamed: 0', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'logFC', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'logCPM', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'F', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'PValue', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FDR', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
Returning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'CTL.Ext', 'CTL.Type', 'CTL.PathwayName', 'CTL.label', 'CTL.PathwayID', 'CTL.GeneName', 'CTL.GeneID', 'Unnamed: 0', 'logFC', 'logCPM', 'F', 'PValue', 'FDR']
Calling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/version)
OK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.8.2"}
Returning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2'}
Returning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2', 'automationAPIVersion': '1.2.0', 'py4cytoscapeVersion': '0.0.9'}
Calling cyrest_post('commands/filter/create', body={'name': 'no_expr_data', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": [-1000, 1000], "columnName": "logFC", "predicate": "IS_NOT_BETWEEN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}'}, base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'no_expr_data', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": [-1000, 1000], "columnName": "logFC", "predicate": "IS_NOT_BETWEEN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}'}
OK[200], content: {
 "data": {},
 "errors":[]
}
Returning 'cyrest_post': {'data': {}, 'errors': []}
Calling get_node_count(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks/2039/nodes/count', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/nodes/count)
OK[200], content: {"count":374}
Returning 'cyrest_get': {'count': 374}
Returning 'get_node_count': 374
Calling get_edge_count(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks/2039/edges/count', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/edges/count)
OK[200], content: {"count":429}
Returning 'cyrest_get': {'count': 429}
Returning 'get_edge_count': 429
Calling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/version)
OK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.8.2"}
Returning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2'}
Returning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2', 'automationAPIVersion': '1.2.0', 'py4cytoscapeVersion': '0.0.9'}
Calling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling get_selected_node_count(2039, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(2039, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [2868,3093,2039,152,381,78]
Returning 'cyrest_get': [2868, 3093, 2039, 152, 381, 78]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks/2039/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/nodes), params: {'column': 'selected', 'query': 'true'}
OK[200], content: [2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2073,2081,2085,2087,2093,2097,2099,2102,2105,2106,2108,2110,2111,2112,2114,2117,2118,2119,2127,2128,2136,2142,2143,2145,2146,2147,2153,2154,2155,2161,2163,2166,2167,2169,2170,2171,2172,2173,2174,2175,2179,2181,2186,2188,2192,2195,2196,2198,2200,2204,2208,2212,2213,2218,2219,2221,2222,2223,2224,2226,2227,2229,2230,2231,2233,2234,2235,2237,2238,2240,2246,2247,2248,2249,2250,2253,2255,2256,2257,2259,2260,2262,2264,2265,2266,2270,2273,2274,2275,2276,2277,2278,2279,2280,2281,2286,2288,2289,2291,2292,2293,2294,2296,2299,2300,2302,2303,2306,2309,2310,2311,2312,2313,2314,2315,2316,2319,2320,2321,2323,2326,2327,2334,2335,2340,2342,2343,2344,2345,2350,2351,2376,2377,2378,2381,2383,2384,2397,2417,2421,2422]
Returning 'cyrest_get': [2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2073, 2081, 2085, 2087, 2093, 2097, 2099, 2102, 2105, 2106, 2108, 2110, 2111, 2112, 2114, 2117, 2118, 2119, 2127, 2128, 2136, 2142, 2143, 2145, 2146, 2147, 2153, 2154, 2155, 2161, 2163, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2179, 2181, 2186, 2188, 2192, 2195, 2196, 2198, 2200, 2204, 2208, 2212, 2213, 2218, 2219, 2221, 2222, 2223, 2224, 2226, 2227, 2229, 2230, 2231, 2233, 2234, 2235, 2237, 2238, 2240, 2246, 2247, 2248, 2249, 2250, 2253, 2255, 2256, 2257, 2259, 2260, 2262, 2264, 2265, 2266, 2270, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2286, 2288, 2289, 2291, 2292, 2293, 2294, 2296, 2299, 2300, 2302, 2303, 2306, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2319, 2320, 2321, 2323, 2326, 2327, 2334, 2335, 2340, 2342, 2343, 2344, 2345, 2350, 2351, 2376, 2377, 2378, 2381, 2383, 2384, 2397, 2417, 2421, 2422]
Returning 'get_selected_node_count': 164
Calling cyrest_get('networks/2039/nodes', parameters={'column': 'selected', 'query': 'true'})
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/nodes), params: {'column': 'selected', 'query': 'true'}
OK[200], content: [2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2073,2081,2085,2087,2093,2097,2099,2102,2105,2106,2108,2110,2111,2112,2114,2117,2118,2119,2127,2128,2136,2142,2143,2145,2146,2147,2153,2154,2155,2161,2163,2166,2167,2169,2170,2171,2172,2173,2174,2175,2179,2181,2186,2188,2192,2195,2196,2198,2200,2204,2208,2212,2213,2218,2219,2221,2222,2223,2224,2226,2227,2229,2230,2231,2233,2234,2235,2237,2238,2240,2246,2247,2248,2249,2250,2253,2255,2256,2257,2259,2260,2262,2264,2265,2266,2270,2273,2274,2275,2276,2277,2278,2279,2280,2281,2286,2288,2289,2291,2292,2293,2294,2296,2299,2300,2302,2303,2306,2309,2310,2311,2312,2313,2314,2315,2316,2319,2320,2321,2323,2326,2327,2334,2335,2340,2342,2343,2344,2345,2350,2351,2376,2377,2378,2381,2383,2384,2397,2417,2421,2422]
Returning 'cyrest_get': [2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2073, 2081, 2085, 2087, 2093, 2097, 2099, 2102, 2105, 2106, 2108, 2110, 2111, 2112, 2114, 2117, 2118, 2119, 2127, 2128, 2136, 2142, 2143, 2145, 2146, 2147, 2153, 2154, 2155, 2161, 2163, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2179, 2181, 2186, 2188, 2192, 2195, 2196, 2198, 2200, 2204, 2208, 2212, 2213, 2218, 2219, 2221, 2222, 2223, 2224, 2226, 2227, 2229, 2230, 2231, 2233, 2234, 2235, 2237, 2238, 2240, 2246, 2247, 2248, 2249, 2250, 2253, 2255, 2256, 2257, 2259, 2260, 2262, 2264, 2265, 2266, 2270, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2286, 2288, 2289, 2291, 2292, 2293, 2294, 2296, 2299, 2300, 2302, 2303, 2306, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2319, 2320, 2321, 2323, 2326, 2327, 2334, 2335, 2340, 2342, 2343, 2344, 2345, 2350, 2351, 2376, 2377, 2378, 2381, 2383, 2384, 2397, 2417, 2421, 2422]
Calling get_table_columns('node', ['name'], 'default', 2039, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(2039, 'http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [2868,3093,2039,152,381,78]
Returning 'cyrest_get': [2868, 3093, 2039, 152, 381, 78]
Returning 'get_network_suid': 2039
Calling get_table_column_types('node', namespace='default', network=2039, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(2039, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [2868,3093,2039,152,381,78]
Returning 'cyrest_get': [2868, 3093, 2039, 152, 381, 78]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks/2039/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Ext","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Type","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.label","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayID","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneID","type":"String","immutable":false,"primaryKey":false},{"name":"Unnamed: 0","type":"String","immutable":false,"primaryKey":false},{"name":"logFC","type":"Double","immutable":false,"primaryKey":false},{"name":"logCPM","type":"Double","immutable":false,"primaryKey":false},{"name":"F","type":"Double","immutable":false,"primaryKey":false},{"name":"PValue","type":"Double","immutable":false,"primaryKey":false},{"name":"FDR","type":"Double","immutable":false,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Ext', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Unnamed: 0', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'logFC', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'logCPM', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'F', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'PValue', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FDR', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
Returning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'GraphID': 'String', 'Type': 'String', 'XrefId': 'String', 'XrefDatasource': 'String', 'Color': 'String', 'Border Width': 'Double', 'Node Size': 'Double', 'Label Font Size': 'Double', 'Ensembl': 'String', 'CTL.Ext': 'String', 'CTL.Type': 'String', 'CTL.PathwayName': 'String', 'CTL.label': 'String', 'CTL.PathwayID': 'String', 'CTL.GeneName': 'String', 'CTL.GeneID': 'String', 'Unnamed: 0': 'String', 'logFC': 'Double', 'logCPM': 'Double', 'F': 'Double', 'PValue': 'Double', 'FDR': 'Double'}
Calling cyrest_get('networks/2039/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/tables/defaultnode/columns/SUID)
OK[200], content: {"name":"SUID","values":[2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2150,2151,2152,2153,2154,2155,2156,2157,2158,2159,2160,2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2186,2187,2188,2189,2190,2191,2192,2193,2194,2195,2196,2197,2198,2199,2200,2201,2202,2203,2204,2205,2206,2207,2208,2209,2210,2211,2212,2213,2214,2215,2216,2217,2218,2219,2220,2221,2222,2223,2224,2225,2226,2227,2228,2229,2230,2231,2232,2233,2234,2235,2236,2237,2238,2239,2240,2241,2242,2243,2244,2245,2246,2247,2248,2249,2250,2251,2252,2253,2254,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2266,2267,2268,2269,2270,2271,2272,2273,2274,2275,2276,2277,2278,2279,2280,2281,2282,2283,2284,2285,2286,2287,2288,2289,2290,2291,2292,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315,2316,2317,2318,2319,2320,2321,2322,2323,2324,2325,2326,2327,2328,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345,2346,2347,2348,2349,2350,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2361,2362,2363,2364,2365,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2390,2391,2392,2393,2394,2395,2396,2397,2398,2399,2400,2401,2402,2403,2404,2405,2406,2407,2408,2409,2410,2411,2412,2413,2414,2415,2416,2417,2418,2419,2420,2421,2422]}
Returning 'cyrest_get': {'name': 'SUID', 'values': [2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422]}
Calling cyrest_get('networks/2039/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/tables/defaultnode/columns/name)
OK[200], content: {"name":"name","values":["Overview of proinflammatory and profibrotic mediators","Kinin-Kallikrein Pathway","Increased, Prostaglandin E2 secretion","ACE2 inhibition","Angiotensin II receptor type 1 pathway","Binding of agonist, Angiotensin II receptor type 1 receptor (AT1R)","Collagen biosynthesis and modifying enzymes","KE1276: Lung Fibrosis","KE68: Collagen Accumulation","KE1743: Increased plasma Angiotensin II","KE1752: Increased Angiotensin II","NF-KB pathway","Oxidative stress","KE1740: ACE2 inhibition","Bradykinin system, hyperactivated","Renin Angiotensin Aldosterone System","Increased, Reactive oxygen species","Metabolism of Angiotensinogen to Angiotensins","Increase activation, Nuclear factor kappa B (NF-kB)","Increased, secretion of proinflammatory and profibrotic mediators","Bradykinin receptor B1 activation","Bradykinin signaling network","Prostaglandin signaling","COL1A1","COL3A1","COL1A2","COL4A4","SERPINH1","COL5A3","BMP1","P4HA1","COL11A2","COL11A1","COL6A2","COL5A1","PPIB","COL9A1","CRTAP","ADAMTS2","P4HA2","COL4A1","COL5A2","P4HB","COL4A2","COL2A1","PLOD1","PLOD2","COL7A1","COL10A1","COL23A1","COL26A1","COL12A1","COL13A1","COL25A1","COL17A1","COL6A1","COL15A1","COL14A1","COL16A1","COL19A1","COL18A1","P3H1","P3H2","COLGALT1","COL4A6","COL9A3","COL9A2","CTSD","AGT","CMA1","CPB2","ACE2","REN","ACE","CES1","CTSZ","MME","ANPEP","CTSG","GZMH","ATP6AP2","TLL1","ADAMTS14","COL4A3","ADAMTS3","COL4A5","PCOLCE","COL24A1","COL8A2","COL8A1","COL27A1","TLL2","COL6A3","P3H3","COLGALT2","P4HA3","COL6A6","COL6A5","COL20A1","PLOD3","COL28A1","COL21A1","COL22A1","PCOLCE2","CPB1","CPA3","ENPEP","C9orf3","IL12A","PYCARD","IRF7","PTGES","IL37","CXCL16","IFNL3","TGFBR1","IL17C","RACK1","PF4","TGFB1","CCL23","CCL21","NOX4","IL17D","MAS1","IL27","IFNA16","TGFBR2","ACTA2","IL1A","IFNA4","RAF1","CCL2","PTPN11","F12","IL1B","SMAD3","CXCL12","JUND","CXCL9","IL11RA","IL6","IL11","IL25","IL36G","RRAS","AGTR1","CXCL8","MAP2K6","IFNG","SP1","IFNA8","CCL5","IL6ST","TNFSF13","CCL7","SMAD4","NFKB1","MAPK1","CCL11","PDGFD","SERPING1","CXCL5","CPN1","OSM","BDKRB2","HIF1A","CTGF","CXCL2","KNG1","CCL4","BDKRB1","CCL18","KLKB1","IL10","IFNA5","CXCL14","IL3","CCL13","CX3CL1","CCL24","IFNA13","CCL4L2","IL33","IL9","IFNK","IL21","VEGFA","IL22","IL12B","LIF","IL5","IL15","CSF3","CSF1","AREG","CTF1","IFNA1","CNTF","CCL15","IL36B","IFNW1","IL36RN","CXCL6","IFNA17","CXCL3","IL1F10","IFNA14","IFNA7","CSF2","IFNA10","IFNB1","MMP1","IL20","PPBP","IL7","CCL19","CCL17","CCL20","TNFSF13B","AHR","IL2","CASP1","CCL22","IL17F","EPO","IFNA21","IL17A","IFNL1","CCR2","IFNA6","PTGER2","CCL25","CCL28","SPP1","CXCL1","IL23A","CCL3","MMP9","EBI3","IL26","IL19","CD28","IFNL2","KLRD1","CCL16","CXCL10","CCL1","TNF","IL36A","NLRP3","IL24","TSLP","PIK3CG","CCL8","PTGER4","CXCL17","CXCL13","IL18","CCL26","IFNA2","IL4","IL13","LTA","CCL14","CCL3L3","XCL2","IL17B","MMP3","IL1RN","XCL1","IL31","PF4V1","CXCL11","AGTR2","NOS3","NR3C2","CYP11B2","CYP11A1","ATF6B","CALML3","CALML3","CALML3","CAMK1","CAMK1","CAMK2A","CYP11A1","CAMK2D","CAMK2D","CAMK2G","CAMK2G","CAMK4","CREB3","CAMK2A","CAMK2A","CAMK2B","CAMK2B","CREB3","CREB3L1","ITPR3","CREB3L1","CREB3L3","CREB3L3","GNAQ","GNAQ","ITPR1","ITPR1","ITPR3","ATF2","ATF4","CALM1","CREB1","CREB3L2","CREB3L2","CREB3L4","CREB5","CREB5","CALM2","CALM3","CALML4","CALML4","CALML5","CALML6","ITPR2","ATF1","PLCB2","PLCB2","HSD3B1","HSD3B2","HSD3B2","STAR","CYP21A2","HSD3B1","CAMK1D","CAMK1G","CAMK1G","STAR","CHUK","IKBKG","IKBKB","NFKBIA","RELA","REL","NFKBIE","CYP1A1","NQO1","FOS","MAPK14","CYBB","NFE2L2","MAPK10","GPX1","SOD1","SOD2","HMOX1","GCLC","CAT","UGT1A6","MAOA","GPX3","XDH","SOD3","MT1X","JUNB","TXNRD2","TXNRD1","GSR","GSTT2","NOX1","MGST1","NFIX","TXN2","NOX5","NOX3"]}
Returning 'cyrest_get': {'name': 'name', 'values': ['Overview of proinflammatory and profibrotic mediators', 'Kinin-Kallikrein Pathway', 'Increased, Prostaglandin E2 secretion', 'ACE2 inhibition', 'Angiotensin II receptor type 1 pathway', 'Binding of agonist, Angiotensin II receptor type 1 receptor (AT1R)', 'Collagen biosynthesis and modifying enzymes', 'KE1276: Lung Fibrosis', 'KE68: Collagen Accumulation', 'KE1743: Increased plasma Angiotensin II', 'KE1752: Increased Angiotensin II', 'NF-KB pathway', 'Oxidative stress', 'KE1740: ACE2 inhibition', 'Bradykinin system, hyperactivated', 'Renin Angiotensin Aldosterone System', 'Increased, Reactive oxygen species', 'Metabolism of Angiotensinogen to Angiotensins', 'Increase activation, Nuclear factor kappa B (NF-kB)', 'Increased, secretion of proinflammatory and profibrotic mediators', 'Bradykinin receptor B1 activation', 'Bradykinin signaling network', 'Prostaglandin signaling', 'COL1A1', 'COL3A1', 'COL1A2', 'COL4A4', 'SERPINH1', 'COL5A3', 'BMP1', 'P4HA1', 'COL11A2', 'COL11A1', 'COL6A2', 'COL5A1', 'PPIB', 'COL9A1', 'CRTAP', 'ADAMTS2', 'P4HA2', 'COL4A1', 'COL5A2', 'P4HB', 'COL4A2', 'COL2A1', 'PLOD1', 'PLOD2', 'COL7A1', 'COL10A1', 'COL23A1', 'COL26A1', 'COL12A1', 'COL13A1', 'COL25A1', 'COL17A1', 'COL6A1', 'COL15A1', 'COL14A1', 'COL16A1', 'COL19A1', 'COL18A1', 'P3H1', 'P3H2', 'COLGALT1', 'COL4A6', 'COL9A3', 'COL9A2', 'CTSD', 'AGT', 'CMA1', 'CPB2', 'ACE2', 'REN', 'ACE', 'CES1', 'CTSZ', 'MME', 'ANPEP', 'CTSG', 'GZMH', 'ATP6AP2', 'TLL1', 'ADAMTS14', 'COL4A3', 'ADAMTS3', 'COL4A5', 'PCOLCE', 'COL24A1', 'COL8A2', 'COL8A1', 'COL27A1', 'TLL2', 'COL6A3', 'P3H3', 'COLGALT2', 'P4HA3', 'COL6A6', 'COL6A5', 'COL20A1', 'PLOD3', 'COL28A1', 'COL21A1', 'COL22A1', 'PCOLCE2', 'CPB1', 'CPA3', 'ENPEP', 'C9orf3', 'IL12A', 'PYCARD', 'IRF7', 'PTGES', 'IL37', 'CXCL16', 'IFNL3', 'TGFBR1', 'IL17C', 'RACK1', 'PF4', 'TGFB1', 'CCL23', 'CCL21', 'NOX4', 'IL17D', 'MAS1', 'IL27', 'IFNA16', 'TGFBR2', 'ACTA2', 'IL1A', 'IFNA4', 'RAF1', 'CCL2', 'PTPN11', 'F12', 'IL1B', 'SMAD3', 'CXCL12', 'JUND', 'CXCL9', 'IL11RA', 'IL6', 'IL11', 'IL25', 'IL36G', 'RRAS', 'AGTR1', 'CXCL8', 'MAP2K6', 'IFNG', 'SP1', 'IFNA8', 'CCL5', 'IL6ST', 'TNFSF13', 'CCL7', 'SMAD4', 'NFKB1', 'MAPK1', 'CCL11', 'PDGFD', 'SERPING1', 'CXCL5', 'CPN1', 'OSM', 'BDKRB2', 'HIF1A', 'CTGF', 'CXCL2', 'KNG1', 'CCL4', 'BDKRB1', 'CCL18', 'KLKB1', 'IL10', 'IFNA5', 'CXCL14', 'IL3', 'CCL13', 'CX3CL1', 'CCL24', 'IFNA13', 'CCL4L2', 'IL33', 'IL9', 'IFNK', 'IL21', 'VEGFA', 'IL22', 'IL12B', 'LIF', 'IL5', 'IL15', 'CSF3', 'CSF1', 'AREG', 'CTF1', 'IFNA1', 'CNTF', 'CCL15', 'IL36B', 'IFNW1', 'IL36RN', 'CXCL6', 'IFNA17', 'CXCL3', 'IL1F10', 'IFNA14', 'IFNA7', 'CSF2', 'IFNA10', 'IFNB1', 'MMP1', 'IL20', 'PPBP', 'IL7', 'CCL19', 'CCL17', 'CCL20', 'TNFSF13B', 'AHR', 'IL2', 'CASP1', 'CCL22', 'IL17F', 'EPO', 'IFNA21', 'IL17A', 'IFNL1', 'CCR2', 'IFNA6', 'PTGER2', 'CCL25', 'CCL28', 'SPP1', 'CXCL1', 'IL23A', 'CCL3', 'MMP9', 'EBI3', 'IL26', 'IL19', 'CD28', 'IFNL2', 'KLRD1', 'CCL16', 'CXCL10', 'CCL1', 'TNF', 'IL36A', 'NLRP3', 'IL24', 'TSLP', 'PIK3CG', 'CCL8', 'PTGER4', 'CXCL17', 'CXCL13', 'IL18', 'CCL26', 'IFNA2', 'IL4', 'IL13', 'LTA', 'CCL14', 'CCL3L3', 'XCL2', 'IL17B', 'MMP3', 'IL1RN', 'XCL1', 'IL31', 'PF4V1', 'CXCL11', 'AGTR2', 'NOS3', 'NR3C2', 'CYP11B2', 'CYP11A1', 'ATF6B', 'CALML3', 'CALML3', 'CALML3', 'CAMK1', 'CAMK1', 'CAMK2A', 'CYP11A1', 'CAMK2D', 'CAMK2D', 'CAMK2G', 'CAMK2G', 'CAMK4', 'CREB3', 'CAMK2A', 'CAMK2A', 'CAMK2B', 'CAMK2B', 'CREB3', 'CREB3L1', 'ITPR3', 'CREB3L1', 'CREB3L3', 'CREB3L3', 'GNAQ', 'GNAQ', 'ITPR1', 'ITPR1', 'ITPR3', 'ATF2', 'ATF4', 'CALM1', 'CREB1', 'CREB3L2', 'CREB3L2', 'CREB3L4', 'CREB5', 'CREB5', 'CALM2', 'CALM3', 'CALML4', 'CALML4', 'CALML5', 'CALML6', 'ITPR2', 'ATF1', 'PLCB2', 'PLCB2', 'HSD3B1', 'HSD3B2', 'HSD3B2', 'STAR', 'CYP21A2', 'HSD3B1', 'CAMK1D', 'CAMK1G', 'CAMK1G', 'STAR', 'CHUK', 'IKBKG', 'IKBKB', 'NFKBIA', 'RELA', 'REL', 'NFKBIE', 'CYP1A1', 'NQO1', 'FOS', 'MAPK14', 'CYBB', 'NFE2L2', 'MAPK10', 'GPX1', 'SOD1', 'SOD2', 'HMOX1', 'GCLC', 'CAT', 'UGT1A6', 'MAOA', 'GPX3', 'XDH', 'SOD3', 'MT1X', 'JUNB', 'TXNRD2', 'TXNRD1', 'GSR', 'GSTT2', 'NOX1', 'MGST1', 'NFIX', 'TXN2', 'NOX5', 'NOX3']}
Returning 'get_table_columns':                                                    name
2049  Overview of proinflammatory and profibrotic me...
2050                           Kinin-Kallikrein Pathway
2051              Increased, Prostaglandin E2 secretion
2052                                    ACE2 inhibition
2053             Angiotensin II receptor type 1 pathway
...                                                 ...
2418                                              MGST1
2419                                               NFIX
2420                                               TXN2
2421                                               NOX5
2422                                               NOX3

[374 rows x 1 columns]
Returning 'get_selected_nodes': ['Overview of proinflammatory and profibrotic mediators', 'Kinin-Kallikrein Pathway', 'Increased, Prostaglandin E2 secretion', 'ACE2 inhibition', 'Angiotensin II receptor type 1 pathway', 'Binding of agonist, Angiotensin II receptor type 1 receptor (AT1R)', 'Collagen biosynthesis and modifying enzymes', 'KE1276: Lung Fibrosis', 'KE68: Collagen Accumulation', 'KE1743: Increased plasma Angiotensin II', 'KE1752: Increased Angiotensin II', 'NF-KB pathway', 'Oxidative stress', 'KE1740: ACE2 inhibition', 'Bradykinin system, hyperactivated', 'Renin Angiotensin Aldosterone System', 'Increased, Reactive oxygen species', 'Metabolism of Angiotensinogen to Angiotensins', 'Increase activation, Nuclear factor kappa B (NF-kB)', 'Increased, secretion of proinflammatory and profibrotic mediators', 'Bradykinin receptor B1 activation', 'Bradykinin signaling network', 'Prostaglandin signaling', 'COL3A1', 'COL11A1', 'COL9A1', 'ADAMTS2', 'COL2A1', 'COL10A1', 'COL26A1', 'COL25A1', 'COL15A1', 'COL14A1', 'COL19A1', 'P3H1', 'P3H2', 'COLGALT1', 'COL9A3', 'AGT', 'CMA1', 'CPB2', 'CTSG', 'GZMH', 'COL24A1', 'P3H3', 'COLGALT2', 'COL6A6', 'COL6A5', 'COL20A1', 'CPB1', 'CPA3', 'ENPEP', 'IL37', 'IFNL3', 'RACK1', 'PF4', 'CCL23', 'CCL21', 'NOX4', 'IL17D', 'MAS1', 'IL27', 'IFNA16', 'IFNA4', 'CCL2', 'CXCL12', 'CXCL9', 'IL25', 'AGTR1', 'CXCL8', 'IFNG', 'IFNA8', 'CCL7', 'CCL11', 'CPN1', 'OSM', 'KNG1', 'CCL4', 'CCL18', 'KLKB1', 'IL10', 'IFNA5', 'IL3', 'CCL13', 'CCL24', 'IFNA13', 'CCL4L2', 'IL9', 'IFNK', 'IL21', 'IL22', 'IL12B', 'IL5', 'IFNA1', 'CNTF', 'CCL15', 'IL36B', 'IFNW1', 'IFNA17', 'IL1F10', 'IFNA14', 'IFNA7', 'IFNA10', 'IFNB1', 'IL20', 'IL7', 'CCL19', 'CCL17', 'IL2', 'IL17F', 'EPO', 'IFNA21', 'IL17A', 'IFNL1', 'CCR2', 'IFNA6', 'PTGER2', 'CCL25', 'CCL3', 'EBI3', 'IL26', 'CD28', 'IFNL2', 'KLRD1', 'CCL16', 'CCL1', 'NLRP3', 'IL24', 'PIK3CG', 'CCL8', 'CXCL13', 'IFNA2', 'IL4', 'IL13', 'LTA', 'CCL14', 'CCL3L3', 'XCL2', 'IL17B', 'XCL1', 'IL31', 'PF4V1', 'AGTR2', 'CYP11B2', 'CYP11A1', 'CAMK2A', 'CYP11A1', 'CAMK4', 'CAMK2A', 'CAMK2A', 'CAMK2B', 'CAMK2B', 'CREB3L3', 'CREB3L3', 'HSD3B1', 'HSD3B2', 'HSD3B2', 'HSD3B1', 'CAMK1G', 'CAMK1G', 'CYBB', 'NOX1', 'NOX5', 'NOX3']
Calling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling get_selected_edge_count(2039, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(2039, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [2868,3093,2039,152,381,78]
Returning 'cyrest_get': [2868, 3093, 2039, 152, 381, 78]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks/2039/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/edges), params: {'column': 'selected', 'query': 'true'}
OK[200], content: []
Returning 'cyrest_get': []
Returning 'get_selected_edge_count': 0
Returning 'get_selected_edges': None
Returning 'create_column_filter': {'nodes': ['Overview of proinflammatory and profibrotic mediators', 'Kinin-Kallikrein Pathway', 'Increased, Prostaglandin E2 secretion', 'ACE2 inhibition', 'Angiotensin II receptor type 1 pathway', 'Binding of agonist, Angiotensin II receptor type 1 receptor (AT1R)', 'Collagen biosynthesis and modifying enzymes', 'KE1276: Lung Fibrosis', 'KE68: Collagen Accumulation', 'KE1743: Increased plasma Angiotensin II', 'KE1752: Increased Angiotensin II', 'NF-KB pathway', 'Oxidative stress', 'KE1740: ACE2 inhibition', 'Bradykinin system, hyperactivated', 'Renin Angiotensin Aldosterone System', 'Increased, Reactive oxygen species', 'Metabolism of Angiotensinogen to Angiotensins', 'Increase activation, Nuclear factor kappa B (NF-kB)', 'Increased, secretion of proinflammatory and profibrotic mediators', 'Bradykinin receptor B1 activation', 'Bradykinin signaling network', 'Prostaglandin signaling', 'COL3A1', 'COL11A1', 'COL9A1', 'ADAMTS2', 'COL2A1', 'COL10A1', 'COL26A1', 'COL25A1', 'COL15A1', 'COL14A1', 'COL19A1', 'P3H1', 'P3H2', 'COLGALT1', 'COL9A3', 'AGT', 'CMA1', 'CPB2', 'CTSG', 'GZMH', 'COL24A1', 'P3H3', 'COLGALT2', 'COL6A6', 'COL6A5', 'COL20A1', 'CPB1', 'CPA3', 'ENPEP', 'IL37', 'IFNL3', 'RACK1', 'PF4', 'CCL23', 'CCL21', 'NOX4', 'IL17D', 'MAS1', 'IL27', 'IFNA16', 'IFNA4', 'CCL2', 'CXCL12', 'CXCL9', 'IL25', 'AGTR1', 'CXCL8', 'IFNG', 'IFNA8', 'CCL7', 'CCL11', 'CPN1', 'OSM', 'KNG1', 'CCL4', 'CCL18', 'KLKB1', 'IL10', 'IFNA5', 'IL3', 'CCL13', 'CCL24', 'IFNA13', 'CCL4L2', 'IL9', 'IFNK', 'IL21', 'IL22', 'IL12B', 'IL5', 'IFNA1', 'CNTF', 'CCL15', 'IL36B', 'IFNW1', 'IFNA17', 'IL1F10', 'IFNA14', 'IFNA7', 'IFNA10', 'IFNB1', 'IL20', 'IL7', 'CCL19', 'CCL17', 'IL2', 'IL17F', 'EPO', 'IFNA21', 'IL17A', 'IFNL1', 'CCR2', 'IFNA6', 'PTGER2', 'CCL25', 'CCL3', 'EBI3', 'IL26', 'CD28', 'IFNL2', 'KLRD1', 'CCL16', 'CCL1', 'NLRP3', 'IL24', 'PIK3CG', 'CCL8', 'CXCL13', 'IFNA2', 'IL4', 'IL13', 'LTA', 'CCL14', 'CCL3L3', 'XCL2', 'IL17B', 'XCL1', 'IL31', 'PF4V1', 'AGTR2', 'CYP11B2', 'CYP11A1', 'CAMK2A', 'CYP11A1', 'CAMK4', 'CAMK2A', 'CAMK2A', 'CAMK2B', 'CAMK2B', 'CREB3L3', 'CREB3L3', 'HSD3B1', 'HSD3B2', 'HSD3B2', 'HSD3B1', 'CAMK1G', 'CAMK1G', 'CYBB', 'NOX1', 'NOX5', 'NOX3'], 'edges': None}
--------------------
Calling create_composite_filter('combined_filter', ['no_expr_data', 'only_genes_filter'])
Calling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None)
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling commands_post('network set current network="SUID:2039"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:2039'}
OK[200], content: {
 "data": {},
 "errors":[]
}
Returning 'commands_post': {}
Returning 'set_current_network': {}
Calling commands_post('filter get name="no_expr_data"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/filter/get), json: {'name': 'no_expr_data'}
OK[200], content: {
 "data": [ {
  "name" : "no_expr_data",
  "transformers" : [ {
    "id" : "org.cytoscape.CompositeFilter",
    "parameters" : {
      "type" : "ALL"
    },
    "transformers" : [ {
      "id" : "org.cytoscape.ColumnFilter",
      "parameters" : {
        "predicate" : "IS_NOT_BETWEEN",
        "criterion" : [ -1000, 1000 ],
        "caseSensitive" : false,
        "type" : "nodes",
        "anyMatch" : true,
        "columnName" : "logFC"
      }
    } ]
  } ]
} ],
 "errors":[]
}
Returning 'commands_post': [{'name': 'no_expr_data', 'transformers': [{'id': 'org.cytoscape.CompositeFilter', 'parameters': {'type': 'ALL'}, 'transformers': [{'id': 'org.cytoscape.ColumnFilter', 'parameters': {'predicate': 'IS_NOT_BETWEEN', 'criterion': [-1000, 1000], 'caseSensitive': False, 'type': 'nodes', 'anyMatch': True, 'columnName': 'logFC'}}]}]}]
Calling commands_post('filter get name="only_genes_filter"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/filter/get), json: {'name': 'only_genes_filter'}
OK[200], content: {
 "data": [ {
  "name" : "only_genes_filter",
  "transformers" : [ {
    "id" : "org.cytoscape.CompositeFilter",
    "parameters" : {
      "type" : "ALL"
    },
    "transformers" : [ {
      "id" : "org.cytoscape.ColumnFilter",
      "parameters" : {
        "predicate" : "IS",
        "criterion" : "gene",
        "caseSensitive" : false,
        "type" : "nodes",
        "anyMatch" : true,
        "columnName" : "CTL.Type"
      }
    } ]
  } ]
} ],
 "errors":[]
}
Returning 'commands_post': [{'name': 'only_genes_filter', 'transformers': [{'id': 'org.cytoscape.CompositeFilter', 'parameters': {'type': 'ALL'}, 'transformers': [{'id': 'org.cytoscape.ColumnFilter', 'parameters': {'predicate': 'IS', 'criterion': 'gene', 'caseSensitive': False, 'type': 'nodes', 'anyMatch': True, 'columnName': 'CTL.Type'}}]}]}]
Calling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/version)
OK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.8.2"}
Returning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2'}
Returning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2', 'automationAPIVersion': '1.2.0', 'py4cytoscapeVersion': '0.0.9'}
Calling cyrest_post('commands/filter/create', body={'name': 'combined_filter', 'json': '{"id": "CompositeFilter", "parameters": {"type": "ALL"}, "transformers": [{"id": "org.cytoscape.CompositeFilter", "parameters": {"type": "ALL"}, "transformers": [{"id": "org.cytoscape.ColumnFilter", "parameters": {"predicate": "IS_NOT_BETWEEN", "criterion": [-1000, 1000], "caseSensitive": false, "type": "nodes", "anyMatch": true, "columnName": "logFC"}}]}, {"id": "org.cytoscape.CompositeFilter", "parameters": {"type": "ALL"}, "transformers": [{"id": "org.cytoscape.ColumnFilter", "parameters": {"predicate": "IS", "criterion": "gene", "caseSensitive": false, "type": "nodes", "anyMatch": true, "columnName": "CTL.Type"}}]}]}'}, base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'combined_filter', 'json': '{"id": "CompositeFilter", "parameters": {"type": "ALL"}, "transformers": [{"id": "org.cytoscape.CompositeFilter", "parameters": {"type": "ALL"}, "transformers": [{"id": "org.cytoscape.ColumnFilter", "parameters": {"predicate": "IS_NOT_BETWEEN", "criterion": [-1000, 1000], "caseSensitive": false, "type": "nodes", "anyMatch": true, "columnName": "logFC"}}]}, {"id": "org.cytoscape.CompositeFilter", "parameters": {"type": "ALL"}, "transformers": [{"id": "org.cytoscape.ColumnFilter", "parameters": {"predicate": "IS", "criterion": "gene", "caseSensitive": false, "type": "nodes", "anyMatch": true, "columnName": "CTL.Type"}}]}]}'}
OK[200], content: {
 "data": {},
 "errors":[]
}
Returning 'cyrest_post': {'data': {}, 'errors': []}
Calling get_node_count(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks/2039/nodes/count', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/nodes/count)
OK[200], content: {"count":374}
Returning 'cyrest_get': {'count': 374}
Returning 'get_node_count': 374
Calling get_edge_count(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks/2039/edges/count', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/edges/count)
OK[200], content: {"count":429}
Returning 'cyrest_get': {'count': 429}
Returning 'get_edge_count': 429
Calling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/version)
OK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.8.2"}
Returning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2'}
Returning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2', 'automationAPIVersion': '1.2.0', 'py4cytoscapeVersion': '0.0.9'}
Calling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling get_selected_node_count(2039, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(2039, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [2868,3093,2039,152,381,78]
Returning 'cyrest_get': [2868, 3093, 2039, 152, 381, 78]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks/2039/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/nodes), params: {'column': 'selected', 'query': 'true'}
OK[200], content: [2073,2081,2085,2087,2093,2097,2099,2102,2105,2106,2108,2110,2111,2112,2114,2117,2118,2119,2127,2128,2136,2142,2143,2145,2146,2147,2153,2154,2155,2161,2163,2166,2167,2169,2170,2171,2172,2173,2174,2175,2179,2181,2186,2188,2192,2195,2196,2198,2200,2204,2208,2212,2213,2218,2219,2221,2222,2223,2224,2226,2227,2229,2230,2231,2233,2234,2235,2237,2238,2240,2246,2247,2248,2249,2250,2253,2255,2256,2257,2259,2260,2262,2264,2265,2266,2270,2273,2274,2275,2276,2277,2278,2279,2280,2281,2286,2288,2289,2291,2292,2293,2294,2296,2299,2300,2302,2303,2306,2309,2310,2311,2312,2313,2314,2315,2316,2319,2320,2321,2323,2326,2327,2334,2335,2340,2342,2343,2344,2345,2350,2351,2376,2377,2378,2381,2383,2384,2397,2417,2421,2422]
Returning 'cyrest_get': [2073, 2081, 2085, 2087, 2093, 2097, 2099, 2102, 2105, 2106, 2108, 2110, 2111, 2112, 2114, 2117, 2118, 2119, 2127, 2128, 2136, 2142, 2143, 2145, 2146, 2147, 2153, 2154, 2155, 2161, 2163, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2179, 2181, 2186, 2188, 2192, 2195, 2196, 2198, 2200, 2204, 2208, 2212, 2213, 2218, 2219, 2221, 2222, 2223, 2224, 2226, 2227, 2229, 2230, 2231, 2233, 2234, 2235, 2237, 2238, 2240, 2246, 2247, 2248, 2249, 2250, 2253, 2255, 2256, 2257, 2259, 2260, 2262, 2264, 2265, 2266, 2270, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2286, 2288, 2289, 2291, 2292, 2293, 2294, 2296, 2299, 2300, 2302, 2303, 2306, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2319, 2320, 2321, 2323, 2326, 2327, 2334, 2335, 2340, 2342, 2343, 2344, 2345, 2350, 2351, 2376, 2377, 2378, 2381, 2383, 2384, 2397, 2417, 2421, 2422]
Returning 'get_selected_node_count': 141
Calling cyrest_get('networks/2039/nodes', parameters={'column': 'selected', 'query': 'true'})
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/nodes), params: {'column': 'selected', 'query': 'true'}
OK[200], content: [2073,2081,2085,2087,2093,2097,2099,2102,2105,2106,2108,2110,2111,2112,2114,2117,2118,2119,2127,2128,2136,2142,2143,2145,2146,2147,2153,2154,2155,2161,2163,2166,2167,2169,2170,2171,2172,2173,2174,2175,2179,2181,2186,2188,2192,2195,2196,2198,2200,2204,2208,2212,2213,2218,2219,2221,2222,2223,2224,2226,2227,2229,2230,2231,2233,2234,2235,2237,2238,2240,2246,2247,2248,2249,2250,2253,2255,2256,2257,2259,2260,2262,2264,2265,2266,2270,2273,2274,2275,2276,2277,2278,2279,2280,2281,2286,2288,2289,2291,2292,2293,2294,2296,2299,2300,2302,2303,2306,2309,2310,2311,2312,2313,2314,2315,2316,2319,2320,2321,2323,2326,2327,2334,2335,2340,2342,2343,2344,2345,2350,2351,2376,2377,2378,2381,2383,2384,2397,2417,2421,2422]
Returning 'cyrest_get': [2073, 2081, 2085, 2087, 2093, 2097, 2099, 2102, 2105, 2106, 2108, 2110, 2111, 2112, 2114, 2117, 2118, 2119, 2127, 2128, 2136, 2142, 2143, 2145, 2146, 2147, 2153, 2154, 2155, 2161, 2163, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2179, 2181, 2186, 2188, 2192, 2195, 2196, 2198, 2200, 2204, 2208, 2212, 2213, 2218, 2219, 2221, 2222, 2223, 2224, 2226, 2227, 2229, 2230, 2231, 2233, 2234, 2235, 2237, 2238, 2240, 2246, 2247, 2248, 2249, 2250, 2253, 2255, 2256, 2257, 2259, 2260, 2262, 2264, 2265, 2266, 2270, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2286, 2288, 2289, 2291, 2292, 2293, 2294, 2296, 2299, 2300, 2302, 2303, 2306, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2319, 2320, 2321, 2323, 2326, 2327, 2334, 2335, 2340, 2342, 2343, 2344, 2345, 2350, 2351, 2376, 2377, 2378, 2381, 2383, 2384, 2397, 2417, 2421, 2422]
Calling get_table_columns('node', ['name'], 'default', 2039, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(2039, 'http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [2868,3093,2039,152,381,78]
Returning 'cyrest_get': [2868, 3093, 2039, 152, 381, 78]
Returning 'get_network_suid': 2039
Calling get_table_column_types('node', namespace='default', network=2039, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(2039, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [2868,3093,2039,152,381,78]
Returning 'cyrest_get': [2868, 3093, 2039, 152, 381, 78]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks/2039/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Ext","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Type","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.label","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayID","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneID","type":"String","immutable":false,"primaryKey":false},{"name":"Unnamed: 0","type":"String","immutable":false,"primaryKey":false},{"name":"logFC","type":"Double","immutable":false,"primaryKey":false},{"name":"logCPM","type":"Double","immutable":false,"primaryKey":false},{"name":"F","type":"Double","immutable":false,"primaryKey":false},{"name":"PValue","type":"Double","immutable":false,"primaryKey":false},{"name":"FDR","type":"Double","immutable":false,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Ext', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Unnamed: 0', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'logFC', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'logCPM', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'F', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'PValue', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FDR', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
Returning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'GraphID': 'String', 'Type': 'String', 'XrefId': 'String', 'XrefDatasource': 'String', 'Color': 'String', 'Border Width': 'Double', 'Node Size': 'Double', 'Label Font Size': 'Double', 'Ensembl': 'String', 'CTL.Ext': 'String', 'CTL.Type': 'String', 'CTL.PathwayName': 'String', 'CTL.label': 'String', 'CTL.PathwayID': 'String', 'CTL.GeneName': 'String', 'CTL.GeneID': 'String', 'Unnamed: 0': 'String', 'logFC': 'Double', 'logCPM': 'Double', 'F': 'Double', 'PValue': 'Double', 'FDR': 'Double'}
Calling cyrest_get('networks/2039/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/tables/defaultnode/columns/SUID)
OK[200], content: {"name":"SUID","values":[2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2150,2151,2152,2153,2154,2155,2156,2157,2158,2159,2160,2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2186,2187,2188,2189,2190,2191,2192,2193,2194,2195,2196,2197,2198,2199,2200,2201,2202,2203,2204,2205,2206,2207,2208,2209,2210,2211,2212,2213,2214,2215,2216,2217,2218,2219,2220,2221,2222,2223,2224,2225,2226,2227,2228,2229,2230,2231,2232,2233,2234,2235,2236,2237,2238,2239,2240,2241,2242,2243,2244,2245,2246,2247,2248,2249,2250,2251,2252,2253,2254,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2266,2267,2268,2269,2270,2271,2272,2273,2274,2275,2276,2277,2278,2279,2280,2281,2282,2283,2284,2285,2286,2287,2288,2289,2290,2291,2292,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315,2316,2317,2318,2319,2320,2321,2322,2323,2324,2325,2326,2327,2328,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345,2346,2347,2348,2349,2350,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2361,2362,2363,2364,2365,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2390,2391,2392,2393,2394,2395,2396,2397,2398,2399,2400,2401,2402,2403,2404,2405,2406,2407,2408,2409,2410,2411,2412,2413,2414,2415,2416,2417,2418,2419,2420,2421,2422]}
Returning 'cyrest_get': {'name': 'SUID', 'values': [2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422]}
Calling cyrest_get('networks/2039/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/tables/defaultnode/columns/name)
OK[200], content: {"name":"name","values":["Overview of proinflammatory and profibrotic mediators","Kinin-Kallikrein Pathway","Increased, Prostaglandin E2 secretion","ACE2 inhibition","Angiotensin II receptor type 1 pathway","Binding of agonist, Angiotensin II receptor type 1 receptor (AT1R)","Collagen biosynthesis and modifying enzymes","KE1276: Lung Fibrosis","KE68: Collagen Accumulation","KE1743: Increased plasma Angiotensin II","KE1752: Increased Angiotensin II","NF-KB pathway","Oxidative stress","KE1740: ACE2 inhibition","Bradykinin system, hyperactivated","Renin Angiotensin Aldosterone System","Increased, Reactive oxygen species","Metabolism of Angiotensinogen to Angiotensins","Increase activation, Nuclear factor kappa B (NF-kB)","Increased, secretion of proinflammatory and profibrotic mediators","Bradykinin receptor B1 activation","Bradykinin signaling network","Prostaglandin signaling","COL1A1","COL3A1","COL1A2","COL4A4","SERPINH1","COL5A3","BMP1","P4HA1","COL11A2","COL11A1","COL6A2","COL5A1","PPIB","COL9A1","CRTAP","ADAMTS2","P4HA2","COL4A1","COL5A2","P4HB","COL4A2","COL2A1","PLOD1","PLOD2","COL7A1","COL10A1","COL23A1","COL26A1","COL12A1","COL13A1","COL25A1","COL17A1","COL6A1","COL15A1","COL14A1","COL16A1","COL19A1","COL18A1","P3H1","P3H2","COLGALT1","COL4A6","COL9A3","COL9A2","CTSD","AGT","CMA1","CPB2","ACE2","REN","ACE","CES1","CTSZ","MME","ANPEP","CTSG","GZMH","ATP6AP2","TLL1","ADAMTS14","COL4A3","ADAMTS3","COL4A5","PCOLCE","COL24A1","COL8A2","COL8A1","COL27A1","TLL2","COL6A3","P3H3","COLGALT2","P4HA3","COL6A6","COL6A5","COL20A1","PLOD3","COL28A1","COL21A1","COL22A1","PCOLCE2","CPB1","CPA3","ENPEP","C9orf3","IL12A","PYCARD","IRF7","PTGES","IL37","CXCL16","IFNL3","TGFBR1","IL17C","RACK1","PF4","TGFB1","CCL23","CCL21","NOX4","IL17D","MAS1","IL27","IFNA16","TGFBR2","ACTA2","IL1A","IFNA4","RAF1","CCL2","PTPN11","F12","IL1B","SMAD3","CXCL12","JUND","CXCL9","IL11RA","IL6","IL11","IL25","IL36G","RRAS","AGTR1","CXCL8","MAP2K6","IFNG","SP1","IFNA8","CCL5","IL6ST","TNFSF13","CCL7","SMAD4","NFKB1","MAPK1","CCL11","PDGFD","SERPING1","CXCL5","CPN1","OSM","BDKRB2","HIF1A","CTGF","CXCL2","KNG1","CCL4","BDKRB1","CCL18","KLKB1","IL10","IFNA5","CXCL14","IL3","CCL13","CX3CL1","CCL24","IFNA13","CCL4L2","IL33","IL9","IFNK","IL21","VEGFA","IL22","IL12B","LIF","IL5","IL15","CSF3","CSF1","AREG","CTF1","IFNA1","CNTF","CCL15","IL36B","IFNW1","IL36RN","CXCL6","IFNA17","CXCL3","IL1F10","IFNA14","IFNA7","CSF2","IFNA10","IFNB1","MMP1","IL20","PPBP","IL7","CCL19","CCL17","CCL20","TNFSF13B","AHR","IL2","CASP1","CCL22","IL17F","EPO","IFNA21","IL17A","IFNL1","CCR2","IFNA6","PTGER2","CCL25","CCL28","SPP1","CXCL1","IL23A","CCL3","MMP9","EBI3","IL26","IL19","CD28","IFNL2","KLRD1","CCL16","CXCL10","CCL1","TNF","IL36A","NLRP3","IL24","TSLP","PIK3CG","CCL8","PTGER4","CXCL17","CXCL13","IL18","CCL26","IFNA2","IL4","IL13","LTA","CCL14","CCL3L3","XCL2","IL17B","MMP3","IL1RN","XCL1","IL31","PF4V1","CXCL11","AGTR2","NOS3","NR3C2","CYP11B2","CYP11A1","ATF6B","CALML3","CALML3","CALML3","CAMK1","CAMK1","CAMK2A","CYP11A1","CAMK2D","CAMK2D","CAMK2G","CAMK2G","CAMK4","CREB3","CAMK2A","CAMK2A","CAMK2B","CAMK2B","CREB3","CREB3L1","ITPR3","CREB3L1","CREB3L3","CREB3L3","GNAQ","GNAQ","ITPR1","ITPR1","ITPR3","ATF2","ATF4","CALM1","CREB1","CREB3L2","CREB3L2","CREB3L4","CREB5","CREB5","CALM2","CALM3","CALML4","CALML4","CALML5","CALML6","ITPR2","ATF1","PLCB2","PLCB2","HSD3B1","HSD3B2","HSD3B2","STAR","CYP21A2","HSD3B1","CAMK1D","CAMK1G","CAMK1G","STAR","CHUK","IKBKG","IKBKB","NFKBIA","RELA","REL","NFKBIE","CYP1A1","NQO1","FOS","MAPK14","CYBB","NFE2L2","MAPK10","GPX1","SOD1","SOD2","HMOX1","GCLC","CAT","UGT1A6","MAOA","GPX3","XDH","SOD3","MT1X","JUNB","TXNRD2","TXNRD1","GSR","GSTT2","NOX1","MGST1","NFIX","TXN2","NOX5","NOX3"]}
Returning 'cyrest_get': {'name': 'name', 'values': ['Overview of proinflammatory and profibrotic mediators', 'Kinin-Kallikrein Pathway', 'Increased, Prostaglandin E2 secretion', 'ACE2 inhibition', 'Angiotensin II receptor type 1 pathway', 'Binding of agonist, Angiotensin II receptor type 1 receptor (AT1R)', 'Collagen biosynthesis and modifying enzymes', 'KE1276: Lung Fibrosis', 'KE68: Collagen Accumulation', 'KE1743: Increased plasma Angiotensin II', 'KE1752: Increased Angiotensin II', 'NF-KB pathway', 'Oxidative stress', 'KE1740: ACE2 inhibition', 'Bradykinin system, hyperactivated', 'Renin Angiotensin Aldosterone System', 'Increased, Reactive oxygen species', 'Metabolism of Angiotensinogen to Angiotensins', 'Increase activation, Nuclear factor kappa B (NF-kB)', 'Increased, secretion of proinflammatory and profibrotic mediators', 'Bradykinin receptor B1 activation', 'Bradykinin signaling network', 'Prostaglandin signaling', 'COL1A1', 'COL3A1', 'COL1A2', 'COL4A4', 'SERPINH1', 'COL5A3', 'BMP1', 'P4HA1', 'COL11A2', 'COL11A1', 'COL6A2', 'COL5A1', 'PPIB', 'COL9A1', 'CRTAP', 'ADAMTS2', 'P4HA2', 'COL4A1', 'COL5A2', 'P4HB', 'COL4A2', 'COL2A1', 'PLOD1', 'PLOD2', 'COL7A1', 'COL10A1', 'COL23A1', 'COL26A1', 'COL12A1', 'COL13A1', 'COL25A1', 'COL17A1', 'COL6A1', 'COL15A1', 'COL14A1', 'COL16A1', 'COL19A1', 'COL18A1', 'P3H1', 'P3H2', 'COLGALT1', 'COL4A6', 'COL9A3', 'COL9A2', 'CTSD', 'AGT', 'CMA1', 'CPB2', 'ACE2', 'REN', 'ACE', 'CES1', 'CTSZ', 'MME', 'ANPEP', 'CTSG', 'GZMH', 'ATP6AP2', 'TLL1', 'ADAMTS14', 'COL4A3', 'ADAMTS3', 'COL4A5', 'PCOLCE', 'COL24A1', 'COL8A2', 'COL8A1', 'COL27A1', 'TLL2', 'COL6A3', 'P3H3', 'COLGALT2', 'P4HA3', 'COL6A6', 'COL6A5', 'COL20A1', 'PLOD3', 'COL28A1', 'COL21A1', 'COL22A1', 'PCOLCE2', 'CPB1', 'CPA3', 'ENPEP', 'C9orf3', 'IL12A', 'PYCARD', 'IRF7', 'PTGES', 'IL37', 'CXCL16', 'IFNL3', 'TGFBR1', 'IL17C', 'RACK1', 'PF4', 'TGFB1', 'CCL23', 'CCL21', 'NOX4', 'IL17D', 'MAS1', 'IL27', 'IFNA16', 'TGFBR2', 'ACTA2', 'IL1A', 'IFNA4', 'RAF1', 'CCL2', 'PTPN11', 'F12', 'IL1B', 'SMAD3', 'CXCL12', 'JUND', 'CXCL9', 'IL11RA', 'IL6', 'IL11', 'IL25', 'IL36G', 'RRAS', 'AGTR1', 'CXCL8', 'MAP2K6', 'IFNG', 'SP1', 'IFNA8', 'CCL5', 'IL6ST', 'TNFSF13', 'CCL7', 'SMAD4', 'NFKB1', 'MAPK1', 'CCL11', 'PDGFD', 'SERPING1', 'CXCL5', 'CPN1', 'OSM', 'BDKRB2', 'HIF1A', 'CTGF', 'CXCL2', 'KNG1', 'CCL4', 'BDKRB1', 'CCL18', 'KLKB1', 'IL10', 'IFNA5', 'CXCL14', 'IL3', 'CCL13', 'CX3CL1', 'CCL24', 'IFNA13', 'CCL4L2', 'IL33', 'IL9', 'IFNK', 'IL21', 'VEGFA', 'IL22', 'IL12B', 'LIF', 'IL5', 'IL15', 'CSF3', 'CSF1', 'AREG', 'CTF1', 'IFNA1', 'CNTF', 'CCL15', 'IL36B', 'IFNW1', 'IL36RN', 'CXCL6', 'IFNA17', 'CXCL3', 'IL1F10', 'IFNA14', 'IFNA7', 'CSF2', 'IFNA10', 'IFNB1', 'MMP1', 'IL20', 'PPBP', 'IL7', 'CCL19', 'CCL17', 'CCL20', 'TNFSF13B', 'AHR', 'IL2', 'CASP1', 'CCL22', 'IL17F', 'EPO', 'IFNA21', 'IL17A', 'IFNL1', 'CCR2', 'IFNA6', 'PTGER2', 'CCL25', 'CCL28', 'SPP1', 'CXCL1', 'IL23A', 'CCL3', 'MMP9', 'EBI3', 'IL26', 'IL19', 'CD28', 'IFNL2', 'KLRD1', 'CCL16', 'CXCL10', 'CCL1', 'TNF', 'IL36A', 'NLRP3', 'IL24', 'TSLP', 'PIK3CG', 'CCL8', 'PTGER4', 'CXCL17', 'CXCL13', 'IL18', 'CCL26', 'IFNA2', 'IL4', 'IL13', 'LTA', 'CCL14', 'CCL3L3', 'XCL2', 'IL17B', 'MMP3', 'IL1RN', 'XCL1', 'IL31', 'PF4V1', 'CXCL11', 'AGTR2', 'NOS3', 'NR3C2', 'CYP11B2', 'CYP11A1', 'ATF6B', 'CALML3', 'CALML3', 'CALML3', 'CAMK1', 'CAMK1', 'CAMK2A', 'CYP11A1', 'CAMK2D', 'CAMK2D', 'CAMK2G', 'CAMK2G', 'CAMK4', 'CREB3', 'CAMK2A', 'CAMK2A', 'CAMK2B', 'CAMK2B', 'CREB3', 'CREB3L1', 'ITPR3', 'CREB3L1', 'CREB3L3', 'CREB3L3', 'GNAQ', 'GNAQ', 'ITPR1', 'ITPR1', 'ITPR3', 'ATF2', 'ATF4', 'CALM1', 'CREB1', 'CREB3L2', 'CREB3L2', 'CREB3L4', 'CREB5', 'CREB5', 'CALM2', 'CALM3', 'CALML4', 'CALML4', 'CALML5', 'CALML6', 'ITPR2', 'ATF1', 'PLCB2', 'PLCB2', 'HSD3B1', 'HSD3B2', 'HSD3B2', 'STAR', 'CYP21A2', 'HSD3B1', 'CAMK1D', 'CAMK1G', 'CAMK1G', 'STAR', 'CHUK', 'IKBKG', 'IKBKB', 'NFKBIA', 'RELA', 'REL', 'NFKBIE', 'CYP1A1', 'NQO1', 'FOS', 'MAPK14', 'CYBB', 'NFE2L2', 'MAPK10', 'GPX1', 'SOD1', 'SOD2', 'HMOX1', 'GCLC', 'CAT', 'UGT1A6', 'MAOA', 'GPX3', 'XDH', 'SOD3', 'MT1X', 'JUNB', 'TXNRD2', 'TXNRD1', 'GSR', 'GSTT2', 'NOX1', 'MGST1', 'NFIX', 'TXN2', 'NOX5', 'NOX3']}
Returning 'get_table_columns':                                                    name
2049  Overview of proinflammatory and profibrotic me...
2050                           Kinin-Kallikrein Pathway
2051              Increased, Prostaglandin E2 secretion
2052                                    ACE2 inhibition
2053             Angiotensin II receptor type 1 pathway
...                                                 ...
2418                                              MGST1
2419                                               NFIX
2420                                               TXN2
2421                                               NOX5
2422                                               NOX3

[374 rows x 1 columns]
Returning 'get_selected_nodes': ['COL3A1', 'COL11A1', 'COL9A1', 'ADAMTS2', 'COL2A1', 'COL10A1', 'COL26A1', 'COL25A1', 'COL15A1', 'COL14A1', 'COL19A1', 'P3H1', 'P3H2', 'COLGALT1', 'COL9A3', 'AGT', 'CMA1', 'CPB2', 'CTSG', 'GZMH', 'COL24A1', 'P3H3', 'COLGALT2', 'COL6A6', 'COL6A5', 'COL20A1', 'CPB1', 'CPA3', 'ENPEP', 'IL37', 'IFNL3', 'RACK1', 'PF4', 'CCL23', 'CCL21', 'NOX4', 'IL17D', 'MAS1', 'IL27', 'IFNA16', 'IFNA4', 'CCL2', 'CXCL12', 'CXCL9', 'IL25', 'AGTR1', 'CXCL8', 'IFNG', 'IFNA8', 'CCL7', 'CCL11', 'CPN1', 'OSM', 'KNG1', 'CCL4', 'CCL18', 'KLKB1', 'IL10', 'IFNA5', 'IL3', 'CCL13', 'CCL24', 'IFNA13', 'CCL4L2', 'IL9', 'IFNK', 'IL21', 'IL22', 'IL12B', 'IL5', 'IFNA1', 'CNTF', 'CCL15', 'IL36B', 'IFNW1', 'IFNA17', 'IL1F10', 'IFNA14', 'IFNA7', 'IFNA10', 'IFNB1', 'IL20', 'IL7', 'CCL19', 'CCL17', 'IL2', 'IL17F', 'EPO', 'IFNA21', 'IL17A', 'IFNL1', 'CCR2', 'IFNA6', 'PTGER2', 'CCL25', 'CCL3', 'EBI3', 'IL26', 'CD28', 'IFNL2', 'KLRD1', 'CCL16', 'CCL1', 'NLRP3', 'IL24', 'PIK3CG', 'CCL8', 'CXCL13', 'IFNA2', 'IL4', 'IL13', 'LTA', 'CCL14', 'CCL3L3', 'XCL2', 'IL17B', 'XCL1', 'IL31', 'PF4V1', 'AGTR2', 'CYP11B2', 'CYP11A1', 'CAMK2A', 'CYP11A1', 'CAMK4', 'CAMK2A', 'CAMK2A', 'CAMK2B', 'CAMK2B', 'CREB3L3', 'CREB3L3', 'HSD3B1', 'HSD3B2', 'HSD3B2', 'HSD3B1', 'CAMK1G', 'CAMK1G', 'CYBB', 'NOX1', 'NOX5', 'NOX3']
Calling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling get_selected_edge_count(2039, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(2039, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [2868,3093,2039,152,381,78]
Returning 'cyrest_get': [2868, 3093, 2039, 152, 381, 78]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks/2039/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/2039/edges), params: {'column': 'selected', 'query': 'true'}
OK[200], content: []
Returning 'cyrest_get': []
Returning 'get_selected_edge_count': 0
Returning 'get_selected_edges': None
Returning 'create_composite_filter': {'nodes': ['COL3A1', 'COL11A1', 'COL9A1', 'ADAMTS2', 'COL2A1', 'COL10A1', 'COL26A1', 'COL25A1', 'COL15A1', 'COL14A1', 'COL19A1', 'P3H1', 'P3H2', 'COLGALT1', 'COL9A3', 'AGT', 'CMA1', 'CPB2', 'CTSG', 'GZMH', 'COL24A1', 'P3H3', 'COLGALT2', 'COL6A6', 'COL6A5', 'COL20A1', 'CPB1', 'CPA3', 'ENPEP', 'IL37', 'IFNL3', 'RACK1', 'PF4', 'CCL23', 'CCL21', 'NOX4', 'IL17D', 'MAS1', 'IL27', 'IFNA16', 'IFNA4', 'CCL2', 'CXCL12', 'CXCL9', 'IL25', 'AGTR1', 'CXCL8', 'IFNG', 'IFNA8', 'CCL7', 'CCL11', 'CPN1', 'OSM', 'KNG1', 'CCL4', 'CCL18', 'KLKB1', 'IL10', 'IFNA5', 'IL3', 'CCL13', 'CCL24', 'IFNA13', 'CCL4L2', 'IL9', 'IFNK', 'IL21', 'IL22', 'IL12B', 'IL5', 'IFNA1', 'CNTF', 'CCL15', 'IL36B', 'IFNW1', 'IFNA17', 'IL1F10', 'IFNA14', 'IFNA7', 'IFNA10', 'IFNB1', 'IL20', 'IL7', 'CCL19', 'CCL17', 'IL2', 'IL17F', 'EPO', 'IFNA21', 'IL17A', 'IFNL1', 'CCR2', 'IFNA6', 'PTGER2', 'CCL25', 'CCL3', 'EBI3', 'IL26', 'CD28', 'IFNL2', 'KLRD1', 'CCL16', 'CCL1', 'NLRP3', 'IL24', 'PIK3CG', 'CCL8', 'CXCL13', 'IFNA2', 'IL4', 'IL13', 'LTA', 'CCL14', 'CCL3L3', 'XCL2', 'IL17B', 'XCL1', 'IL31', 'PF4V1', 'AGTR2', 'CYP11B2', 'CYP11A1', 'CAMK2A', 'CYP11A1', 'CAMK4', 'CAMK2A', 'CAMK2A', 'CAMK2B', 'CAMK2B', 'CREB3L3', 'CREB3L3', 'HSD3B1', 'HSD3B2', 'HSD3B2', 'HSD3B1', 'CAMK1G', 'CAMK1G', 'CYBB', 'NOX1', 'NOX5', 'NOX3'], 'edges': None}
--------------------
Calling delete_selected_nodes()
Calling get_network_name(None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling cyrest_get('networks.names', {'column': 'suid', 'query': 2039}, base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks.names), params: {'column': 'suid', 'query': 2039}
OK[200], content: [{"name":"CTL_ACE2 inhibition leads to pulmonary fibrosis - Homo sapiens","SUID":2039}]
Returning 'cyrest_get': [{'name': 'CTL_ACE2 inhibition leads to pulmonary fibrosis - Homo sapiens', 'SUID': 2039}]
Returning 'get_network_name': 'CTL_ACE2 inhibition leads to pulmonary fibrosis - Homo sapiens'
Calling commands_post('network delete nodeList=selected network="CTL_ACE2 inhibition leads to pulmonary fibrosis - Homo sapiens"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/delete), json: {'nodeList': 'selected', 'network': 'CTL_ACE2 inhibition leads to pulmonary fibrosis - Homo sapiens'}
OK[200], content: {
 "data": {"nodes":[
  2250,
  2231,
  2309,
  2275,
  2257,
  2342,
  2175,
  2316,
  2253,
  2417,
  2223,
  2238,
  2264,
  2384,
  2344,
  2302,
  2163,
  2111,
  2118,
  2166,
  2105,
  2340,
  2248,
  2311,
  2255,
  2114,
  2286,
  2226,
  2146,
  2299,
  2179,
  2327,
  2313,
  2343,
  2145,
  2195,
  2233,
  2212,
  2127,
  2270,
  2237,
  2326,
  2117,
  2128,
  2279,
  2300,
  2102,
  2312,
  2314,
  2169,
  2247,
  2259,
  2222,
  2192,
  2323,
  2097,
  2198,
  2218,
  2265,
  2303,
  2110,
  2381,
  2256,
  2136,
  2186,
  2224,
  2278,
  2345,
  2204,
  2119,
  2291,
  2170,
  2143,
  2320,
  2383,
  2335,
  2376,
  2249,
  2167,
  2208,
  2230,
  2081,
  2171,
  2277,
  2112,
  2260,
  2200,
  2378,
  2155,
  2142,
  2085,
  2292,
  2188,
  2273,
  2099,
  2315,
  2172,
  2289,
  2276,
  2219,
  2334,
  2262,
  2350,
  2246,
  2181,
  2174,
  2306,
  2294,
  2397,
  2087,
  2296,
  2229,
  2153,
  2213,
  2280,
  2227,
  2234,
  2319,
  2106,
  2266,
  2293,
  2274,
  2093,
  2147,
  2422,
  2235,
  2281,
  2288,
  2351,
  2310,
  2377,
  2421,
  2221,
  2173,
  2321,
  2161,
  2240,
  2073,
  2154,
  2108,
  2196
], "edges":[
  2543,
  2544,
  2546,
  2805,
  2806,
  2551,
  2808,
  2553,
  2809,
  2810,
  2555,
  2557,
  2558,
  2562,
  2563,
  2564,
  2824,
  2569,
  2572,
  2828,
  2829,
  2573,
  2830,
  2575,
  2832,
  2833,
  2578,
  2834,
  2579,
  2582,
  2839,
  2840,
  2841,
  2842,
  2844,
  2846,
  2591,
  2848,
  2606,
  2614,
  2618,
  2620,
  2626,
  2630,
  2632,
  2635,
  2638,
  2639,
  2641,
  2643,
  2644,
  2645,
  2647,
  2655,
  2661,
  2662,
  2664,
  2665,
  2666,
  2423,
  2425,
  2427,
  2428,
  2429,
  2430,
  2431,
  2432,
  2434,
  2435,
  2692,
  2438,
  2439,
  2441,
  2697,
  2443,
  2444,
  2445,
  2448,
  2450,
  2452,
  2454,
  2455,
  2456,
  2457,
  2715,
  2459,
  2460,
  2462,
  2463,
  2719,
  2464,
  2720,
  2466,
  2467,
  2468,
  2726,
  2470,
  2471,
  2473,
  2733,
  2734,
  2479,
  2480,
  2481,
  2482,
  2483,
  2739,
  2741,
  2486,
  2742,
  2743,
  2488,
  2744,
  2489,
  2490,
  2492,
  2493,
  2749,
  2750,
  2495,
  2498,
  2499,
  2500,
  2503,
  2505,
  2506,
  2762,
  2507,
  2508,
  2509,
  2766,
  2510,
  2514,
  2515,
  2516,
  2518,
  2775,
  2519,
  2776,
  2521,
  2523,
  2525,
  2781,
  2782,
  2783,
  2527,
  2785,
  2530,
  2531,
  2787,
  2532,
  2533,
  2789,
  2790,
  2534,
  2535,
  2792,
  2536,
  2537,
  2538,
  2795,
  2796,
  2797
]},
 "errors":[]
}
Returning 'commands_post': {'nodes': [2250, 2231, 2309, 2275, 2257, 2342, 2175, 2316, 2253, 2417, 2223, 2238, 2264, 2384, 2344, 2302, 2163, 2111, 2118, 2166, 2105, 2340, 2248, 2311, 2255, 2114, 2286, 2226, 2146, 2299, 2179, 2327, 2313, 2343, 2145, 2195, 2233, 2212, 2127, 2270, 2237, 2326, 2117, 2128, 2279, 2300, 2102, 2312, 2314, 2169, 2247, 2259, 2222, 2192, 2323, 2097, 2198, 2218, 2265, 2303, 2110, 2381, 2256, 2136, 2186, 2224, 2278, 2345, 2204, 2119, 2291, 2170, 2143, 2320, 2383, 2335, 2376, 2249, 2167, 2208, 2230, 2081, 2171, 2277, 2112, 2260, 2200, 2378, 2155, 2142, 2085, 2292, 2188, 2273, 2099, 2315, 2172, 2289, 2276, 2219, 2334, 2262, 2350, 2246, 2181, 2174, 2306, 2294, 2397, 2087, 2296, 2229, 2153, 2213, 2280, 2227, 2234, 2319, 2106, 2266, 2293, 2274, 2093, 2147, 2422, 2235, 2281, 2288, 2351, 2310, 2377, 2421, 2221, 2173, 2321, 2161, 2240, 2073, 2154, 2108, 2196], 'edges': [2543, 2544, 2546, 2805, 2806, 2551, 2808, 2553, 2809, 2810, 2555, 2557, 2558, 2562, 2563, 2564, 2824, 2569, 2572, 2828, 2829, 2573, 2830, 2575, 2832, 2833, 2578, 2834, 2579, 2582, 2839, 2840, 2841, 2842, 2844, 2846, 2591, 2848, 2606, 2614, 2618, 2620, 2626, 2630, 2632, 2635, 2638, 2639, 2641, 2643, 2644, 2645, 2647, 2655, 2661, 2662, 2664, 2665, 2666, 2423, 2425, 2427, 2428, 2429, 2430, 2431, 2432, 2434, 2435, 2692, 2438, 2439, 2441, 2697, 2443, 2444, 2445, 2448, 2450, 2452, 2454, 2455, 2456, 2457, 2715, 2459, 2460, 2462, 2463, 2719, 2464, 2720, 2466, 2467, 2468, 2726, 2470, 2471, 2473, 2733, 2734, 2479, 2480, 2481, 2482, 2483, 2739, 2741, 2486, 2742, 2743, 2488, 2744, 2489, 2490, 2492, 2493, 2749, 2750, 2495, 2498, 2499, 2500, 2503, 2505, 2506, 2762, 2507, 2508, 2509, 2766, 2510, 2514, 2515, 2516, 2518, 2775, 2519, 2776, 2521, 2523, 2525, 2781, 2782, 2783, 2527, 2785, 2530, 2531, 2787, 2532, 2533, 2789, 2790, 2534, 2535, 2792, 2536, 2537, 2538, 2795, 2796, 2797]}
Returning 'delete_selected_nodes': {'nodes': [2250, 2231, 2309, 2275, 2257, 2342, 2175, 2316, 2253, 2417, 2223, 2238, 2264, 2384, 2344, 2302, 2163, 2111, 2118, 2166, 2105, 2340, 2248, 2311, 2255, 2114, 2286, 2226, 2146, 2299, 2179, 2327, 2313, 2343, 2145, 2195, 2233, 2212, 2127, 2270, 2237, 2326, 2117, 2128, 2279, 2300, 2102, 2312, 2314, 2169, 2247, 2259, 2222, 2192, 2323, 2097, 2198, 2218, 2265, 2303, 2110, 2381, 2256, 2136, 2186, 2224, 2278, 2345, 2204, 2119, 2291, 2170, 2143, 2320, 2383, 2335, 2376, 2249, 2167, 2208, 2230, 2081, 2171, 2277, 2112, 2260, 2200, 2378, 2155, 2142, 2085, 2292, 2188, 2273, 2099, 2315, 2172, 2289, 2276, 2219, 2334, 2262, 2350, 2246, 2181, 2174, 2306, 2294, 2397, 2087, 2296, 2229, 2153, 2213, 2280, 2227, 2234, 2319, 2106, 2266, 2293, 2274, 2093, 2147, 2422, 2235, 2281, 2288, 2351, 2310, 2377, 2421, 2221, 2173, 2321, 2161, 2240, 2073, 2154, 2108, 2196], 'edges': [2543, 2544, 2546, 2805, 2806, 2551, 2808, 2553, 2809, 2810, 2555, 2557, 2558, 2562, 2563, 2564, 2824, 2569, 2572, 2828, 2829, 2573, 2830, 2575, 2832, 2833, 2578, 2834, 2579, 2582, 2839, 2840, 2841, 2842, 2844, 2846, 2591, 2848, 2606, 2614, 2618, 2620, 2626, 2630, 2632, 2635, 2638, 2639, 2641, 2643, 2644, 2645, 2647, 2655, 2661, 2662, 2664, 2665, 2666, 2423, 2425, 2427, 2428, 2429, 2430, 2431, 2432, 2434, 2435, 2692, 2438, 2439, 2441, 2697, 2443, 2444, 2445, 2448, 2450, 2452, 2454, 2455, 2456, 2457, 2715, 2459, 2460, 2462, 2463, 2719, 2464, 2720, 2466, 2467, 2468, 2726, 2470, 2471, 2473, 2733, 2734, 2479, 2480, 2481, 2482, 2483, 2739, 2741, 2486, 2742, 2743, 2488, 2744, 2489, 2490, 2492, 2493, 2749, 2750, 2495, 2498, 2499, 2500, 2503, 2505, 2506, 2762, 2507, 2508, 2509, 2766, 2510, 2514, 2515, 2516, 2518, 2775, 2519, 2776, 2521, 2523, 2525, 2781, 2782, 2783, 2527, 2785, 2530, 2531, 2787, 2532, 2533, 2789, 2790, 2534, 2535, 2792, 2536, 2537, 2538, 2795, 2796, 2797]}
--------------------
Calling layout_network()
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 2039
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 2039}]
Returning 'get_network_suid': 2039
Calling commands_post('layout apply preferred networkSelected="SUID:2039"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/layout/apply%20preferred), json: {'networkSelected': 'SUID:2039'}
OK[200], content: {
 "data": {},
 "errors":[]
}
Returning 'commands_post': {}
Returning 'layout_network': {}
--------------------
Here is a very exciting log message, just for you
Calling cytoscape_version_info()
Calling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
Attempting to connect to local Cytoscape
Detected local Cytoscape
HTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/setSandbox), json: {'sandboxName': 'default_sandbox', 'copySamples': True, 'reinitialize': True}
OK[200], content: {
 "data": {"sandboxPath":"C:\\Users\\stefa\\CytoscapeConfiguration\\filetransfer\\default_sandbox"},
 "errors":[]
}
HTTP GET(http://127.0.0.1:1234/v1/version)
OK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.8.2"}
Returning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2'}
Returning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2', 'automationAPIVersion': '1.2.0', 'py4cytoscapeVersion': '0.0.9'}
--------------------
Calling commands_run('session open file=" C:\\Users\\stefa\\Documents\\GitHub\\2021-internship\\Raats\\networkDeleted.cys "')
Calling commands_get('session open file=" C:\\Users\\stefa\\Documents\\GitHub\\2021-internship\\Raats\\networkDeleted.cys "', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/commands/session/open), params: {'file': ' C:\\Users\\stefa\\Documents\\GitHub\\2021-internship\\Raats\\networkDeleted.cys '}
OK[200], content: Finished

Returning 'commands_get': []
Returning 'commands_run': []
--------------------
Calling create_column_filter('only_genes_filter', 'CTL.Type', 'gene', 'IS')
Calling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None)
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 6675
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 6675}]
Returning 'get_network_suid': 6675
Calling commands_post('network set current network="SUID:6675"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:6675'}
OK[200], content: {
 "data": {},
 "errors":[]
}
Returning 'commands_post': {}
Returning 'set_current_network': {}
Calling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 6675
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 6675}]
Returning 'get_network_suid': 6675
Calling cyrest_get('networks/6675/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Ext","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Type","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.label","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayID","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneID","type":"String","immutable":false,"primaryKey":false},{"name":"Unnamed: 0","type":"String","immutable":false,"primaryKey":false},{"name":"logFC","type":"Double","immutable":false,"primaryKey":false},{"name":"logCPM","type":"Double","immutable":false,"primaryKey":false},{"name":"F","type":"Double","immutable":false,"primaryKey":false},{"name":"PValue","type":"Double","immutable":false,"primaryKey":false},{"name":"FDR","type":"Double","immutable":false,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Ext', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Unnamed: 0', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'logFC', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'logCPM', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'F', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'PValue', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FDR', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
Returning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'CTL.Ext', 'CTL.Type', 'CTL.PathwayName', 'CTL.label', 'CTL.PathwayID', 'CTL.GeneName', 'CTL.GeneID', 'Unnamed: 0', 'logFC', 'logCPM', 'F', 'PValue', 'FDR']
Calling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/version)
OK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.8.2"}
Returning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2'}
Returning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2', 'automationAPIVersion': '1.2.0', 'py4cytoscapeVersion': '0.0.9'}
Calling cyrest_post('commands/filter/create', body={'name': 'only_genes_filter', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "gene", "columnName": "CTL.Type", "predicate": "IS", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}'}, base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'only_genes_filter', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": "gene", "columnName": "CTL.Type", "predicate": "IS", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}'}
OK[200], content: {
 "data": {},
 "errors":[]
}
Returning 'cyrest_post': {'data': {}, 'errors': []}
Calling get_node_count(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 6675
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 6675}]
Returning 'get_network_suid': 6675
Calling cyrest_get('networks/6675/nodes/count', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/nodes/count)
OK[200], content: {"count":233}
Returning 'cyrest_get': {'count': 233}
Returning 'get_node_count': 233
Calling get_edge_count(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 6675
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 6675}]
Returning 'get_network_suid': 6675
Calling cyrest_get('networks/6675/edges/count', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/edges/count)
OK[200], content: {"count":266}
Returning 'cyrest_get': {'count': 266}
Returning 'get_edge_count': 266
Calling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/version)
OK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.8.2"}
Returning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2'}
Returning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2', 'automationAPIVersion': '1.2.0', 'py4cytoscapeVersion': '0.0.9'}
Calling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 6675
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 6675}]
Returning 'get_network_suid': 6675
Calling get_selected_node_count(6675, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(6675, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [7200,6675,7429,6316,6541,9087]
Returning 'cyrest_get': [7200, 6675, 7429, 6316, 6541, 9087]
Returning 'get_network_suid': 6675
Calling cyrest_get('networks/6675/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/nodes), params: {'column': 'selected', 'query': 'true'}
OK[200], content: [6685,6686,6687,6688,6689,6690,6691,6692,6693,6694,6695,6696,6697,6698,6699,6700,6701,6702,6703,6704,6705,6706,6707,6708,6709,6710,6711,6712,6713,6714,6715,6716,6717,6718,6719,6720,6721,6722,6723,6724,6725,6726,6727,6728,6729,6730,6731,6732,6733,6734,6735,6736,6737,6738,6739,6740,6741,6742,6743,6744,6745,6746,6747,6748,6749,6750,6751,6752,6753,6754,6755,6756,6757,6758,6759,6760,6761,6762,6763,6764,6765,6766,6767,6768,6769,6770,6771,6772,6773,6774,6775,6776,6777,6778,6779,6780,6781,6782,6783,6784,6785,6786,6787,6788,6789,6790,6791,6792,6793,6794,6795,6796,6797,6798,6799,6800,6801,6802,6803,6804,6805,6806,6807,6808,6809,6810,6811,6812,6813,6814,6815,6816,6817,6818,6819,6820,6821,6822,6823,6824,6825,6826,6827,6828,6829,6830,6831,6832,6833,6834,6835,6836,6837,6838,6839,6840,6841,6842,6843,6844,6845,6846,6847,6848,6849,6850,6851,6852,6853,6854,6855,6856,6857,6858,6859,6860,6861,6862,6863,6864,6865,6866,6867,6868,6869,6870,6871,6872,6873,6874,6875,6876,6877,6878,6879,6880,6881,6882,6883,6884,6885,6886,6887,6888,6889,6890,6891,6892,6893,6894]
Returning 'cyrest_get': [6685, 6686, 6687, 6688, 6689, 6690, 6691, 6692, 6693, 6694, 6695, 6696, 6697, 6698, 6699, 6700, 6701, 6702, 6703, 6704, 6705, 6706, 6707, 6708, 6709, 6710, 6711, 6712, 6713, 6714, 6715, 6716, 6717, 6718, 6719, 6720, 6721, 6722, 6723, 6724, 6725, 6726, 6727, 6728, 6729, 6730, 6731, 6732, 6733, 6734, 6735, 6736, 6737, 6738, 6739, 6740, 6741, 6742, 6743, 6744, 6745, 6746, 6747, 6748, 6749, 6750, 6751, 6752, 6753, 6754, 6755, 6756, 6757, 6758, 6759, 6760, 6761, 6762, 6763, 6764, 6765, 6766, 6767, 6768, 6769, 6770, 6771, 6772, 6773, 6774, 6775, 6776, 6777, 6778, 6779, 6780, 6781, 6782, 6783, 6784, 6785, 6786, 6787, 6788, 6789, 6790, 6791, 6792, 6793, 6794, 6795, 6796, 6797, 6798, 6799, 6800, 6801, 6802, 6803, 6804, 6805, 6806, 6807, 6808, 6809, 6810, 6811, 6812, 6813, 6814, 6815, 6816, 6817, 6818, 6819, 6820, 6821, 6822, 6823, 6824, 6825, 6826, 6827, 6828, 6829, 6830, 6831, 6832, 6833, 6834, 6835, 6836, 6837, 6838, 6839, 6840, 6841, 6842, 6843, 6844, 6845, 6846, 6847, 6848, 6849, 6850, 6851, 6852, 6853, 6854, 6855, 6856, 6857, 6858, 6859, 6860, 6861, 6862, 6863, 6864, 6865, 6866, 6867, 6868, 6869, 6870, 6871, 6872, 6873, 6874, 6875, 6876, 6877, 6878, 6879, 6880, 6881, 6882, 6883, 6884, 6885, 6886, 6887, 6888, 6889, 6890, 6891, 6892, 6893, 6894]
Returning 'get_selected_node_count': 210
Calling cyrest_get('networks/6675/nodes', parameters={'column': 'selected', 'query': 'true'})
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/nodes), params: {'column': 'selected', 'query': 'true'}
OK[200], content: [6685,6686,6687,6688,6689,6690,6691,6692,6693,6694,6695,6696,6697,6698,6699,6700,6701,6702,6703,6704,6705,6706,6707,6708,6709,6710,6711,6712,6713,6714,6715,6716,6717,6718,6719,6720,6721,6722,6723,6724,6725,6726,6727,6728,6729,6730,6731,6732,6733,6734,6735,6736,6737,6738,6739,6740,6741,6742,6743,6744,6745,6746,6747,6748,6749,6750,6751,6752,6753,6754,6755,6756,6757,6758,6759,6760,6761,6762,6763,6764,6765,6766,6767,6768,6769,6770,6771,6772,6773,6774,6775,6776,6777,6778,6779,6780,6781,6782,6783,6784,6785,6786,6787,6788,6789,6790,6791,6792,6793,6794,6795,6796,6797,6798,6799,6800,6801,6802,6803,6804,6805,6806,6807,6808,6809,6810,6811,6812,6813,6814,6815,6816,6817,6818,6819,6820,6821,6822,6823,6824,6825,6826,6827,6828,6829,6830,6831,6832,6833,6834,6835,6836,6837,6838,6839,6840,6841,6842,6843,6844,6845,6846,6847,6848,6849,6850,6851,6852,6853,6854,6855,6856,6857,6858,6859,6860,6861,6862,6863,6864,6865,6866,6867,6868,6869,6870,6871,6872,6873,6874,6875,6876,6877,6878,6879,6880,6881,6882,6883,6884,6885,6886,6887,6888,6889,6890,6891,6892,6893,6894]
Returning 'cyrest_get': [6685, 6686, 6687, 6688, 6689, 6690, 6691, 6692, 6693, 6694, 6695, 6696, 6697, 6698, 6699, 6700, 6701, 6702, 6703, 6704, 6705, 6706, 6707, 6708, 6709, 6710, 6711, 6712, 6713, 6714, 6715, 6716, 6717, 6718, 6719, 6720, 6721, 6722, 6723, 6724, 6725, 6726, 6727, 6728, 6729, 6730, 6731, 6732, 6733, 6734, 6735, 6736, 6737, 6738, 6739, 6740, 6741, 6742, 6743, 6744, 6745, 6746, 6747, 6748, 6749, 6750, 6751, 6752, 6753, 6754, 6755, 6756, 6757, 6758, 6759, 6760, 6761, 6762, 6763, 6764, 6765, 6766, 6767, 6768, 6769, 6770, 6771, 6772, 6773, 6774, 6775, 6776, 6777, 6778, 6779, 6780, 6781, 6782, 6783, 6784, 6785, 6786, 6787, 6788, 6789, 6790, 6791, 6792, 6793, 6794, 6795, 6796, 6797, 6798, 6799, 6800, 6801, 6802, 6803, 6804, 6805, 6806, 6807, 6808, 6809, 6810, 6811, 6812, 6813, 6814, 6815, 6816, 6817, 6818, 6819, 6820, 6821, 6822, 6823, 6824, 6825, 6826, 6827, 6828, 6829, 6830, 6831, 6832, 6833, 6834, 6835, 6836, 6837, 6838, 6839, 6840, 6841, 6842, 6843, 6844, 6845, 6846, 6847, 6848, 6849, 6850, 6851, 6852, 6853, 6854, 6855, 6856, 6857, 6858, 6859, 6860, 6861, 6862, 6863, 6864, 6865, 6866, 6867, 6868, 6869, 6870, 6871, 6872, 6873, 6874, 6875, 6876, 6877, 6878, 6879, 6880, 6881, 6882, 6883, 6884, 6885, 6886, 6887, 6888, 6889, 6890, 6891, 6892, 6893, 6894]
Calling get_table_columns('node', ['name'], 'default', 6675, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(6675, 'http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [7200,6675,7429,6316,6541,9087]
Returning 'cyrest_get': [7200, 6675, 7429, 6316, 6541, 9087]
Returning 'get_network_suid': 6675
Calling get_table_column_types('node', namespace='default', network=6675, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(6675, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [7200,6675,7429,6316,6541,9087]
Returning 'cyrest_get': [7200, 6675, 7429, 6316, 6541, 9087]
Returning 'get_network_suid': 6675
Calling cyrest_get('networks/6675/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Ext","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Type","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.label","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayID","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneID","type":"String","immutable":false,"primaryKey":false},{"name":"Unnamed: 0","type":"String","immutable":false,"primaryKey":false},{"name":"logFC","type":"Double","immutable":false,"primaryKey":false},{"name":"logCPM","type":"Double","immutable":false,"primaryKey":false},{"name":"F","type":"Double","immutable":false,"primaryKey":false},{"name":"PValue","type":"Double","immutable":false,"primaryKey":false},{"name":"FDR","type":"Double","immutable":false,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Ext', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Unnamed: 0', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'logFC', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'logCPM', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'F', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'PValue', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FDR', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
Returning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'GraphID': 'String', 'Type': 'String', 'XrefId': 'String', 'XrefDatasource': 'String', 'Color': 'String', 'Border Width': 'Double', 'Node Size': 'Double', 'Label Font Size': 'Double', 'Ensembl': 'String', 'CTL.Ext': 'String', 'CTL.Type': 'String', 'CTL.PathwayName': 'String', 'CTL.label': 'String', 'CTL.PathwayID': 'String', 'CTL.GeneName': 'String', 'CTL.GeneID': 'String', 'Unnamed: 0': 'String', 'logFC': 'Double', 'logCPM': 'Double', 'F': 'Double', 'PValue': 'Double', 'FDR': 'Double'}
Calling cyrest_get('networks/6675/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/tables/defaultnode/columns/SUID)
OK[200], content: {"name":"SUID","values":[6685,6686,6687,6688,6689,6690,6691,6692,6693,6694,6695,6696,6697,6698,6699,6700,6701,6702,6703,6704,6705,6706,6707,6708,6709,6710,6711,6712,6713,6714,6715,6716,6717,6718,6719,6720,6721,6722,6723,6724,6725,6726,6727,6728,6729,6730,6731,6732,6733,6734,6735,6736,6737,6738,6739,6740,6741,6742,6743,6744,6745,6746,6747,6748,6749,6750,6751,6752,6753,6754,6755,6756,6757,6758,6759,6760,6761,6762,6763,6764,6765,6766,6767,6768,6769,6770,6771,6772,6773,6774,6775,6776,6777,6778,6779,6780,6781,6782,6783,6784,6785,6786,6787,6788,6789,6790,6791,6792,6793,6794,6795,6796,6797,6798,6799,6800,6801,6802,6803,6804,6805,6806,6807,6808,6809,6810,6811,6812,6813,6814,6815,6816,6817,6818,6819,6820,6821,6822,6823,6824,6825,6826,6827,6828,6829,6830,6831,6832,6833,6834,6835,6836,6837,6838,6839,6840,6841,6842,6843,6844,6845,6846,6847,6848,6849,6850,6851,6852,6853,6854,6855,6856,6857,6858,6859,6860,6861,6862,6863,6864,6865,6866,6867,6868,6869,6870,6871,6872,6873,6874,6875,6876,6877,6878,6879,6880,6881,6882,6883,6884,6885,6886,6887,6888,6889,6890,6891,6892,6893,6894,6895,6896,6897,6898,6899,6900,6901,6902,6903,6904,6905,6906,6907,6908,6909,6910,6911,6912,6913,6914,6915,6916,6917]}
Returning 'cyrest_get': {'name': 'SUID', 'values': [6685, 6686, 6687, 6688, 6689, 6690, 6691, 6692, 6693, 6694, 6695, 6696, 6697, 6698, 6699, 6700, 6701, 6702, 6703, 6704, 6705, 6706, 6707, 6708, 6709, 6710, 6711, 6712, 6713, 6714, 6715, 6716, 6717, 6718, 6719, 6720, 6721, 6722, 6723, 6724, 6725, 6726, 6727, 6728, 6729, 6730, 6731, 6732, 6733, 6734, 6735, 6736, 6737, 6738, 6739, 6740, 6741, 6742, 6743, 6744, 6745, 6746, 6747, 6748, 6749, 6750, 6751, 6752, 6753, 6754, 6755, 6756, 6757, 6758, 6759, 6760, 6761, 6762, 6763, 6764, 6765, 6766, 6767, 6768, 6769, 6770, 6771, 6772, 6773, 6774, 6775, 6776, 6777, 6778, 6779, 6780, 6781, 6782, 6783, 6784, 6785, 6786, 6787, 6788, 6789, 6790, 6791, 6792, 6793, 6794, 6795, 6796, 6797, 6798, 6799, 6800, 6801, 6802, 6803, 6804, 6805, 6806, 6807, 6808, 6809, 6810, 6811, 6812, 6813, 6814, 6815, 6816, 6817, 6818, 6819, 6820, 6821, 6822, 6823, 6824, 6825, 6826, 6827, 6828, 6829, 6830, 6831, 6832, 6833, 6834, 6835, 6836, 6837, 6838, 6839, 6840, 6841, 6842, 6843, 6844, 6845, 6846, 6847, 6848, 6849, 6850, 6851, 6852, 6853, 6854, 6855, 6856, 6857, 6858, 6859, 6860, 6861, 6862, 6863, 6864, 6865, 6866, 6867, 6868, 6869, 6870, 6871, 6872, 6873, 6874, 6875, 6876, 6877, 6878, 6879, 6880, 6881, 6882, 6883, 6884, 6885, 6886, 6887, 6888, 6889, 6890, 6891, 6892, 6893, 6894, 6895, 6896, 6897, 6898, 6899, 6900, 6901, 6902, 6903, 6904, 6905, 6906, 6907, 6908, 6909, 6910, 6911, 6912, 6913, 6914, 6915, 6916, 6917]}
Calling cyrest_get('networks/6675/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/tables/defaultnode/columns/name)
OK[200], content: {"name":"name","values":["TXN2","NFIX","MGST1","GSTT2","GSR","TXNRD1","TXNRD2","JUNB","MT1X","SOD3","XDH","GPX3","MAOA","UGT1A6","CAT","GCLC","HMOX1","SOD2","SOD1","GPX1","MAPK10","NFE2L2","MAPK14","FOS","NQO1","CYP1A1","NFKBIE","REL","RELA","NFKBIA","IKBKB","IKBKG","CHUK","STAR","CAMK1D","CYP21A2","STAR","PLCB2","PLCB2","ATF1","ITPR2","CALML6","CALML5","CALML4","CALML4","CALM3","CALM2","CREB5","CREB5","CREB3L4","CREB3L2","CREB3L2","CREB1","CALM1","ATF4","ATF2","ITPR3","ITPR1","ITPR1","GNAQ","GNAQ","CREB3L1","ITPR3","CREB3L1","CREB3","CREB3","CAMK2G","CAMK2G","CAMK2D","CAMK2D","CAMK1","CAMK1","CALML3","CALML3","CALML3","ATF6B","NR3C2","NOS3","CXCL11","IL1RN","MMP3","CCL26","IL18","CXCL17","PTGER4","TSLP","IL36A","TNF","CXCL10","IL19","MMP9","IL23A","CXCL1","SPP1","CCL28","CCL22","CASP1","AHR","TNFSF13B","CCL20","PPBP","MMP1","CSF2","CXCL3","CXCL6","IL36RN","CTF1","AREG","CSF1","CSF3","IL15","LIF","VEGFA","IL33","CX3CL1","CXCL14","BDKRB1","CXCL2","CTGF","HIF1A","BDKRB2","CXCL5","SERPING1","PDGFD","MAPK1","NFKB1","SMAD4","TNFSF13","IL6ST","CCL5","SP1","MAP2K6","RRAS","IL36G","IL11","IL6","IL11RA","JUND","SMAD3","IL1B","F12","PTPN11","RAF1","IL1A","ACTA2","TGFBR2","TGFB1","IL17C","TGFBR1","CXCL16","PTGES","IRF7","PYCARD","IL12A","C9orf3","PCOLCE2","COL22A1","COL21A1","COL28A1","PLOD3","P4HA3","COL6A3","TLL2","COL27A1","COL8A1","COL8A2","PCOLCE","COL4A5","ADAMTS3","COL4A3","ADAMTS14","TLL1","ATP6AP2","ANPEP","MME","CTSZ","CES1","ACE","REN","ACE2","CTSD","COL9A2","COL4A6","COL18A1","COL16A1","COL6A1","COL17A1","COL13A1","COL12A1","COL23A1","COL7A1","PLOD2","PLOD1","COL4A2","P4HB","COL5A2","COL4A1","P4HA2","CRTAP","PPIB","COL5A1","COL6A2","COL11A2","P4HA1","BMP1","COL5A3","SERPINH1","COL4A4","COL1A2","COL1A1","Prostaglandin signaling","Bradykinin signaling network","Bradykinin receptor B1 activation","Increased, secretion of proinflammatory and profibrotic mediators","Increase activation, Nuclear factor kappa B (NF-kB)","Metabolism of Angiotensinogen to Angiotensins","Increased, Reactive oxygen species","Renin Angiotensin Aldosterone System","Bradykinin system, hyperactivated","KE1740: ACE2 inhibition","Oxidative stress","NF-KB pathway","KE1752: Increased Angiotensin II","KE1743: Increased plasma Angiotensin II","KE68: Collagen Accumulation","KE1276: Lung Fibrosis","Collagen biosynthesis and modifying enzymes","Binding of agonist, Angiotensin II receptor type 1 receptor (AT1R)","Angiotensin II receptor type 1 pathway","ACE2 inhibition","Increased, Prostaglandin E2 secretion","Kinin-Kallikrein Pathway","Overview of proinflammatory and profibrotic mediators"]}
Returning 'cyrest_get': {'name': 'name', 'values': ['TXN2', 'NFIX', 'MGST1', 'GSTT2', 'GSR', 'TXNRD1', 'TXNRD2', 'JUNB', 'MT1X', 'SOD3', 'XDH', 'GPX3', 'MAOA', 'UGT1A6', 'CAT', 'GCLC', 'HMOX1', 'SOD2', 'SOD1', 'GPX1', 'MAPK10', 'NFE2L2', 'MAPK14', 'FOS', 'NQO1', 'CYP1A1', 'NFKBIE', 'REL', 'RELA', 'NFKBIA', 'IKBKB', 'IKBKG', 'CHUK', 'STAR', 'CAMK1D', 'CYP21A2', 'STAR', 'PLCB2', 'PLCB2', 'ATF1', 'ITPR2', 'CALML6', 'CALML5', 'CALML4', 'CALML4', 'CALM3', 'CALM2', 'CREB5', 'CREB5', 'CREB3L4', 'CREB3L2', 'CREB3L2', 'CREB1', 'CALM1', 'ATF4', 'ATF2', 'ITPR3', 'ITPR1', 'ITPR1', 'GNAQ', 'GNAQ', 'CREB3L1', 'ITPR3', 'CREB3L1', 'CREB3', 'CREB3', 'CAMK2G', 'CAMK2G', 'CAMK2D', 'CAMK2D', 'CAMK1', 'CAMK1', 'CALML3', 'CALML3', 'CALML3', 'ATF6B', 'NR3C2', 'NOS3', 'CXCL11', 'IL1RN', 'MMP3', 'CCL26', 'IL18', 'CXCL17', 'PTGER4', 'TSLP', 'IL36A', 'TNF', 'CXCL10', 'IL19', 'MMP9', 'IL23A', 'CXCL1', 'SPP1', 'CCL28', 'CCL22', 'CASP1', 'AHR', 'TNFSF13B', 'CCL20', 'PPBP', 'MMP1', 'CSF2', 'CXCL3', 'CXCL6', 'IL36RN', 'CTF1', 'AREG', 'CSF1', 'CSF3', 'IL15', 'LIF', 'VEGFA', 'IL33', 'CX3CL1', 'CXCL14', 'BDKRB1', 'CXCL2', 'CTGF', 'HIF1A', 'BDKRB2', 'CXCL5', 'SERPING1', 'PDGFD', 'MAPK1', 'NFKB1', 'SMAD4', 'TNFSF13', 'IL6ST', 'CCL5', 'SP1', 'MAP2K6', 'RRAS', 'IL36G', 'IL11', 'IL6', 'IL11RA', 'JUND', 'SMAD3', 'IL1B', 'F12', 'PTPN11', 'RAF1', 'IL1A', 'ACTA2', 'TGFBR2', 'TGFB1', 'IL17C', 'TGFBR1', 'CXCL16', 'PTGES', 'IRF7', 'PYCARD', 'IL12A', 'C9orf3', 'PCOLCE2', 'COL22A1', 'COL21A1', 'COL28A1', 'PLOD3', 'P4HA3', 'COL6A3', 'TLL2', 'COL27A1', 'COL8A1', 'COL8A2', 'PCOLCE', 'COL4A5', 'ADAMTS3', 'COL4A3', 'ADAMTS14', 'TLL1', 'ATP6AP2', 'ANPEP', 'MME', 'CTSZ', 'CES1', 'ACE', 'REN', 'ACE2', 'CTSD', 'COL9A2', 'COL4A6', 'COL18A1', 'COL16A1', 'COL6A1', 'COL17A1', 'COL13A1', 'COL12A1', 'COL23A1', 'COL7A1', 'PLOD2', 'PLOD1', 'COL4A2', 'P4HB', 'COL5A2', 'COL4A1', 'P4HA2', 'CRTAP', 'PPIB', 'COL5A1', 'COL6A2', 'COL11A2', 'P4HA1', 'BMP1', 'COL5A3', 'SERPINH1', 'COL4A4', 'COL1A2', 'COL1A1', 'Prostaglandin signaling', 'Bradykinin signaling network', 'Bradykinin receptor B1 activation', 'Increased, secretion of proinflammatory and profibrotic mediators', 'Increase activation, Nuclear factor kappa B (NF-kB)', 'Metabolism of Angiotensinogen to Angiotensins', 'Increased, Reactive oxygen species', 'Renin Angiotensin Aldosterone System', 'Bradykinin system, hyperactivated', 'KE1740: ACE2 inhibition', 'Oxidative stress', 'NF-KB pathway', 'KE1752: Increased Angiotensin II', 'KE1743: Increased plasma Angiotensin II', 'KE68: Collagen Accumulation', 'KE1276: Lung Fibrosis', 'Collagen biosynthesis and modifying enzymes', 'Binding of agonist, Angiotensin II receptor type 1 receptor (AT1R)', 'Angiotensin II receptor type 1 pathway', 'ACE2 inhibition', 'Increased, Prostaglandin E2 secretion', 'Kinin-Kallikrein Pathway', 'Overview of proinflammatory and profibrotic mediators']}
Returning 'get_table_columns':                                                    name
6685                                               TXN2
6686                                               NFIX
6687                                              MGST1
6688                                              GSTT2
6689                                                GSR
...                                                 ...
6913             Angiotensin II receptor type 1 pathway
6914                                    ACE2 inhibition
6915              Increased, Prostaglandin E2 secretion
6916                           Kinin-Kallikrein Pathway
6917  Overview of proinflammatory and profibrotic me...

[233 rows x 1 columns]
Returning 'get_selected_nodes': ['TXN2', 'NFIX', 'MGST1', 'GSTT2', 'GSR', 'TXNRD1', 'TXNRD2', 'JUNB', 'MT1X', 'SOD3', 'XDH', 'GPX3', 'MAOA', 'UGT1A6', 'CAT', 'GCLC', 'HMOX1', 'SOD2', 'SOD1', 'GPX1', 'MAPK10', 'NFE2L2', 'MAPK14', 'FOS', 'NQO1', 'CYP1A1', 'NFKBIE', 'REL', 'RELA', 'NFKBIA', 'IKBKB', 'IKBKG', 'CHUK', 'STAR', 'CAMK1D', 'CYP21A2', 'STAR', 'PLCB2', 'PLCB2', 'ATF1', 'ITPR2', 'CALML6', 'CALML5', 'CALML4', 'CALML4', 'CALM3', 'CALM2', 'CREB5', 'CREB5', 'CREB3L4', 'CREB3L2', 'CREB3L2', 'CREB1', 'CALM1', 'ATF4', 'ATF2', 'ITPR3', 'ITPR1', 'ITPR1', 'GNAQ', 'GNAQ', 'CREB3L1', 'ITPR3', 'CREB3L1', 'CREB3', 'CREB3', 'CAMK2G', 'CAMK2G', 'CAMK2D', 'CAMK2D', 'CAMK1', 'CAMK1', 'CALML3', 'CALML3', 'CALML3', 'ATF6B', 'NR3C2', 'NOS3', 'CXCL11', 'IL1RN', 'MMP3', 'CCL26', 'IL18', 'CXCL17', 'PTGER4', 'TSLP', 'IL36A', 'TNF', 'CXCL10', 'IL19', 'MMP9', 'IL23A', 'CXCL1', 'SPP1', 'CCL28', 'CCL22', 'CASP1', 'AHR', 'TNFSF13B', 'CCL20', 'PPBP', 'MMP1', 'CSF2', 'CXCL3', 'CXCL6', 'IL36RN', 'CTF1', 'AREG', 'CSF1', 'CSF3', 'IL15', 'LIF', 'VEGFA', 'IL33', 'CX3CL1', 'CXCL14', 'BDKRB1', 'CXCL2', 'CTGF', 'HIF1A', 'BDKRB2', 'CXCL5', 'SERPING1', 'PDGFD', 'MAPK1', 'NFKB1', 'SMAD4', 'TNFSF13', 'IL6ST', 'CCL5', 'SP1', 'MAP2K6', 'RRAS', 'IL36G', 'IL11', 'IL6', 'IL11RA', 'JUND', 'SMAD3', 'IL1B', 'F12', 'PTPN11', 'RAF1', 'IL1A', 'ACTA2', 'TGFBR2', 'TGFB1', 'IL17C', 'TGFBR1', 'CXCL16', 'PTGES', 'IRF7', 'PYCARD', 'IL12A', 'C9orf3', 'PCOLCE2', 'COL22A1', 'COL21A1', 'COL28A1', 'PLOD3', 'P4HA3', 'COL6A3', 'TLL2', 'COL27A1', 'COL8A1', 'COL8A2', 'PCOLCE', 'COL4A5', 'ADAMTS3', 'COL4A3', 'ADAMTS14', 'TLL1', 'ATP6AP2', 'ANPEP', 'MME', 'CTSZ', 'CES1', 'ACE', 'REN', 'ACE2', 'CTSD', 'COL9A2', 'COL4A6', 'COL18A1', 'COL16A1', 'COL6A1', 'COL17A1', 'COL13A1', 'COL12A1', 'COL23A1', 'COL7A1', 'PLOD2', 'PLOD1', 'COL4A2', 'P4HB', 'COL5A2', 'COL4A1', 'P4HA2', 'CRTAP', 'PPIB', 'COL5A1', 'COL6A2', 'COL11A2', 'P4HA1', 'BMP1', 'COL5A3', 'SERPINH1', 'COL4A4', 'COL1A2', 'COL1A1']
Calling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 6675
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 6675}]
Returning 'get_network_suid': 6675
Calling get_selected_edge_count(6675, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(6675, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [7200,6675,7429,6316,6541,9087]
Returning 'cyrest_get': [7200, 6675, 7429, 6316, 6541, 9087]
Returning 'get_network_suid': 6675
Calling cyrest_get('networks/6675/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/edges), params: {'column': 'selected', 'query': 'true'}
OK[200], content: []
Returning 'cyrest_get': []
Returning 'get_selected_edge_count': 0
Returning 'get_selected_edges': None
Returning 'create_column_filter': {'nodes': ['TXN2', 'NFIX', 'MGST1', 'GSTT2', 'GSR', 'TXNRD1', 'TXNRD2', 'JUNB', 'MT1X', 'SOD3', 'XDH', 'GPX3', 'MAOA', 'UGT1A6', 'CAT', 'GCLC', 'HMOX1', 'SOD2', 'SOD1', 'GPX1', 'MAPK10', 'NFE2L2', 'MAPK14', 'FOS', 'NQO1', 'CYP1A1', 'NFKBIE', 'REL', 'RELA', 'NFKBIA', 'IKBKB', 'IKBKG', 'CHUK', 'STAR', 'CAMK1D', 'CYP21A2', 'STAR', 'PLCB2', 'PLCB2', 'ATF1', 'ITPR2', 'CALML6', 'CALML5', 'CALML4', 'CALML4', 'CALM3', 'CALM2', 'CREB5', 'CREB5', 'CREB3L4', 'CREB3L2', 'CREB3L2', 'CREB1', 'CALM1', 'ATF4', 'ATF2', 'ITPR3', 'ITPR1', 'ITPR1', 'GNAQ', 'GNAQ', 'CREB3L1', 'ITPR3', 'CREB3L1', 'CREB3', 'CREB3', 'CAMK2G', 'CAMK2G', 'CAMK2D', 'CAMK2D', 'CAMK1', 'CAMK1', 'CALML3', 'CALML3', 'CALML3', 'ATF6B', 'NR3C2', 'NOS3', 'CXCL11', 'IL1RN', 'MMP3', 'CCL26', 'IL18', 'CXCL17', 'PTGER4', 'TSLP', 'IL36A', 'TNF', 'CXCL10', 'IL19', 'MMP9', 'IL23A', 'CXCL1', 'SPP1', 'CCL28', 'CCL22', 'CASP1', 'AHR', 'TNFSF13B', 'CCL20', 'PPBP', 'MMP1', 'CSF2', 'CXCL3', 'CXCL6', 'IL36RN', 'CTF1', 'AREG', 'CSF1', 'CSF3', 'IL15', 'LIF', 'VEGFA', 'IL33', 'CX3CL1', 'CXCL14', 'BDKRB1', 'CXCL2', 'CTGF', 'HIF1A', 'BDKRB2', 'CXCL5', 'SERPING1', 'PDGFD', 'MAPK1', 'NFKB1', 'SMAD4', 'TNFSF13', 'IL6ST', 'CCL5', 'SP1', 'MAP2K6', 'RRAS', 'IL36G', 'IL11', 'IL6', 'IL11RA', 'JUND', 'SMAD3', 'IL1B', 'F12', 'PTPN11', 'RAF1', 'IL1A', 'ACTA2', 'TGFBR2', 'TGFB1', 'IL17C', 'TGFBR1', 'CXCL16', 'PTGES', 'IRF7', 'PYCARD', 'IL12A', 'C9orf3', 'PCOLCE2', 'COL22A1', 'COL21A1', 'COL28A1', 'PLOD3', 'P4HA3', 'COL6A3', 'TLL2', 'COL27A1', 'COL8A1', 'COL8A2', 'PCOLCE', 'COL4A5', 'ADAMTS3', 'COL4A3', 'ADAMTS14', 'TLL1', 'ATP6AP2', 'ANPEP', 'MME', 'CTSZ', 'CES1', 'ACE', 'REN', 'ACE2', 'CTSD', 'COL9A2', 'COL4A6', 'COL18A1', 'COL16A1', 'COL6A1', 'COL17A1', 'COL13A1', 'COL12A1', 'COL23A1', 'COL7A1', 'PLOD2', 'PLOD1', 'COL4A2', 'P4HB', 'COL5A2', 'COL4A1', 'P4HA2', 'CRTAP', 'PPIB', 'COL5A1', 'COL6A2', 'COL11A2', 'P4HA1', 'BMP1', 'COL5A3', 'SERPINH1', 'COL4A4', 'COL1A2', 'COL1A1'], 'edges': None}
--------------------
Calling create_column_filter('sig_gene_filter', 'PValue', 0.05, 'LESS_THAN')
Calling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None)
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 6675
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 6675}]
Returning 'get_network_suid': 6675
Calling commands_post('network set current network="SUID:6675"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:6675'}
OK[200], content: {
 "data": {},
 "errors":[]
}
Returning 'commands_post': {}
Returning 'set_current_network': {}
Calling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 6675
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 6675}]
Returning 'get_network_suid': 6675
Calling cyrest_get('networks/6675/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Ext","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Type","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.label","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayID","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneID","type":"String","immutable":false,"primaryKey":false},{"name":"Unnamed: 0","type":"String","immutable":false,"primaryKey":false},{"name":"logFC","type":"Double","immutable":false,"primaryKey":false},{"name":"logCPM","type":"Double","immutable":false,"primaryKey":false},{"name":"F","type":"Double","immutable":false,"primaryKey":false},{"name":"PValue","type":"Double","immutable":false,"primaryKey":false},{"name":"FDR","type":"Double","immutable":false,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Ext', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Unnamed: 0', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'logFC', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'logCPM', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'F', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'PValue', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FDR', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
Returning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'Type', 'XrefId', 'XrefDatasource', 'Color', 'Border Width', 'Node Size', 'Label Font Size', 'Ensembl', 'CTL.Ext', 'CTL.Type', 'CTL.PathwayName', 'CTL.label', 'CTL.PathwayID', 'CTL.GeneName', 'CTL.GeneID', 'Unnamed: 0', 'logFC', 'logCPM', 'F', 'PValue', 'FDR']
Calling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/version)
OK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.8.2"}
Returning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2'}
Returning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2', 'automationAPIVersion': '1.2.0', 'py4cytoscapeVersion': '0.0.9'}
Calling cyrest_post('commands/filter/create', body={'name': 'sig_gene_filter', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": 0.05, "columnName": "PValue", "predicate": "LESS_THAN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}'}, base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'sig_gene_filter', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": 0.05, "columnName": "PValue", "predicate": "LESS_THAN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}'}
OK[200], content: {
 "data": {},
 "errors":[]
}
Returning 'cyrest_post': {'data': {}, 'errors': []}
Calling get_node_count(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 6675
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 6675}]
Returning 'get_network_suid': 6675
Calling cyrest_get('networks/6675/nodes/count', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/nodes/count)
OK[200], content: {"count":233}
Returning 'cyrest_get': {'count': 233}
Returning 'get_node_count': 233
Calling get_edge_count(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 6675
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 6675}]
Returning 'get_network_suid': 6675
Calling cyrest_get('networks/6675/edges/count', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/edges/count)
OK[200], content: {"count":266}
Returning 'cyrest_get': {'count': 266}
Returning 'get_edge_count': 266
Calling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/version)
OK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.8.2"}
Returning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2'}
Returning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2', 'automationAPIVersion': '1.2.0', 'py4cytoscapeVersion': '0.0.9'}
Calling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 6675
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 6675}]
Returning 'get_network_suid': 6675
Calling get_selected_node_count(6675, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(6675, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [7200,6675,7429,6316,6541,9087]
Returning 'cyrest_get': [7200, 6675, 7429, 6316, 6541, 9087]
Returning 'get_network_suid': 6675
Calling cyrest_get('networks/6675/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/nodes), params: {'column': 'selected', 'query': 'true'}
OK[200], content: [6686,6689,6693,6695,6696,6697,6699,6700,6702,6705,6706,6711,6714,6739,6741,6742,6743,6747,6753,6754,6757,6758,6759,6764,6771,6772,6773,6775,6776,6777,6779,6784,6786,6787,6788,6789,6793,6794,6795,6796,6797,6798,6800,6802,6803,6806,6810,6816,6818,6820,6823,6824,6828,6830,6832,6834,6835,6836,6847,6849,6856,6857,6859,6861,6873,6884]
Returning 'cyrest_get': [6686, 6689, 6693, 6695, 6696, 6697, 6699, 6700, 6702, 6705, 6706, 6711, 6714, 6739, 6741, 6742, 6743, 6747, 6753, 6754, 6757, 6758, 6759, 6764, 6771, 6772, 6773, 6775, 6776, 6777, 6779, 6784, 6786, 6787, 6788, 6789, 6793, 6794, 6795, 6796, 6797, 6798, 6800, 6802, 6803, 6806, 6810, 6816, 6818, 6820, 6823, 6824, 6828, 6830, 6832, 6834, 6835, 6836, 6847, 6849, 6856, 6857, 6859, 6861, 6873, 6884]
Returning 'get_selected_node_count': 66
Calling cyrest_get('networks/6675/nodes', parameters={'column': 'selected', 'query': 'true'})
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/nodes), params: {'column': 'selected', 'query': 'true'}
OK[200], content: [6686,6689,6693,6695,6696,6697,6699,6700,6702,6705,6706,6711,6714,6739,6741,6742,6743,6747,6753,6754,6757,6758,6759,6764,6771,6772,6773,6775,6776,6777,6779,6784,6786,6787,6788,6789,6793,6794,6795,6796,6797,6798,6800,6802,6803,6806,6810,6816,6818,6820,6823,6824,6828,6830,6832,6834,6835,6836,6847,6849,6856,6857,6859,6861,6873,6884]
Returning 'cyrest_get': [6686, 6689, 6693, 6695, 6696, 6697, 6699, 6700, 6702, 6705, 6706, 6711, 6714, 6739, 6741, 6742, 6743, 6747, 6753, 6754, 6757, 6758, 6759, 6764, 6771, 6772, 6773, 6775, 6776, 6777, 6779, 6784, 6786, 6787, 6788, 6789, 6793, 6794, 6795, 6796, 6797, 6798, 6800, 6802, 6803, 6806, 6810, 6816, 6818, 6820, 6823, 6824, 6828, 6830, 6832, 6834, 6835, 6836, 6847, 6849, 6856, 6857, 6859, 6861, 6873, 6884]
Calling get_table_columns('node', ['name'], 'default', 6675, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(6675, 'http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [7200,6675,7429,6316,6541,9087]
Returning 'cyrest_get': [7200, 6675, 7429, 6316, 6541, 9087]
Returning 'get_network_suid': 6675
Calling get_table_column_types('node', namespace='default', network=6675, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(6675, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [7200,6675,7429,6316,6541,9087]
Returning 'cyrest_get': [7200, 6675, 7429, 6316, 6541, 9087]
Returning 'get_network_suid': 6675
Calling cyrest_get('networks/6675/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Ext","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Type","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.label","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayID","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneID","type":"String","immutable":false,"primaryKey":false},{"name":"Unnamed: 0","type":"String","immutable":false,"primaryKey":false},{"name":"logFC","type":"Double","immutable":false,"primaryKey":false},{"name":"logCPM","type":"Double","immutable":false,"primaryKey":false},{"name":"F","type":"Double","immutable":false,"primaryKey":false},{"name":"PValue","type":"Double","immutable":false,"primaryKey":false},{"name":"FDR","type":"Double","immutable":false,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Ext', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Unnamed: 0', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'logFC', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'logCPM', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'F', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'PValue', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FDR', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
Returning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'GraphID': 'String', 'Type': 'String', 'XrefId': 'String', 'XrefDatasource': 'String', 'Color': 'String', 'Border Width': 'Double', 'Node Size': 'Double', 'Label Font Size': 'Double', 'Ensembl': 'String', 'CTL.Ext': 'String', 'CTL.Type': 'String', 'CTL.PathwayName': 'String', 'CTL.label': 'String', 'CTL.PathwayID': 'String', 'CTL.GeneName': 'String', 'CTL.GeneID': 'String', 'Unnamed: 0': 'String', 'logFC': 'Double', 'logCPM': 'Double', 'F': 'Double', 'PValue': 'Double', 'FDR': 'Double'}
Calling cyrest_get('networks/6675/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/tables/defaultnode/columns/SUID)
OK[200], content: {"name":"SUID","values":[6685,6686,6687,6688,6689,6690,6691,6692,6693,6694,6695,6696,6697,6698,6699,6700,6701,6702,6703,6704,6705,6706,6707,6708,6709,6710,6711,6712,6713,6714,6715,6716,6717,6718,6719,6720,6721,6722,6723,6724,6725,6726,6727,6728,6729,6730,6731,6732,6733,6734,6735,6736,6737,6738,6739,6740,6741,6742,6743,6744,6745,6746,6747,6748,6749,6750,6751,6752,6753,6754,6755,6756,6757,6758,6759,6760,6761,6762,6763,6764,6765,6766,6767,6768,6769,6770,6771,6772,6773,6774,6775,6776,6777,6778,6779,6780,6781,6782,6783,6784,6785,6786,6787,6788,6789,6790,6791,6792,6793,6794,6795,6796,6797,6798,6799,6800,6801,6802,6803,6804,6805,6806,6807,6808,6809,6810,6811,6812,6813,6814,6815,6816,6817,6818,6819,6820,6821,6822,6823,6824,6825,6826,6827,6828,6829,6830,6831,6832,6833,6834,6835,6836,6837,6838,6839,6840,6841,6842,6843,6844,6845,6846,6847,6848,6849,6850,6851,6852,6853,6854,6855,6856,6857,6858,6859,6860,6861,6862,6863,6864,6865,6866,6867,6868,6869,6870,6871,6872,6873,6874,6875,6876,6877,6878,6879,6880,6881,6882,6883,6884,6885,6886,6887,6888,6889,6890,6891,6892,6893,6894,6895,6896,6897,6898,6899,6900,6901,6902,6903,6904,6905,6906,6907,6908,6909,6910,6911,6912,6913,6914,6915,6916,6917]}
Returning 'cyrest_get': {'name': 'SUID', 'values': [6685, 6686, 6687, 6688, 6689, 6690, 6691, 6692, 6693, 6694, 6695, 6696, 6697, 6698, 6699, 6700, 6701, 6702, 6703, 6704, 6705, 6706, 6707, 6708, 6709, 6710, 6711, 6712, 6713, 6714, 6715, 6716, 6717, 6718, 6719, 6720, 6721, 6722, 6723, 6724, 6725, 6726, 6727, 6728, 6729, 6730, 6731, 6732, 6733, 6734, 6735, 6736, 6737, 6738, 6739, 6740, 6741, 6742, 6743, 6744, 6745, 6746, 6747, 6748, 6749, 6750, 6751, 6752, 6753, 6754, 6755, 6756, 6757, 6758, 6759, 6760, 6761, 6762, 6763, 6764, 6765, 6766, 6767, 6768, 6769, 6770, 6771, 6772, 6773, 6774, 6775, 6776, 6777, 6778, 6779, 6780, 6781, 6782, 6783, 6784, 6785, 6786, 6787, 6788, 6789, 6790, 6791, 6792, 6793, 6794, 6795, 6796, 6797, 6798, 6799, 6800, 6801, 6802, 6803, 6804, 6805, 6806, 6807, 6808, 6809, 6810, 6811, 6812, 6813, 6814, 6815, 6816, 6817, 6818, 6819, 6820, 6821, 6822, 6823, 6824, 6825, 6826, 6827, 6828, 6829, 6830, 6831, 6832, 6833, 6834, 6835, 6836, 6837, 6838, 6839, 6840, 6841, 6842, 6843, 6844, 6845, 6846, 6847, 6848, 6849, 6850, 6851, 6852, 6853, 6854, 6855, 6856, 6857, 6858, 6859, 6860, 6861, 6862, 6863, 6864, 6865, 6866, 6867, 6868, 6869, 6870, 6871, 6872, 6873, 6874, 6875, 6876, 6877, 6878, 6879, 6880, 6881, 6882, 6883, 6884, 6885, 6886, 6887, 6888, 6889, 6890, 6891, 6892, 6893, 6894, 6895, 6896, 6897, 6898, 6899, 6900, 6901, 6902, 6903, 6904, 6905, 6906, 6907, 6908, 6909, 6910, 6911, 6912, 6913, 6914, 6915, 6916, 6917]}
Calling cyrest_get('networks/6675/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/tables/defaultnode/columns/name)
OK[200], content: {"name":"name","values":["TXN2","NFIX","MGST1","GSTT2","GSR","TXNRD1","TXNRD2","JUNB","MT1X","SOD3","XDH","GPX3","MAOA","UGT1A6","CAT","GCLC","HMOX1","SOD2","SOD1","GPX1","MAPK10","NFE2L2","MAPK14","FOS","NQO1","CYP1A1","NFKBIE","REL","RELA","NFKBIA","IKBKB","IKBKG","CHUK","STAR","CAMK1D","CYP21A2","STAR","PLCB2","PLCB2","ATF1","ITPR2","CALML6","CALML5","CALML4","CALML4","CALM3","CALM2","CREB5","CREB5","CREB3L4","CREB3L2","CREB3L2","CREB1","CALM1","ATF4","ATF2","ITPR3","ITPR1","ITPR1","GNAQ","GNAQ","CREB3L1","ITPR3","CREB3L1","CREB3","CREB3","CAMK2G","CAMK2G","CAMK2D","CAMK2D","CAMK1","CAMK1","CALML3","CALML3","CALML3","ATF6B","NR3C2","NOS3","CXCL11","IL1RN","MMP3","CCL26","IL18","CXCL17","PTGER4","TSLP","IL36A","TNF","CXCL10","IL19","MMP9","IL23A","CXCL1","SPP1","CCL28","CCL22","CASP1","AHR","TNFSF13B","CCL20","PPBP","MMP1","CSF2","CXCL3","CXCL6","IL36RN","CTF1","AREG","CSF1","CSF3","IL15","LIF","VEGFA","IL33","CX3CL1","CXCL14","BDKRB1","CXCL2","CTGF","HIF1A","BDKRB2","CXCL5","SERPING1","PDGFD","MAPK1","NFKB1","SMAD4","TNFSF13","IL6ST","CCL5","SP1","MAP2K6","RRAS","IL36G","IL11","IL6","IL11RA","JUND","SMAD3","IL1B","F12","PTPN11","RAF1","IL1A","ACTA2","TGFBR2","TGFB1","IL17C","TGFBR1","CXCL16","PTGES","IRF7","PYCARD","IL12A","C9orf3","PCOLCE2","COL22A1","COL21A1","COL28A1","PLOD3","P4HA3","COL6A3","TLL2","COL27A1","COL8A1","COL8A2","PCOLCE","COL4A5","ADAMTS3","COL4A3","ADAMTS14","TLL1","ATP6AP2","ANPEP","MME","CTSZ","CES1","ACE","REN","ACE2","CTSD","COL9A2","COL4A6","COL18A1","COL16A1","COL6A1","COL17A1","COL13A1","COL12A1","COL23A1","COL7A1","PLOD2","PLOD1","COL4A2","P4HB","COL5A2","COL4A1","P4HA2","CRTAP","PPIB","COL5A1","COL6A2","COL11A2","P4HA1","BMP1","COL5A3","SERPINH1","COL4A4","COL1A2","COL1A1","Prostaglandin signaling","Bradykinin signaling network","Bradykinin receptor B1 activation","Increased, secretion of proinflammatory and profibrotic mediators","Increase activation, Nuclear factor kappa B (NF-kB)","Metabolism of Angiotensinogen to Angiotensins","Increased, Reactive oxygen species","Renin Angiotensin Aldosterone System","Bradykinin system, hyperactivated","KE1740: ACE2 inhibition","Oxidative stress","NF-KB pathway","KE1752: Increased Angiotensin II","KE1743: Increased plasma Angiotensin II","KE68: Collagen Accumulation","KE1276: Lung Fibrosis","Collagen biosynthesis and modifying enzymes","Binding of agonist, Angiotensin II receptor type 1 receptor (AT1R)","Angiotensin II receptor type 1 pathway","ACE2 inhibition","Increased, Prostaglandin E2 secretion","Kinin-Kallikrein Pathway","Overview of proinflammatory and profibrotic mediators"]}
Returning 'cyrest_get': {'name': 'name', 'values': ['TXN2', 'NFIX', 'MGST1', 'GSTT2', 'GSR', 'TXNRD1', 'TXNRD2', 'JUNB', 'MT1X', 'SOD3', 'XDH', 'GPX3', 'MAOA', 'UGT1A6', 'CAT', 'GCLC', 'HMOX1', 'SOD2', 'SOD1', 'GPX1', 'MAPK10', 'NFE2L2', 'MAPK14', 'FOS', 'NQO1', 'CYP1A1', 'NFKBIE', 'REL', 'RELA', 'NFKBIA', 'IKBKB', 'IKBKG', 'CHUK', 'STAR', 'CAMK1D', 'CYP21A2', 'STAR', 'PLCB2', 'PLCB2', 'ATF1', 'ITPR2', 'CALML6', 'CALML5', 'CALML4', 'CALML4', 'CALM3', 'CALM2', 'CREB5', 'CREB5', 'CREB3L4', 'CREB3L2', 'CREB3L2', 'CREB1', 'CALM1', 'ATF4', 'ATF2', 'ITPR3', 'ITPR1', 'ITPR1', 'GNAQ', 'GNAQ', 'CREB3L1', 'ITPR3', 'CREB3L1', 'CREB3', 'CREB3', 'CAMK2G', 'CAMK2G', 'CAMK2D', 'CAMK2D', 'CAMK1', 'CAMK1', 'CALML3', 'CALML3', 'CALML3', 'ATF6B', 'NR3C2', 'NOS3', 'CXCL11', 'IL1RN', 'MMP3', 'CCL26', 'IL18', 'CXCL17', 'PTGER4', 'TSLP', 'IL36A', 'TNF', 'CXCL10', 'IL19', 'MMP9', 'IL23A', 'CXCL1', 'SPP1', 'CCL28', 'CCL22', 'CASP1', 'AHR', 'TNFSF13B', 'CCL20', 'PPBP', 'MMP1', 'CSF2', 'CXCL3', 'CXCL6', 'IL36RN', 'CTF1', 'AREG', 'CSF1', 'CSF3', 'IL15', 'LIF', 'VEGFA', 'IL33', 'CX3CL1', 'CXCL14', 'BDKRB1', 'CXCL2', 'CTGF', 'HIF1A', 'BDKRB2', 'CXCL5', 'SERPING1', 'PDGFD', 'MAPK1', 'NFKB1', 'SMAD4', 'TNFSF13', 'IL6ST', 'CCL5', 'SP1', 'MAP2K6', 'RRAS', 'IL36G', 'IL11', 'IL6', 'IL11RA', 'JUND', 'SMAD3', 'IL1B', 'F12', 'PTPN11', 'RAF1', 'IL1A', 'ACTA2', 'TGFBR2', 'TGFB1', 'IL17C', 'TGFBR1', 'CXCL16', 'PTGES', 'IRF7', 'PYCARD', 'IL12A', 'C9orf3', 'PCOLCE2', 'COL22A1', 'COL21A1', 'COL28A1', 'PLOD3', 'P4HA3', 'COL6A3', 'TLL2', 'COL27A1', 'COL8A1', 'COL8A2', 'PCOLCE', 'COL4A5', 'ADAMTS3', 'COL4A3', 'ADAMTS14', 'TLL1', 'ATP6AP2', 'ANPEP', 'MME', 'CTSZ', 'CES1', 'ACE', 'REN', 'ACE2', 'CTSD', 'COL9A2', 'COL4A6', 'COL18A1', 'COL16A1', 'COL6A1', 'COL17A1', 'COL13A1', 'COL12A1', 'COL23A1', 'COL7A1', 'PLOD2', 'PLOD1', 'COL4A2', 'P4HB', 'COL5A2', 'COL4A1', 'P4HA2', 'CRTAP', 'PPIB', 'COL5A1', 'COL6A2', 'COL11A2', 'P4HA1', 'BMP1', 'COL5A3', 'SERPINH1', 'COL4A4', 'COL1A2', 'COL1A1', 'Prostaglandin signaling', 'Bradykinin signaling network', 'Bradykinin receptor B1 activation', 'Increased, secretion of proinflammatory and profibrotic mediators', 'Increase activation, Nuclear factor kappa B (NF-kB)', 'Metabolism of Angiotensinogen to Angiotensins', 'Increased, Reactive oxygen species', 'Renin Angiotensin Aldosterone System', 'Bradykinin system, hyperactivated', 'KE1740: ACE2 inhibition', 'Oxidative stress', 'NF-KB pathway', 'KE1752: Increased Angiotensin II', 'KE1743: Increased plasma Angiotensin II', 'KE68: Collagen Accumulation', 'KE1276: Lung Fibrosis', 'Collagen biosynthesis and modifying enzymes', 'Binding of agonist, Angiotensin II receptor type 1 receptor (AT1R)', 'Angiotensin II receptor type 1 pathway', 'ACE2 inhibition', 'Increased, Prostaglandin E2 secretion', 'Kinin-Kallikrein Pathway', 'Overview of proinflammatory and profibrotic mediators']}
Returning 'get_table_columns':                                                    name
6685                                               TXN2
6686                                               NFIX
6687                                              MGST1
6688                                              GSTT2
6689                                                GSR
...                                                 ...
6913             Angiotensin II receptor type 1 pathway
6914                                    ACE2 inhibition
6915              Increased, Prostaglandin E2 secretion
6916                           Kinin-Kallikrein Pathway
6917  Overview of proinflammatory and profibrotic me...

[233 rows x 1 columns]
Returning 'get_selected_nodes': ['NFIX', 'GSR', 'MT1X', 'XDH', 'GPX3', 'MAOA', 'CAT', 'GCLC', 'SOD2', 'MAPK10', 'NFE2L2', 'NFKBIE', 'NFKBIA', 'ATF4', 'ITPR3', 'ITPR1', 'ITPR1', 'ITPR3', 'CAMK2D', 'CAMK2D', 'CALML3', 'CALML3', 'CALML3', 'IL1RN', 'IL36A', 'TNF', 'CXCL10', 'MMP9', 'IL23A', 'CXCL1', 'CCL28', 'CCL20', 'MMP1', 'CSF2', 'CXCL3', 'CXCL6', 'CSF1', 'CSF3', 'IL15', 'LIF', 'VEGFA', 'IL33', 'CXCL14', 'CXCL2', 'CTGF', 'CXCL5', 'NFKB1', 'MAP2K6', 'IL36G', 'IL6', 'SMAD3', 'IL1B', 'IL1A', 'TGFBR2', 'IL17C', 'CXCL16', 'PTGES', 'IRF7', 'TLL2', 'COL8A1', 'TLL1', 'ATP6AP2', 'MME', 'CES1', 'COL12A1', 'PPIB']
Calling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 6675
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 6675}]
Returning 'get_network_suid': 6675
Calling get_selected_edge_count(6675, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(6675, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [7200,6675,7429,6316,6541,9087]
Returning 'cyrest_get': [7200, 6675, 7429, 6316, 6541, 9087]
Returning 'get_network_suid': 6675
Calling cyrest_get('networks/6675/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/edges), params: {'column': 'selected', 'query': 'true'}
OK[200], content: []
Returning 'cyrest_get': []
Returning 'get_selected_edge_count': 0
Returning 'get_selected_edges': None
Returning 'create_column_filter': {'nodes': ['NFIX', 'GSR', 'MT1X', 'XDH', 'GPX3', 'MAOA', 'CAT', 'GCLC', 'SOD2', 'MAPK10', 'NFE2L2', 'NFKBIE', 'NFKBIA', 'ATF4', 'ITPR3', 'ITPR1', 'ITPR1', 'ITPR3', 'CAMK2D', 'CAMK2D', 'CALML3', 'CALML3', 'CALML3', 'IL1RN', 'IL36A', 'TNF', 'CXCL10', 'MMP9', 'IL23A', 'CXCL1', 'CCL28', 'CCL20', 'MMP1', 'CSF2', 'CXCL3', 'CXCL6', 'CSF1', 'CSF3', 'IL15', 'LIF', 'VEGFA', 'IL33', 'CXCL14', 'CXCL2', 'CTGF', 'CXCL5', 'NFKB1', 'MAP2K6', 'IL36G', 'IL6', 'SMAD3', 'IL1B', 'IL1A', 'TGFBR2', 'IL17C', 'CXCL16', 'PTGES', 'IRF7', 'TLL2', 'COL8A1', 'TLL1', 'ATP6AP2', 'MME', 'CES1', 'COL12A1', 'PPIB'], 'edges': None}
--------------------
Calling get_first_neighbors('Oxidative stress', as_nested_list=False)
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 6675
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 6675}]
Returning 'get_network_suid': 6675
Calling get_table_columns('node', ['name'], 'default', 6675, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(6675, 'http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [7200,6675,7429,6316,6541,9087]
Returning 'cyrest_get': [7200, 6675, 7429, 6316, 6541, 9087]
Returning 'get_network_suid': 6675
Calling get_table_column_types('node', namespace='default', network=6675, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(6675, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [7200,6675,7429,6316,6541,9087]
Returning 'cyrest_get': [7200, 6675, 7429, 6316, 6541, 9087]
Returning 'get_network_suid': 6675
Calling cyrest_get('networks/6675/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Ext","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Type","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.label","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayID","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneID","type":"String","immutable":false,"primaryKey":false},{"name":"Unnamed: 0","type":"String","immutable":false,"primaryKey":false},{"name":"logFC","type":"Double","immutable":false,"primaryKey":false},{"name":"logCPM","type":"Double","immutable":false,"primaryKey":false},{"name":"F","type":"Double","immutable":false,"primaryKey":false},{"name":"PValue","type":"Double","immutable":false,"primaryKey":false},{"name":"FDR","type":"Double","immutable":false,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Ext', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Unnamed: 0', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'logFC', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'logCPM', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'F', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'PValue', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FDR', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
Returning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'GraphID': 'String', 'Type': 'String', 'XrefId': 'String', 'XrefDatasource': 'String', 'Color': 'String', 'Border Width': 'Double', 'Node Size': 'Double', 'Label Font Size': 'Double', 'Ensembl': 'String', 'CTL.Ext': 'String', 'CTL.Type': 'String', 'CTL.PathwayName': 'String', 'CTL.label': 'String', 'CTL.PathwayID': 'String', 'CTL.GeneName': 'String', 'CTL.GeneID': 'String', 'Unnamed: 0': 'String', 'logFC': 'Double', 'logCPM': 'Double', 'F': 'Double', 'PValue': 'Double', 'FDR': 'Double'}
Calling cyrest_get('networks/6675/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/tables/defaultnode/columns/SUID)
OK[200], content: {"name":"SUID","values":[6685,6686,6687,6688,6689,6690,6691,6692,6693,6694,6695,6696,6697,6698,6699,6700,6701,6702,6703,6704,6705,6706,6707,6708,6709,6710,6711,6712,6713,6714,6715,6716,6717,6718,6719,6720,6721,6722,6723,6724,6725,6726,6727,6728,6729,6730,6731,6732,6733,6734,6735,6736,6737,6738,6739,6740,6741,6742,6743,6744,6745,6746,6747,6748,6749,6750,6751,6752,6753,6754,6755,6756,6757,6758,6759,6760,6761,6762,6763,6764,6765,6766,6767,6768,6769,6770,6771,6772,6773,6774,6775,6776,6777,6778,6779,6780,6781,6782,6783,6784,6785,6786,6787,6788,6789,6790,6791,6792,6793,6794,6795,6796,6797,6798,6799,6800,6801,6802,6803,6804,6805,6806,6807,6808,6809,6810,6811,6812,6813,6814,6815,6816,6817,6818,6819,6820,6821,6822,6823,6824,6825,6826,6827,6828,6829,6830,6831,6832,6833,6834,6835,6836,6837,6838,6839,6840,6841,6842,6843,6844,6845,6846,6847,6848,6849,6850,6851,6852,6853,6854,6855,6856,6857,6858,6859,6860,6861,6862,6863,6864,6865,6866,6867,6868,6869,6870,6871,6872,6873,6874,6875,6876,6877,6878,6879,6880,6881,6882,6883,6884,6885,6886,6887,6888,6889,6890,6891,6892,6893,6894,6895,6896,6897,6898,6899,6900,6901,6902,6903,6904,6905,6906,6907,6908,6909,6910,6911,6912,6913,6914,6915,6916,6917]}
Returning 'cyrest_get': {'name': 'SUID', 'values': [6685, 6686, 6687, 6688, 6689, 6690, 6691, 6692, 6693, 6694, 6695, 6696, 6697, 6698, 6699, 6700, 6701, 6702, 6703, 6704, 6705, 6706, 6707, 6708, 6709, 6710, 6711, 6712, 6713, 6714, 6715, 6716, 6717, 6718, 6719, 6720, 6721, 6722, 6723, 6724, 6725, 6726, 6727, 6728, 6729, 6730, 6731, 6732, 6733, 6734, 6735, 6736, 6737, 6738, 6739, 6740, 6741, 6742, 6743, 6744, 6745, 6746, 6747, 6748, 6749, 6750, 6751, 6752, 6753, 6754, 6755, 6756, 6757, 6758, 6759, 6760, 6761, 6762, 6763, 6764, 6765, 6766, 6767, 6768, 6769, 6770, 6771, 6772, 6773, 6774, 6775, 6776, 6777, 6778, 6779, 6780, 6781, 6782, 6783, 6784, 6785, 6786, 6787, 6788, 6789, 6790, 6791, 6792, 6793, 6794, 6795, 6796, 6797, 6798, 6799, 6800, 6801, 6802, 6803, 6804, 6805, 6806, 6807, 6808, 6809, 6810, 6811, 6812, 6813, 6814, 6815, 6816, 6817, 6818, 6819, 6820, 6821, 6822, 6823, 6824, 6825, 6826, 6827, 6828, 6829, 6830, 6831, 6832, 6833, 6834, 6835, 6836, 6837, 6838, 6839, 6840, 6841, 6842, 6843, 6844, 6845, 6846, 6847, 6848, 6849, 6850, 6851, 6852, 6853, 6854, 6855, 6856, 6857, 6858, 6859, 6860, 6861, 6862, 6863, 6864, 6865, 6866, 6867, 6868, 6869, 6870, 6871, 6872, 6873, 6874, 6875, 6876, 6877, 6878, 6879, 6880, 6881, 6882, 6883, 6884, 6885, 6886, 6887, 6888, 6889, 6890, 6891, 6892, 6893, 6894, 6895, 6896, 6897, 6898, 6899, 6900, 6901, 6902, 6903, 6904, 6905, 6906, 6907, 6908, 6909, 6910, 6911, 6912, 6913, 6914, 6915, 6916, 6917]}
Calling cyrest_get('networks/6675/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/tables/defaultnode/columns/name)
OK[200], content: {"name":"name","values":["TXN2","NFIX","MGST1","GSTT2","GSR","TXNRD1","TXNRD2","JUNB","MT1X","SOD3","XDH","GPX3","MAOA","UGT1A6","CAT","GCLC","HMOX1","SOD2","SOD1","GPX1","MAPK10","NFE2L2","MAPK14","FOS","NQO1","CYP1A1","NFKBIE","REL","RELA","NFKBIA","IKBKB","IKBKG","CHUK","STAR","CAMK1D","CYP21A2","STAR","PLCB2","PLCB2","ATF1","ITPR2","CALML6","CALML5","CALML4","CALML4","CALM3","CALM2","CREB5","CREB5","CREB3L4","CREB3L2","CREB3L2","CREB1","CALM1","ATF4","ATF2","ITPR3","ITPR1","ITPR1","GNAQ","GNAQ","CREB3L1","ITPR3","CREB3L1","CREB3","CREB3","CAMK2G","CAMK2G","CAMK2D","CAMK2D","CAMK1","CAMK1","CALML3","CALML3","CALML3","ATF6B","NR3C2","NOS3","CXCL11","IL1RN","MMP3","CCL26","IL18","CXCL17","PTGER4","TSLP","IL36A","TNF","CXCL10","IL19","MMP9","IL23A","CXCL1","SPP1","CCL28","CCL22","CASP1","AHR","TNFSF13B","CCL20","PPBP","MMP1","CSF2","CXCL3","CXCL6","IL36RN","CTF1","AREG","CSF1","CSF3","IL15","LIF","VEGFA","IL33","CX3CL1","CXCL14","BDKRB1","CXCL2","CTGF","HIF1A","BDKRB2","CXCL5","SERPING1","PDGFD","MAPK1","NFKB1","SMAD4","TNFSF13","IL6ST","CCL5","SP1","MAP2K6","RRAS","IL36G","IL11","IL6","IL11RA","JUND","SMAD3","IL1B","F12","PTPN11","RAF1","IL1A","ACTA2","TGFBR2","TGFB1","IL17C","TGFBR1","CXCL16","PTGES","IRF7","PYCARD","IL12A","C9orf3","PCOLCE2","COL22A1","COL21A1","COL28A1","PLOD3","P4HA3","COL6A3","TLL2","COL27A1","COL8A1","COL8A2","PCOLCE","COL4A5","ADAMTS3","COL4A3","ADAMTS14","TLL1","ATP6AP2","ANPEP","MME","CTSZ","CES1","ACE","REN","ACE2","CTSD","COL9A2","COL4A6","COL18A1","COL16A1","COL6A1","COL17A1","COL13A1","COL12A1","COL23A1","COL7A1","PLOD2","PLOD1","COL4A2","P4HB","COL5A2","COL4A1","P4HA2","CRTAP","PPIB","COL5A1","COL6A2","COL11A2","P4HA1","BMP1","COL5A3","SERPINH1","COL4A4","COL1A2","COL1A1","Prostaglandin signaling","Bradykinin signaling network","Bradykinin receptor B1 activation","Increased, secretion of proinflammatory and profibrotic mediators","Increase activation, Nuclear factor kappa B (NF-kB)","Metabolism of Angiotensinogen to Angiotensins","Increased, Reactive oxygen species","Renin Angiotensin Aldosterone System","Bradykinin system, hyperactivated","KE1740: ACE2 inhibition","Oxidative stress","NF-KB pathway","KE1752: Increased Angiotensin II","KE1743: Increased plasma Angiotensin II","KE68: Collagen Accumulation","KE1276: Lung Fibrosis","Collagen biosynthesis and modifying enzymes","Binding of agonist, Angiotensin II receptor type 1 receptor (AT1R)","Angiotensin II receptor type 1 pathway","ACE2 inhibition","Increased, Prostaglandin E2 secretion","Kinin-Kallikrein Pathway","Overview of proinflammatory and profibrotic mediators"]}
Returning 'cyrest_get': {'name': 'name', 'values': ['TXN2', 'NFIX', 'MGST1', 'GSTT2', 'GSR', 'TXNRD1', 'TXNRD2', 'JUNB', 'MT1X', 'SOD3', 'XDH', 'GPX3', 'MAOA', 'UGT1A6', 'CAT', 'GCLC', 'HMOX1', 'SOD2', 'SOD1', 'GPX1', 'MAPK10', 'NFE2L2', 'MAPK14', 'FOS', 'NQO1', 'CYP1A1', 'NFKBIE', 'REL', 'RELA', 'NFKBIA', 'IKBKB', 'IKBKG', 'CHUK', 'STAR', 'CAMK1D', 'CYP21A2', 'STAR', 'PLCB2', 'PLCB2', 'ATF1', 'ITPR2', 'CALML6', 'CALML5', 'CALML4', 'CALML4', 'CALM3', 'CALM2', 'CREB5', 'CREB5', 'CREB3L4', 'CREB3L2', 'CREB3L2', 'CREB1', 'CALM1', 'ATF4', 'ATF2', 'ITPR3', 'ITPR1', 'ITPR1', 'GNAQ', 'GNAQ', 'CREB3L1', 'ITPR3', 'CREB3L1', 'CREB3', 'CREB3', 'CAMK2G', 'CAMK2G', 'CAMK2D', 'CAMK2D', 'CAMK1', 'CAMK1', 'CALML3', 'CALML3', 'CALML3', 'ATF6B', 'NR3C2', 'NOS3', 'CXCL11', 'IL1RN', 'MMP3', 'CCL26', 'IL18', 'CXCL17', 'PTGER4', 'TSLP', 'IL36A', 'TNF', 'CXCL10', 'IL19', 'MMP9', 'IL23A', 'CXCL1', 'SPP1', 'CCL28', 'CCL22', 'CASP1', 'AHR', 'TNFSF13B', 'CCL20', 'PPBP', 'MMP1', 'CSF2', 'CXCL3', 'CXCL6', 'IL36RN', 'CTF1', 'AREG', 'CSF1', 'CSF3', 'IL15', 'LIF', 'VEGFA', 'IL33', 'CX3CL1', 'CXCL14', 'BDKRB1', 'CXCL2', 'CTGF', 'HIF1A', 'BDKRB2', 'CXCL5', 'SERPING1', 'PDGFD', 'MAPK1', 'NFKB1', 'SMAD4', 'TNFSF13', 'IL6ST', 'CCL5', 'SP1', 'MAP2K6', 'RRAS', 'IL36G', 'IL11', 'IL6', 'IL11RA', 'JUND', 'SMAD3', 'IL1B', 'F12', 'PTPN11', 'RAF1', 'IL1A', 'ACTA2', 'TGFBR2', 'TGFB1', 'IL17C', 'TGFBR1', 'CXCL16', 'PTGES', 'IRF7', 'PYCARD', 'IL12A', 'C9orf3', 'PCOLCE2', 'COL22A1', 'COL21A1', 'COL28A1', 'PLOD3', 'P4HA3', 'COL6A3', 'TLL2', 'COL27A1', 'COL8A1', 'COL8A2', 'PCOLCE', 'COL4A5', 'ADAMTS3', 'COL4A3', 'ADAMTS14', 'TLL1', 'ATP6AP2', 'ANPEP', 'MME', 'CTSZ', 'CES1', 'ACE', 'REN', 'ACE2', 'CTSD', 'COL9A2', 'COL4A6', 'COL18A1', 'COL16A1', 'COL6A1', 'COL17A1', 'COL13A1', 'COL12A1', 'COL23A1', 'COL7A1', 'PLOD2', 'PLOD1', 'COL4A2', 'P4HB', 'COL5A2', 'COL4A1', 'P4HA2', 'CRTAP', 'PPIB', 'COL5A1', 'COL6A2', 'COL11A2', 'P4HA1', 'BMP1', 'COL5A3', 'SERPINH1', 'COL4A4', 'COL1A2', 'COL1A1', 'Prostaglandin signaling', 'Bradykinin signaling network', 'Bradykinin receptor B1 activation', 'Increased, secretion of proinflammatory and profibrotic mediators', 'Increase activation, Nuclear factor kappa B (NF-kB)', 'Metabolism of Angiotensinogen to Angiotensins', 'Increased, Reactive oxygen species', 'Renin Angiotensin Aldosterone System', 'Bradykinin system, hyperactivated', 'KE1740: ACE2 inhibition', 'Oxidative stress', 'NF-KB pathway', 'KE1752: Increased Angiotensin II', 'KE1743: Increased plasma Angiotensin II', 'KE68: Collagen Accumulation', 'KE1276: Lung Fibrosis', 'Collagen biosynthesis and modifying enzymes', 'Binding of agonist, Angiotensin II receptor type 1 receptor (AT1R)', 'Angiotensin II receptor type 1 pathway', 'ACE2 inhibition', 'Increased, Prostaglandin E2 secretion', 'Kinin-Kallikrein Pathway', 'Overview of proinflammatory and profibrotic mediators']}
Returning 'get_table_columns':                                                    name
6685                                               TXN2
6686                                               NFIX
6687                                              MGST1
6688                                              GSTT2
6689                                                GSR
...                                                 ...
6913             Angiotensin II receptor type 1 pathway
6914                                    ACE2 inhibition
6915              Increased, Prostaglandin E2 secretion
6916                           Kinin-Kallikrein Pathway
6917  Overview of proinflammatory and profibrotic me...

[233 rows x 1 columns]
Calling cyrest_get('networks/6675/nodes/6905/neighbors', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/nodes/6905/neighbors)
OK[200], content: [6901,6710,6709,6708,6707,6706,6705,6704,6703,6702,6701,6700,6699,6815,6810,6698,6697,6696,6695,6694,6693,6692,6691,6690,6689,6688,6687,6686,6685]
Returning 'cyrest_get': [6901, 6710, 6709, 6708, 6707, 6706, 6705, 6704, 6703, 6702, 6701, 6700, 6699, 6815, 6810, 6698, 6697, 6696, 6695, 6694, 6693, 6692, 6691, 6690, 6689, 6688, 6687, 6686, 6685]
Calling get_table_columns('node', ['name'], 'default', 6675, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(6675, 'http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [7200,6675,7429,6316,6541,9087]
Returning 'cyrest_get': [7200, 6675, 7429, 6316, 6541, 9087]
Returning 'get_network_suid': 6675
Calling get_table_column_types('node', namespace='default', network=6675, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(6675, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [7200,6675,7429,6316,6541,9087]
Returning 'cyrest_get': [7200, 6675, 7429, 6316, 6541, 9087]
Returning 'get_network_suid': 6675
Calling cyrest_get('networks/6675/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"Border Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Node Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Label Font Size","type":"Double","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Ext","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.Type","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.label","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.PathwayID","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneName","type":"String","immutable":false,"primaryKey":false},{"name":"CTL.GeneID","type":"String","immutable":false,"primaryKey":false},{"name":"Unnamed: 0","type":"String","immutable":false,"primaryKey":false},{"name":"logFC","type":"Double","immutable":false,"primaryKey":false},{"name":"logCPM","type":"Double","immutable":false,"primaryKey":false},{"name":"F","type":"Double","immutable":false,"primaryKey":false},{"name":"PValue","type":"Double","immutable":false,"primaryKey":false},{"name":"FDR","type":"Double","immutable":false,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Border Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Node Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Label Font Size', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Ext', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.label', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.PathwayID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneName', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'CTL.GeneID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Unnamed: 0', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'logFC', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'logCPM', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'F', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'PValue', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FDR', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
Returning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'GraphID': 'String', 'Type': 'String', 'XrefId': 'String', 'XrefDatasource': 'String', 'Color': 'String', 'Border Width': 'Double', 'Node Size': 'Double', 'Label Font Size': 'Double', 'Ensembl': 'String', 'CTL.Ext': 'String', 'CTL.Type': 'String', 'CTL.PathwayName': 'String', 'CTL.label': 'String', 'CTL.PathwayID': 'String', 'CTL.GeneName': 'String', 'CTL.GeneID': 'String', 'Unnamed: 0': 'String', 'logFC': 'Double', 'logCPM': 'Double', 'F': 'Double', 'PValue': 'Double', 'FDR': 'Double'}
Calling cyrest_get('networks/6675/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/tables/defaultnode/columns/SUID)
OK[200], content: {"name":"SUID","values":[6685,6686,6687,6688,6689,6690,6691,6692,6693,6694,6695,6696,6697,6698,6699,6700,6701,6702,6703,6704,6705,6706,6707,6708,6709,6710,6711,6712,6713,6714,6715,6716,6717,6718,6719,6720,6721,6722,6723,6724,6725,6726,6727,6728,6729,6730,6731,6732,6733,6734,6735,6736,6737,6738,6739,6740,6741,6742,6743,6744,6745,6746,6747,6748,6749,6750,6751,6752,6753,6754,6755,6756,6757,6758,6759,6760,6761,6762,6763,6764,6765,6766,6767,6768,6769,6770,6771,6772,6773,6774,6775,6776,6777,6778,6779,6780,6781,6782,6783,6784,6785,6786,6787,6788,6789,6790,6791,6792,6793,6794,6795,6796,6797,6798,6799,6800,6801,6802,6803,6804,6805,6806,6807,6808,6809,6810,6811,6812,6813,6814,6815,6816,6817,6818,6819,6820,6821,6822,6823,6824,6825,6826,6827,6828,6829,6830,6831,6832,6833,6834,6835,6836,6837,6838,6839,6840,6841,6842,6843,6844,6845,6846,6847,6848,6849,6850,6851,6852,6853,6854,6855,6856,6857,6858,6859,6860,6861,6862,6863,6864,6865,6866,6867,6868,6869,6870,6871,6872,6873,6874,6875,6876,6877,6878,6879,6880,6881,6882,6883,6884,6885,6886,6887,6888,6889,6890,6891,6892,6893,6894,6895,6896,6897,6898,6899,6900,6901,6902,6903,6904,6905,6906,6907,6908,6909,6910,6911,6912,6913,6914,6915,6916,6917]}
Returning 'cyrest_get': {'name': 'SUID', 'values': [6685, 6686, 6687, 6688, 6689, 6690, 6691, 6692, 6693, 6694, 6695, 6696, 6697, 6698, 6699, 6700, 6701, 6702, 6703, 6704, 6705, 6706, 6707, 6708, 6709, 6710, 6711, 6712, 6713, 6714, 6715, 6716, 6717, 6718, 6719, 6720, 6721, 6722, 6723, 6724, 6725, 6726, 6727, 6728, 6729, 6730, 6731, 6732, 6733, 6734, 6735, 6736, 6737, 6738, 6739, 6740, 6741, 6742, 6743, 6744, 6745, 6746, 6747, 6748, 6749, 6750, 6751, 6752, 6753, 6754, 6755, 6756, 6757, 6758, 6759, 6760, 6761, 6762, 6763, 6764, 6765, 6766, 6767, 6768, 6769, 6770, 6771, 6772, 6773, 6774, 6775, 6776, 6777, 6778, 6779, 6780, 6781, 6782, 6783, 6784, 6785, 6786, 6787, 6788, 6789, 6790, 6791, 6792, 6793, 6794, 6795, 6796, 6797, 6798, 6799, 6800, 6801, 6802, 6803, 6804, 6805, 6806, 6807, 6808, 6809, 6810, 6811, 6812, 6813, 6814, 6815, 6816, 6817, 6818, 6819, 6820, 6821, 6822, 6823, 6824, 6825, 6826, 6827, 6828, 6829, 6830, 6831, 6832, 6833, 6834, 6835, 6836, 6837, 6838, 6839, 6840, 6841, 6842, 6843, 6844, 6845, 6846, 6847, 6848, 6849, 6850, 6851, 6852, 6853, 6854, 6855, 6856, 6857, 6858, 6859, 6860, 6861, 6862, 6863, 6864, 6865, 6866, 6867, 6868, 6869, 6870, 6871, 6872, 6873, 6874, 6875, 6876, 6877, 6878, 6879, 6880, 6881, 6882, 6883, 6884, 6885, 6886, 6887, 6888, 6889, 6890, 6891, 6892, 6893, 6894, 6895, 6896, 6897, 6898, 6899, 6900, 6901, 6902, 6903, 6904, 6905, 6906, 6907, 6908, 6909, 6910, 6911, 6912, 6913, 6914, 6915, 6916, 6917]}
Calling cyrest_get('networks/6675/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/6675/tables/defaultnode/columns/name)
OK[200], content: {"name":"name","values":["TXN2","NFIX","MGST1","GSTT2","GSR","TXNRD1","TXNRD2","JUNB","MT1X","SOD3","XDH","GPX3","MAOA","UGT1A6","CAT","GCLC","HMOX1","SOD2","SOD1","GPX1","MAPK10","NFE2L2","MAPK14","FOS","NQO1","CYP1A1","NFKBIE","REL","RELA","NFKBIA","IKBKB","IKBKG","CHUK","STAR","CAMK1D","CYP21A2","STAR","PLCB2","PLCB2","ATF1","ITPR2","CALML6","CALML5","CALML4","CALML4","CALM3","CALM2","CREB5","CREB5","CREB3L4","CREB3L2","CREB3L2","CREB1","CALM1","ATF4","ATF2","ITPR3","ITPR1","ITPR1","GNAQ","GNAQ","CREB3L1","ITPR3","CREB3L1","CREB3","CREB3","CAMK2G","CAMK2G","CAMK2D","CAMK2D","CAMK1","CAMK1","CALML3","CALML3","CALML3","ATF6B","NR3C2","NOS3","CXCL11","IL1RN","MMP3","CCL26","IL18","CXCL17","PTGER4","TSLP","IL36A","TNF","CXCL10","IL19","MMP9","IL23A","CXCL1","SPP1","CCL28","CCL22","CASP1","AHR","TNFSF13B","CCL20","PPBP","MMP1","CSF2","CXCL3","CXCL6","IL36RN","CTF1","AREG","CSF1","CSF3","IL15","LIF","VEGFA","IL33","CX3CL1","CXCL14","BDKRB1","CXCL2","CTGF","HIF1A","BDKRB2","CXCL5","SERPING1","PDGFD","MAPK1","NFKB1","SMAD4","TNFSF13","IL6ST","CCL5","SP1","MAP2K6","RRAS","IL36G","IL11","IL6","IL11RA","JUND","SMAD3","IL1B","F12","PTPN11","RAF1","IL1A","ACTA2","TGFBR2","TGFB1","IL17C","TGFBR1","CXCL16","PTGES","IRF7","PYCARD","IL12A","C9orf3","PCOLCE2","COL22A1","COL21A1","COL28A1","PLOD3","P4HA3","COL6A3","TLL2","COL27A1","COL8A1","COL8A2","PCOLCE","COL4A5","ADAMTS3","COL4A3","ADAMTS14","TLL1","ATP6AP2","ANPEP","MME","CTSZ","CES1","ACE","REN","ACE2","CTSD","COL9A2","COL4A6","COL18A1","COL16A1","COL6A1","COL17A1","COL13A1","COL12A1","COL23A1","COL7A1","PLOD2","PLOD1","COL4A2","P4HB","COL5A2","COL4A1","P4HA2","CRTAP","PPIB","COL5A1","COL6A2","COL11A2","P4HA1","BMP1","COL5A3","SERPINH1","COL4A4","COL1A2","COL1A1","Prostaglandin signaling","Bradykinin signaling network","Bradykinin receptor B1 activation","Increased, secretion of proinflammatory and profibrotic mediators","Increase activation, Nuclear factor kappa B (NF-kB)","Metabolism of Angiotensinogen to Angiotensins","Increased, Reactive oxygen species","Renin Angiotensin Aldosterone System","Bradykinin system, hyperactivated","KE1740: ACE2 inhibition","Oxidative stress","NF-KB pathway","KE1752: Increased Angiotensin II","KE1743: Increased plasma Angiotensin II","KE68: Collagen Accumulation","KE1276: Lung Fibrosis","Collagen biosynthesis and modifying enzymes","Binding of agonist, Angiotensin II receptor type 1 receptor (AT1R)","Angiotensin II receptor type 1 pathway","ACE2 inhibition","Increased, Prostaglandin E2 secretion","Kinin-Kallikrein Pathway","Overview of proinflammatory and profibrotic mediators"]}
Returning 'cyrest_get': {'name': 'name', 'values': ['TXN2', 'NFIX', 'MGST1', 'GSTT2', 'GSR', 'TXNRD1', 'TXNRD2', 'JUNB', 'MT1X', 'SOD3', 'XDH', 'GPX3', 'MAOA', 'UGT1A6', 'CAT', 'GCLC', 'HMOX1', 'SOD2', 'SOD1', 'GPX1', 'MAPK10', 'NFE2L2', 'MAPK14', 'FOS', 'NQO1', 'CYP1A1', 'NFKBIE', 'REL', 'RELA', 'NFKBIA', 'IKBKB', 'IKBKG', 'CHUK', 'STAR', 'CAMK1D', 'CYP21A2', 'STAR', 'PLCB2', 'PLCB2', 'ATF1', 'ITPR2', 'CALML6', 'CALML5', 'CALML4', 'CALML4', 'CALM3', 'CALM2', 'CREB5', 'CREB5', 'CREB3L4', 'CREB3L2', 'CREB3L2', 'CREB1', 'CALM1', 'ATF4', 'ATF2', 'ITPR3', 'ITPR1', 'ITPR1', 'GNAQ', 'GNAQ', 'CREB3L1', 'ITPR3', 'CREB3L1', 'CREB3', 'CREB3', 'CAMK2G', 'CAMK2G', 'CAMK2D', 'CAMK2D', 'CAMK1', 'CAMK1', 'CALML3', 'CALML3', 'CALML3', 'ATF6B', 'NR3C2', 'NOS3', 'CXCL11', 'IL1RN', 'MMP3', 'CCL26', 'IL18', 'CXCL17', 'PTGER4', 'TSLP', 'IL36A', 'TNF', 'CXCL10', 'IL19', 'MMP9', 'IL23A', 'CXCL1', 'SPP1', 'CCL28', 'CCL22', 'CASP1', 'AHR', 'TNFSF13B', 'CCL20', 'PPBP', 'MMP1', 'CSF2', 'CXCL3', 'CXCL6', 'IL36RN', 'CTF1', 'AREG', 'CSF1', 'CSF3', 'IL15', 'LIF', 'VEGFA', 'IL33', 'CX3CL1', 'CXCL14', 'BDKRB1', 'CXCL2', 'CTGF', 'HIF1A', 'BDKRB2', 'CXCL5', 'SERPING1', 'PDGFD', 'MAPK1', 'NFKB1', 'SMAD4', 'TNFSF13', 'IL6ST', 'CCL5', 'SP1', 'MAP2K6', 'RRAS', 'IL36G', 'IL11', 'IL6', 'IL11RA', 'JUND', 'SMAD3', 'IL1B', 'F12', 'PTPN11', 'RAF1', 'IL1A', 'ACTA2', 'TGFBR2', 'TGFB1', 'IL17C', 'TGFBR1', 'CXCL16', 'PTGES', 'IRF7', 'PYCARD', 'IL12A', 'C9orf3', 'PCOLCE2', 'COL22A1', 'COL21A1', 'COL28A1', 'PLOD3', 'P4HA3', 'COL6A3', 'TLL2', 'COL27A1', 'COL8A1', 'COL8A2', 'PCOLCE', 'COL4A5', 'ADAMTS3', 'COL4A3', 'ADAMTS14', 'TLL1', 'ATP6AP2', 'ANPEP', 'MME', 'CTSZ', 'CES1', 'ACE', 'REN', 'ACE2', 'CTSD', 'COL9A2', 'COL4A6', 'COL18A1', 'COL16A1', 'COL6A1', 'COL17A1', 'COL13A1', 'COL12A1', 'COL23A1', 'COL7A1', 'PLOD2', 'PLOD1', 'COL4A2', 'P4HB', 'COL5A2', 'COL4A1', 'P4HA2', 'CRTAP', 'PPIB', 'COL5A1', 'COL6A2', 'COL11A2', 'P4HA1', 'BMP1', 'COL5A3', 'SERPINH1', 'COL4A4', 'COL1A2', 'COL1A1', 'Prostaglandin signaling', 'Bradykinin signaling network', 'Bradykinin receptor B1 activation', 'Increased, secretion of proinflammatory and profibrotic mediators', 'Increase activation, Nuclear factor kappa B (NF-kB)', 'Metabolism of Angiotensinogen to Angiotensins', 'Increased, Reactive oxygen species', 'Renin Angiotensin Aldosterone System', 'Bradykinin system, hyperactivated', 'KE1740: ACE2 inhibition', 'Oxidative stress', 'NF-KB pathway', 'KE1752: Increased Angiotensin II', 'KE1743: Increased plasma Angiotensin II', 'KE68: Collagen Accumulation', 'KE1276: Lung Fibrosis', 'Collagen biosynthesis and modifying enzymes', 'Binding of agonist, Angiotensin II receptor type 1 receptor (AT1R)', 'Angiotensin II receptor type 1 pathway', 'ACE2 inhibition', 'Increased, Prostaglandin E2 secretion', 'Kinin-Kallikrein Pathway', 'Overview of proinflammatory and profibrotic mediators']}
Returning 'get_table_columns':                                                    name
6685                                               TXN2
6686                                               NFIX
6687                                              MGST1
6688                                              GSTT2
6689                                                GSR
...                                                 ...
6913             Angiotensin II receptor type 1 pathway
6914                                    ACE2 inhibition
6915              Increased, Prostaglandin E2 secretion
6916                           Kinin-Kallikrein Pathway
6917  Overview of proinflammatory and profibrotic me...

[233 rows x 1 columns]
Returning 'get_first_neighbors': ['Increased, Reactive oxygen species', 'CYP1A1', 'NQO1', 'FOS', 'MAPK14', 'NFE2L2', 'MAPK10', 'GPX1', 'SOD1', 'SOD2', 'HMOX1', 'GCLC', 'CAT', 'SP1', 'NFKB1', 'UGT1A6', 'MAOA', 'GPX3', 'XDH', 'SOD3', 'MT1X', 'JUNB', 'TXNRD2', 'TXNRD1', 'GSR', 'GSTT2', 'MGST1', 'NFIX', 'TXN2']
--------------------
Here is a very exciting log message, just for you
Calling cytoscape_version_info()
Calling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
Attempting to connect to local Cytoscape
Detected local Cytoscape
HTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/setSandbox), json: {'sandboxName': 'default_sandbox', 'copySamples': True, 'reinitialize': True}
OK[200], content: {
 "data": {"sandboxPath":"C:\\Users\\stefa\\CytoscapeConfiguration\\filetransfer\\default_sandbox"},
 "errors":[]
}
HTTP GET(http://127.0.0.1:1234/v1/version)
OK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.8.2"}
Returning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2'}
Returning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2', 'automationAPIVersion': '1.2.0', 'py4cytoscapeVersion': '0.0.9'}
--------------------
Calling commands_get('wikipathways import-as-pathway id=" WP5095 "')
HTTP GET(http://127.0.0.1:1234/v1/commands/wikipathways/import-as-pathway), params: {'id': ' WP5095 '}
OK[200], content: Finished

Returning 'commands_get': []
--------------------
Calling load_table_data(      Unnamed: 0     logFC    logCPM             F        PValue           FDR
0           SAA2  2.414265  5.432500  5.120911e+02  1.406545e-12  1.877738e-08
1          CCL20  3.133684  4.949061  4.479182e+02  3.560546e-12  2.376665e-08
2          IL36G  2.722310  4.359048  3.404549e+02  2.359692e-11  1.050063e-07
3          INHBA  1.810556  6.511435  2.727932e+02  1.071872e-10  3.577374e-07
4        TNFAIP3  1.601914  7.418585  2.634266e+02  1.358966e-10  3.628440e-07
...          ...       ...       ...           ...           ...           ...
13345     ZNF490  0.000135  2.994039  6.665948e-07  9.993599e-01  9.995575e-01
13346    NCKAP5L  0.000134  4.886377  6.200612e-07  9.993826e-01  9.995575e-01
13347     FBXO24 -0.000524 -0.670124  5.706860e-07  9.994077e-01  9.995575e-01
13348       IQCD -0.000026  0.010140  3.569004e-07  9.995316e-01  9.996065e-01
13349       ICMT -0.000017  6.879581  3.927553e-08  9.998446e-01  9.998446e-01

[13350 rows x 6 columns], data_key_column='Unnamed: 0')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 78
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 78}]
Returning 'get_network_suid': 78
Calling get_table_columns(table='node', namespace='default', columns='name', network=78, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(78, 'http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [78]
Returning 'cyrest_get': [78]
Returning 'get_network_suid': 78
Calling get_table_column_types('node', namespace='default', network=78, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(78, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [78]
Returning 'cyrest_get': [78]
Returning 'get_network_suid': 78
Calling cyrest_get('networks/78/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"IsGPMLShape","type":"Boolean","immutable":false,"primaryKey":false},{"name":"Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Height","type":"Double","immutable":false,"primaryKey":false},{"name":"FillColor","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"LabelFont","type":"String","immutable":false,"primaryKey":false},{"name":"LabelSize","type":"Double","immutable":false,"primaryKey":false},{"name":"Transparent","type":"String","immutable":false,"primaryKey":false},{"name":"BorderThickness","type":"Double","immutable":false,"primaryKey":false},{"name":"BorderStyle","type":"String","immutable":false,"primaryKey":false},{"name":"Shape","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'IsGPMLShape', 'type': 'Boolean', 'immutable': False, 'primaryKey': False}, {'name': 'Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Height', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FillColor', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'LabelFont', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'LabelSize', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Transparent', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'BorderThickness', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'BorderStyle', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Shape', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}]
Returning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'GraphID': 'String', 'XrefId': 'String', 'XrefDatasource': 'String', 'Type': 'String', 'IsGPMLShape': 'Boolean', 'Width': 'Double', 'Height': 'Double', 'FillColor': 'String', 'Color': 'String', 'LabelFont': 'String', 'LabelSize': 'Double', 'Transparent': 'String', 'BorderThickness': 'Double', 'BorderStyle': 'String', 'Shape': 'String', 'Ensembl': 'String'}
Calling cyrest_get('networks/78/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/tables/defaultnode/columns/SUID)
OK[200], content: {"name":"SUID","values":[89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284]}
Returning 'cyrest_get': {'name': 'SUID', 'values': [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284]}
Calling cyrest_get('networks/78/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/tables/defaultnode/columns/name)
OK[200], content: {"name":"name","values":["IL4","IFNG","IFNB1","SPP1","IL23A","IFNA16","IL24","IFNA17","IFNK","IFNL2","IL12B","IFNA8","CCL1","IL13","IFNA13","IL36A","IFNL3","CXCL1","IL21","IL12B","IL15","IFNA2","IL2","IL24","TSLP","IL1F10","IL19","IL36RN","OSM","TNF","IL9","IL26","IFNL2","IL10","IL6","IL25","IFNA14","IL7","CSF1","IL1A","IFNL1","IFNA7","IL20","EPO","CCL28","IFNW1","LIF","CSF2","IL3","IL12A","IL27","IL1RN","IFNA1","IL11","IL22","IFNA5","IL31","IL5","CTF1","IL1B","EBI3","IL37","IFNA4","IFNA6","IL18","IL33","CNTF","IL2","IL-8","MMP3","CSF3","CCL2","CSF2","ROS","CXCL10","TNF alpha","IL-12","NF-kappa-B  ","IL-1 Beta","MMP1","IL-6","IL-6","IL-1 Beta","IL-8","CCL2","TNF alpha","IL-12","VEGFA","MMP9","TGFB1","CXCL1","CSF1","AREG","IL17F","IL17A","IL22","CXCL9","IFNG","IFNA1","Prostaglandin E2","Prostaglandin I2","IL15","IL2","IL36B","IL36G","Lymphotoxin-alpha","TNFSF13B","TNFSF13","IL17A","IL17B","IL17D","IL17F","IL17C","IFNA10","IFNA21","IL12A","IFNL3","IFNL1","CSF3","CSF2","CCL2","CCL3","CCL3L3","CCL4","CCL4L2","CCL5","CCL13","CCL7","CCL8","CCL11","CCL14","CCL15","CCL16","CCL17","CCL18","CCL19","CCL20","CCL21","CCL22","CCL23","CCL24","CCL25","CCL27","CCL26","XCL1","XCL2","CXCL2","CXCL3","CXCL5","CXCL6","PPBP","CXCL10","CXCL11","CXCL12","CXCL16","CXCL17","CX3CL1","PF4","PF4V1","CXCL8","CXCL9","CXCL13","CXCL14","","","",null,null,null,null,null,null,null,null,"Colony stimulating factors","Shared IL-2 \nchain (CD122)","Type I IFN","IL-1","C chemokine/receptor family","CX3C chemokine/receptor family","CC chemokine/receptor family","Type III IFN","IL-17","Common  chain \nreceptor ligands","Adaptive immunity","CXC chemokine/receptor family","Cytokines","TNF","Shared receptors","Type II IFN","Common  chain (CD131) \nreceptor ligands","Cytokine storm","Pro-inflammatory signalling","Anti-inflammatory signalling","IL-6","Chemokines"]}
Returning 'cyrest_get': {'name': 'name', 'values': ['IL4', 'IFNG', 'IFNB1', 'SPP1', 'IL23A', 'IFNA16', 'IL24', 'IFNA17', 'IFNK', 'IFNL2', 'IL12B', 'IFNA8', 'CCL1', 'IL13', 'IFNA13', 'IL36A', 'IFNL3', 'CXCL1', 'IL21', 'IL12B', 'IL15', 'IFNA2', 'IL2', 'IL24', 'TSLP', 'IL1F10', 'IL19', 'IL36RN', 'OSM', 'TNF', 'IL9', 'IL26', 'IFNL2', 'IL10', 'IL6', 'IL25', 'IFNA14', 'IL7', 'CSF1', 'IL1A', 'IFNL1', 'IFNA7', 'IL20', 'EPO', 'CCL28', 'IFNW1', 'LIF', 'CSF2', 'IL3', 'IL12A', 'IL27', 'IL1RN', 'IFNA1', 'IL11', 'IL22', 'IFNA5', 'IL31', 'IL5', 'CTF1', 'IL1B', 'EBI3', 'IL37', 'IFNA4', 'IFNA6', 'IL18', 'IL33', 'CNTF', 'IL2', 'IL-8', 'MMP3', 'CSF3', 'CCL2', 'CSF2', 'ROS', 'CXCL10', 'TNF alpha', 'IL-12', 'NF-kappa-B  ', 'IL-1 Beta', 'MMP1', 'IL-6', 'IL-6', 'IL-1 Beta', 'IL-8', 'CCL2', 'TNF alpha', 'IL-12', 'VEGFA', 'MMP9', 'TGFB1', 'CXCL1', 'CSF1', 'AREG', 'IL17F', 'IL17A', 'IL22', 'CXCL9', 'IFNG', 'IFNA1', 'Prostaglandin E2', 'Prostaglandin I2', 'IL15', 'IL2', 'IL36B', 'IL36G', 'Lymphotoxin-alpha', 'TNFSF13B', 'TNFSF13', 'IL17A', 'IL17B', 'IL17D', 'IL17F', 'IL17C', 'IFNA10', 'IFNA21', 'IL12A', 'IFNL3', 'IFNL1', 'CSF3', 'CSF2', 'CCL2', 'CCL3', 'CCL3L3', 'CCL4', 'CCL4L2', 'CCL5', 'CCL13', 'CCL7', 'CCL8', 'CCL11', 'CCL14', 'CCL15', 'CCL16', 'CCL17', 'CCL18', 'CCL19', 'CCL20', 'CCL21', 'CCL22', 'CCL23', 'CCL24', 'CCL25', 'CCL27', 'CCL26', 'XCL1', 'XCL2', 'CXCL2', 'CXCL3', 'CXCL5', 'CXCL6', 'PPBP', 'CXCL10', 'CXCL11', 'CXCL12', 'CXCL16', 'CXCL17', 'CX3CL1', 'PF4', 'PF4V1', 'CXCL8', 'CXCL9', 'CXCL13', 'CXCL14', '', '', '', None, None, None, None, None, None, None, None, 'Colony stimulating factors', 'Shared IL-2 \nchain (CD122)', 'Type I IFN', 'IL-1', 'C chemokine/receptor family', 'CX3C chemokine/receptor family', 'CC chemokine/receptor family', 'Type III IFN', 'IL-17', 'Common  chain \nreceptor ligands', 'Adaptive immunity', 'CXC chemokine/receptor family', 'Cytokines', 'TNF', 'Shared receptors', 'Type II IFN', 'Common  chain (CD131) \nreceptor ligands', 'Cytokine storm', 'Pro-inflammatory signalling', 'Anti-inflammatory signalling', 'IL-6', 'Chemokines']}
Returning 'get_table_columns':                              name
89                            IL4
90                           IFNG
91                          IFNB1
92                           SPP1
93                          IL23A
..                            ...
280                Cytokine storm
281   Pro-inflammatory signalling
282  Anti-inflammatory signalling
283                          IL-6
284                    Chemokines

[196 rows x 1 columns]
Calling get_table_column_names('node', 'default', 78, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(78, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [78]
Returning 'cyrest_get': [78]
Returning 'get_network_suid': 78
Calling cyrest_get('networks/78/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"IsGPMLShape","type":"Boolean","immutable":false,"primaryKey":false},{"name":"Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Height","type":"Double","immutable":false,"primaryKey":false},{"name":"FillColor","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"LabelFont","type":"String","immutable":false,"primaryKey":false},{"name":"LabelSize","type":"Double","immutable":false,"primaryKey":false},{"name":"Transparent","type":"String","immutable":false,"primaryKey":false},{"name":"BorderThickness","type":"Double","immutable":false,"primaryKey":false},{"name":"BorderStyle","type":"String","immutable":false,"primaryKey":false},{"name":"Shape","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'IsGPMLShape', 'type': 'Boolean', 'immutable': False, 'primaryKey': False}, {'name': 'Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Height', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FillColor', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'LabelFont', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'LabelSize', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Transparent', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'BorderThickness', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'BorderStyle', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Shape', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}]
Returning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'XrefId', 'XrefDatasource', 'Type', 'IsGPMLShape', 'Width', 'Height', 'FillColor', 'Color', 'LabelFont', 'LabelSize', 'Transparent', 'BorderThickness', 'BorderStyle', 'Shape', 'Ensembl']
Calling cyrest_put('networks/78/tables/defaultnode', body={'key': 'name', 'dataKey': 'Unnamed: 0', 'data': [{'Unnamed: 0': 'CCL20', 'logFC': 3.1336841579912003, 'logCPM': 4.9490614237574695, 'F': 447.918174015401, 'PValue': 3.5605463098517503e-12, 'FDR': 2.3766646618260403e-08}, {'Unnamed: 0': 'IL36G', 'logFC': 2.7223097405620997, 'logCPM': 4.359048236258951, 'F': 340.454929200154, 'PValue': 2.3596919133248e-11, 'FDR': 1.05006290142954e-07}, {'Unnamed: 0': 'CXCL1', 'logFC': 1.4081156184302699, 'logCPM': 7.074793209871169, 'F': 218.195838294284, 'PValue': 4.85048355247373e-10, 'FDR': 5.8867232205022e-07}, {'Unnamed: 0': 'CXCL5', 'logFC': 3.46498321155524, 'logCPM': 3.03311228745573, 'F': 170.756073490655, 'PValue': 2.48785037923727e-09, 'FDR': 1.7489078617106201e-06}, {'Unnamed: 0': 'LIF', 'logFC': 1.298286661869, 'logCPM': 6.185570423725459, 'F': 169.42395043472, 'PValue': 2.62008668421067e-09, 'FDR': 1.7489078617106201e-06}, {'Unnamed: 0': 'IL6', 'logFC': 2.9224529419241, 'logCPM': 3.11820458196696, 'F': 145.766883175445, 'PValue': 7.041006508649291e-09, 'FDR': 3.3570513175167197e-06}, {'Unnamed: 0': 'CSF3', 'logFC': 4.79871351926883, 'logCPM': 2.3559216295706498, 'F': 137.55278757177, 'PValue': 1.0275704939316401e-08, 'FDR': 4.73036761861634e-06}, {'Unnamed: 0': 'IL1B', 'logFC': 1.05304900698371, 'logCPM': 8.36262335003799, 'F': 131.713443277546, 'PValue': 1.36162491609752e-08, 'FDR': 5.36874998890826e-06}, {'Unnamed: 0': 'MMP9', 'logFC': 2.27359629930066, 'logCPM': 4.56300947636999, 'F': 104.828517066264, 'PValue': 5.8758121787359295e-08, 'FDR': 1.8676688710982103e-05}, {'Unnamed: 0': 'CSF2', 'logFC': 2.9899586752875, 'logCPM': 1.9082595347063798, 'F': 86.99607808423559, 'PValue': 1.8877490043169302e-07, 'FDR': 5.08619157060006e-05}, {'Unnamed: 0': 'CXCL2', 'logFC': 1.38447650219698, 'logCPM': 5.4736460488295595, 'F': 86.86868390571149, 'PValue': 1.90494066314609e-07, 'FDR': 5.08619157060006e-05}, {'Unnamed: 0': 'CXCL3', 'logFC': 2.2361121419582597, 'logCPM': 3.56192555028102, 'F': 76.3054503353519, 'PValue': 4.2182146478808297e-07, 'FDR': 0.000104283639905943}, {'Unnamed: 0': 'IL1A', 'logFC': 1.06304418347977, 'logCPM': 7.297427389427201, 'F': 72.3175926648082, 'PValue': 5.83704481309657e-07, 'FDR': 0.000139150979026499}, {'Unnamed: 0': 'TNF', 'logFC': 1.7856104142522902, 'logCPM': 1.53426988157513, 'F': 43.0487007899721, 'PValue': 1.1575654156189099e-05, 'FDR': 0.00160973940609505}, {'Unnamed: 0': 'MMP1', 'logFC': 0.759244736745619, 'logCPM': 5.26866052956123, 'F': 41.9274392490743, 'PValue': 1.3364596876150301e-05, 'FDR': 0.0018021956393596602}, {'Unnamed: 0': 'CXCL14', 'logFC': -1.4648848411075601, 'logCPM': 2.9211274181300597, 'F': 40.4514572443023, 'PValue': 1.62213457036778e-05, 'FDR': 0.0021024753897485302}, {'Unnamed: 0': 'VEGFA', 'logFC': 0.43478964696808503, 'logCPM': 7.92195855352816, 'F': 29.1976750541295, 'PValue': 8.72401413930095e-05, 'FDR': 0.007101560290223641}, {'Unnamed: 0': 'CXCL16', 'logFC': 0.504787534396563, 'logCPM': 6.24249746361145, 'F': 26.5072285724819, 'PValue': 0.000139496864713424, 'FDR': 0.0102323249666165}, {'Unnamed: 0': 'CXCL6', 'logFC': 1.72754290730303, 'logCPM': 1.33639296548631, 'F': 26.140350284198103, 'PValue': 0.000149088707777249, 'FDR': 0.0108170339610124}, {'Unnamed: 0': 'IL33', 'logFC': 0.596712755970808, 'logCPM': 3.15948740291321, 'F': 11.581115413467698, 'PValue': 0.004187707731842579, 'FDR': 0.103529441148331}, {'Unnamed: 0': 'IL1RN', 'logFC': 0.319167303884587, 'logCPM': 9.05096605683498, 'F': 10.8304760656679, 'PValue': 0.0052441329790876, 'FDR': 0.11514666985332199}, {'Unnamed: 0': 'CSF1', 'logFC': 0.442074487500206, 'logCPM': 4.16617526144814, 'F': 8.09371033899274, 'PValue': 0.0127886311832583, 'FDR': 0.17896040492295398}, {'Unnamed: 0': 'IL36A', 'logFC': 3.5433885744262006, 'logCPM': -1.3897941566645402, 'F': 7.2825579371339, 'PValue': 0.017082702152135, 'FDR': 0.20434435421898398}, {'Unnamed: 0': 'IL17C', 'logFC': 2.7501492422017098, 'logCPM': -1.40793567281558, 'F': 6.89358348768093, 'PValue': 0.019721771455672003, 'FDR': 0.21705329672977802}, {'Unnamed: 0': 'CCL28', 'logFC': 0.480609545318515, 'logCPM': 3.61125420226539, 'F': 6.54196916103618, 'PValue': 0.0225217118616074, 'FDR': 0.23004196890012196}, {'Unnamed: 0': 'IL23A', 'logFC': 0.9502140234727859, 'logCPM': 0.307207148184221, 'F': 5.66193222936651, 'PValue': 0.0318129142954471, 'FDR': 0.272594612223504}, {'Unnamed: 0': 'CXCL10', 'logFC': 1.0185507437213799, 'logCPM': 0.332723191647523, 'F': 4.78331248075253, 'PValue': 0.0458712338040525, 'FDR': 0.316964687245269}, {'Unnamed: 0': 'IL15', 'logFC': -0.6722170281256761, 'logCPM': 1.01615903569205, 'F': 4.73088600942866, 'PValue': 0.0469189763877182, 'FDR': 0.318430340624403}, {'Unnamed: 0': 'TNFSF13B', 'logFC': -1.4186586914130699, 'logCPM': -0.941486596402462, 'F': 4.05229796903548, 'PValue': 0.0633870678118675, 'FDR': 0.35841480528946706}, {'Unnamed: 0': 'IL36RN', 'logFC': 0.35274242671238, 'logCPM': 2.67096850307788, 'F': 3.929579854246, 'PValue': 0.0670522252366524, 'FDR': 0.365417958547606}, {'Unnamed: 0': 'CCL22', 'logFC': 1.1875147734329499, 'logCPM': -0.6585210709039411, 'F': 3.7357879033636006, 'PValue': 0.0733663804350623, 'FDR': 0.378601151452679}, {'Unnamed: 0': 'IL19', 'logFC': 1.75045259368863, 'logCPM': -1.3636479971311202, 'F': 3.40565139486597, 'PValue': 0.0858370939213707, 'FDR': 0.39802890026061105}, {'Unnamed: 0': 'CTF1', 'logFC': -0.3678449518229289, 'logCPM': 2.67644661207275, 'F': 2.73741870468278, 'PValue': 0.11985711305175001, 'FDR': 0.454184632200075}, {'Unnamed: 0': 'IL18', 'logFC': -0.425708051295485, 'logCPM': 6.19328891586066, 'F': 2.4756464035319103, 'PValue': 0.137540234410002, 'FDR': 0.482819387161064}, {'Unnamed: 0': 'TGFB1', 'logFC': 0.158485973999858, 'logCPM': 7.34577460259804, 'F': 2.26622517236999, 'PValue': 0.15404653125591503, 'FDR': 0.502963368055872}, {'Unnamed: 0': 'MMP3', 'logFC': 0.651437202722817, 'logCPM': 0.239698225549338, 'F': 1.91308854046215, 'PValue': 0.187893400831186, 'FDR': 0.5416145776556269}, {'Unnamed: 0': 'CX3CL1', 'logFC': -0.35260417969762897, 'logCPM': 0.9311134869299671, 'F': 1.24785049910572, 'PValue': 0.282430741236907, 'FDR': 0.634649115555075}, {'Unnamed: 0': 'CXCL11', 'logFC': 0.607741807217119, 'logCPM': -0.5415321193475661, 'F': 1.0693605207560302, 'PValue': 0.318308586569622, 'FDR': 0.665114983675764}, {'Unnamed: 0': 'CXCL17', 'logFC': 0.0798669579533142, 'logCPM': 6.990763586572631, 'F': 0.811750017074396, 'PValue': 0.38256709214924395, 'FDR': 0.7170061642774659}, {'Unnamed: 0': 'IL11', 'logFC': -0.21141383748522502, 'logCPM': 1.57562164550803, 'F': 0.7652419530320621, 'PValue': 0.3961870346516, 'FDR': 0.726613850258445}, {'Unnamed: 0': 'TSLP', 'logFC': -0.19755733733188302, 'logCPM': 1.72586576521653, 'F': 0.7629939013673241, 'PValue': 0.39686399252576293, 'FDR': 0.727066598081369}, {'Unnamed: 0': 'SPP1', 'logFC': -0.224523613707648, 'logCPM': 0.643377499950496, 'F': 0.264364155456839, 'PValue': 0.615012453948228, 'FDR': 0.845998584256449}, {'Unnamed: 0': 'CCL26', 'logFC': -0.136601999461643, 'logCPM': 0.9214698951641558, 'F': 0.163402460832746, 'PValue': 0.6920402784408161, 'FDR': 0.8825378961012909}, {'Unnamed: 0': 'IL12A', 'logFC': 0.16859710684899598, 'logCPM': -0.160788636195256, 'F': 0.132658946162402, 'PValue': 0.721034660244436, 'FDR': 0.893694106564198}, {'Unnamed: 0': 'PPBP', 'logFC': 0.20513613888314602, 'logCPM': -0.0671538385354104, 'F': 0.12449452834222699, 'PValue': 0.7293707618801991, 'FDR': 0.897029179643542}, {'Unnamed: 0': 'AREG', 'logFC': 0.0344233938867834, 'logCPM': 2.53998731302081, 'F': 0.0243646399080234, 'PValue': 0.87814878022467, 'FDR': 0.955723216884511}, {'Unnamed: 0': 'TNFSF13', 'logFC': -0.0168436311695401, 'logCPM': 3.8018157584725203, 'F': 0.0176376079343967, 'PValue': 0.896202051399177, 'FDR': 0.961837558178231}, {'Unnamed: 0': 'CCL5', 'logFC': -0.0544784416614119, 'logCPM': 0.20506792828527398, 'F': 0.0130094392965013, 'PValue': 0.9107813405692059, 'FDR': 0.9682990281595041}]}, require_json=False, base_url='http://127.0.0.1:1234/v1')
HTTP PUT(http://127.0.0.1:1234/v1/networks/78/tables/defaultnode), json: {'key': 'name', 'dataKey': 'Unnamed: 0', 'data': [{'Unnamed: 0': 'CCL20', 'logFC': 3.1336841579912003, 'logCPM': 4.9490614237574695, 'F': 447.918174015401, 'PValue': 3.5605463098517503e-12, 'FDR': 2.3766646618260403e-08}, {'Unnamed: 0': 'IL36G', 'logFC': 2.7223097405620997, 'logCPM': 4.359048236258951, 'F': 340.454929200154, 'PValue': 2.3596919133248e-11, 'FDR': 1.05006290142954e-07}, {'Unnamed: 0': 'CXCL1', 'logFC': 1.4081156184302699, 'logCPM': 7.074793209871169, 'F': 218.195838294284, 'PValue': 4.85048355247373e-10, 'FDR': 5.8867232205022e-07}, {'Unnamed: 0': 'CXCL5', 'logFC': 3.46498321155524, 'logCPM': 3.03311228745573, 'F': 170.756073490655, 'PValue': 2.48785037923727e-09, 'FDR': 1.7489078617106201e-06}, {'Unnamed: 0': 'LIF', 'logFC': 1.298286661869, 'logCPM': 6.185570423725459, 'F': 169.42395043472, 'PValue': 2.62008668421067e-09, 'FDR': 1.7489078617106201e-06}, {'Unnamed: 0': 'IL6', 'logFC': 2.9224529419241, 'logCPM': 3.11820458196696, 'F': 145.766883175445, 'PValue': 7.041006508649291e-09, 'FDR': 3.3570513175167197e-06}, {'Unnamed: 0': 'CSF3', 'logFC': 4.79871351926883, 'logCPM': 2.3559216295706498, 'F': 137.55278757177, 'PValue': 1.0275704939316401e-08, 'FDR': 4.73036761861634e-06}, {'Unnamed: 0': 'IL1B', 'logFC': 1.05304900698371, 'logCPM': 8.36262335003799, 'F': 131.713443277546, 'PValue': 1.36162491609752e-08, 'FDR': 5.36874998890826e-06}, {'Unnamed: 0': 'MMP9', 'logFC': 2.27359629930066, 'logCPM': 4.56300947636999, 'F': 104.828517066264, 'PValue': 5.8758121787359295e-08, 'FDR': 1.8676688710982103e-05}, {'Unnamed: 0': 'CSF2', 'logFC': 2.9899586752875, 'logCPM': 1.9082595347063798, 'F': 86.99607808423559, 'PValue': 1.8877490043169302e-07, 'FDR': 5.08619157060006e-05}, {'Unnamed: 0': 'CXCL2', 'logFC': 1.38447650219698, 'logCPM': 5.4736460488295595, 'F': 86.86868390571149, 'PValue': 1.90494066314609e-07, 'FDR': 5.08619157060006e-05}, {'Unnamed: 0': 'CXCL3', 'logFC': 2.2361121419582597, 'logCPM': 3.56192555028102, 'F': 76.3054503353519, 'PValue': 4.2182146478808297e-07, 'FDR': 0.000104283639905943}, {'Unnamed: 0': 'IL1A', 'logFC': 1.06304418347977, 'logCPM': 7.297427389427201, 'F': 72.3175926648082, 'PValue': 5.83704481309657e-07, 'FDR': 0.000139150979026499}, {'Unnamed: 0': 'TNF', 'logFC': 1.7856104142522902, 'logCPM': 1.53426988157513, 'F': 43.0487007899721, 'PValue': 1.1575654156189099e-05, 'FDR': 0.00160973940609505}, {'Unnamed: 0': 'MMP1', 'logFC': 0.759244736745619, 'logCPM': 5.26866052956123, 'F': 41.9274392490743, 'PValue': 1.3364596876150301e-05, 'FDR': 0.0018021956393596602}, {'Unnamed: 0': 'CXCL14', 'logFC': -1.4648848411075601, 'logCPM': 2.9211274181300597, 'F': 40.4514572443023, 'PValue': 1.62213457036778e-05, 'FDR': 0.0021024753897485302}, {'Unnamed: 0': 'VEGFA', 'logFC': 0.43478964696808503, 'logCPM': 7.92195855352816, 'F': 29.1976750541295, 'PValue': 8.72401413930095e-05, 'FDR': 0.007101560290223641}, {'Unnamed: 0': 'CXCL16', 'logFC': 0.504787534396563, 'logCPM': 6.24249746361145, 'F': 26.5072285724819, 'PValue': 0.000139496864713424, 'FDR': 0.0102323249666165}, {'Unnamed: 0': 'CXCL6', 'logFC': 1.72754290730303, 'logCPM': 1.33639296548631, 'F': 26.140350284198103, 'PValue': 0.000149088707777249, 'FDR': 0.0108170339610124}, {'Unnamed: 0': 'IL33', 'logFC': 0.596712755970808, 'logCPM': 3.15948740291321, 'F': 11.581115413467698, 'PValue': 0.004187707731842579, 'FDR': 0.103529441148331}, {'Unnamed: 0': 'IL1RN', 'logFC': 0.319167303884587, 'logCPM': 9.05096605683498, 'F': 10.8304760656679, 'PValue': 0.0052441329790876, 'FDR': 0.11514666985332199}, {'Unnamed: 0': 'CSF1', 'logFC': 0.442074487500206, 'logCPM': 4.16617526144814, 'F': 8.09371033899274, 'PValue': 0.0127886311832583, 'FDR': 0.17896040492295398}, {'Unnamed: 0': 'IL36A', 'logFC': 3.5433885744262006, 'logCPM': -1.3897941566645402, 'F': 7.2825579371339, 'PValue': 0.017082702152135, 'FDR': 0.20434435421898398}, {'Unnamed: 0': 'IL17C', 'logFC': 2.7501492422017098, 'logCPM': -1.40793567281558, 'F': 6.89358348768093, 'PValue': 0.019721771455672003, 'FDR': 0.21705329672977802}, {'Unnamed: 0': 'CCL28', 'logFC': 0.480609545318515, 'logCPM': 3.61125420226539, 'F': 6.54196916103618, 'PValue': 0.0225217118616074, 'FDR': 0.23004196890012196}, {'Unnamed: 0': 'IL23A', 'logFC': 0.9502140234727859, 'logCPM': 0.307207148184221, 'F': 5.66193222936651, 'PValue': 0.0318129142954471, 'FDR': 0.272594612223504}, {'Unnamed: 0': 'CXCL10', 'logFC': 1.0185507437213799, 'logCPM': 0.332723191647523, 'F': 4.78331248075253, 'PValue': 0.0458712338040525, 'FDR': 0.316964687245269}, {'Unnamed: 0': 'IL15', 'logFC': -0.6722170281256761, 'logCPM': 1.01615903569205, 'F': 4.73088600942866, 'PValue': 0.0469189763877182, 'FDR': 0.318430340624403}, {'Unnamed: 0': 'TNFSF13B', 'logFC': -1.4186586914130699, 'logCPM': -0.941486596402462, 'F': 4.05229796903548, 'PValue': 0.0633870678118675, 'FDR': 0.35841480528946706}, {'Unnamed: 0': 'IL36RN', 'logFC': 0.35274242671238, 'logCPM': 2.67096850307788, 'F': 3.929579854246, 'PValue': 0.0670522252366524, 'FDR': 0.365417958547606}, {'Unnamed: 0': 'CCL22', 'logFC': 1.1875147734329499, 'logCPM': -0.6585210709039411, 'F': 3.7357879033636006, 'PValue': 0.0733663804350623, 'FDR': 0.378601151452679}, {'Unnamed: 0': 'IL19', 'logFC': 1.75045259368863, 'logCPM': -1.3636479971311202, 'F': 3.40565139486597, 'PValue': 0.0858370939213707, 'FDR': 0.39802890026061105}, {'Unnamed: 0': 'CTF1', 'logFC': -0.3678449518229289, 'logCPM': 2.67644661207275, 'F': 2.73741870468278, 'PValue': 0.11985711305175001, 'FDR': 0.454184632200075}, {'Unnamed: 0': 'IL18', 'logFC': -0.425708051295485, 'logCPM': 6.19328891586066, 'F': 2.4756464035319103, 'PValue': 0.137540234410002, 'FDR': 0.482819387161064}, {'Unnamed: 0': 'TGFB1', 'logFC': 0.158485973999858, 'logCPM': 7.34577460259804, 'F': 2.26622517236999, 'PValue': 0.15404653125591503, 'FDR': 0.502963368055872}, {'Unnamed: 0': 'MMP3', 'logFC': 0.651437202722817, 'logCPM': 0.239698225549338, 'F': 1.91308854046215, 'PValue': 0.187893400831186, 'FDR': 0.5416145776556269}, {'Unnamed: 0': 'CX3CL1', 'logFC': -0.35260417969762897, 'logCPM': 0.9311134869299671, 'F': 1.24785049910572, 'PValue': 0.282430741236907, 'FDR': 0.634649115555075}, {'Unnamed: 0': 'CXCL11', 'logFC': 0.607741807217119, 'logCPM': -0.5415321193475661, 'F': 1.0693605207560302, 'PValue': 0.318308586569622, 'FDR': 0.665114983675764}, {'Unnamed: 0': 'CXCL17', 'logFC': 0.0798669579533142, 'logCPM': 6.990763586572631, 'F': 0.811750017074396, 'PValue': 0.38256709214924395, 'FDR': 0.7170061642774659}, {'Unnamed: 0': 'IL11', 'logFC': -0.21141383748522502, 'logCPM': 1.57562164550803, 'F': 0.7652419530320621, 'PValue': 0.3961870346516, 'FDR': 0.726613850258445}, {'Unnamed: 0': 'TSLP', 'logFC': -0.19755733733188302, 'logCPM': 1.72586576521653, 'F': 0.7629939013673241, 'PValue': 0.39686399252576293, 'FDR': 0.727066598081369}, {'Unnamed: 0': 'SPP1', 'logFC': -0.224523613707648, 'logCPM': 0.643377499950496, 'F': 0.264364155456839, 'PValue': 0.615012453948228, 'FDR': 0.845998584256449}, {'Unnamed: 0': 'CCL26', 'logFC': -0.136601999461643, 'logCPM': 0.9214698951641558, 'F': 0.163402460832746, 'PValue': 0.6920402784408161, 'FDR': 0.8825378961012909}, {'Unnamed: 0': 'IL12A', 'logFC': 0.16859710684899598, 'logCPM': -0.160788636195256, 'F': 0.132658946162402, 'PValue': 0.721034660244436, 'FDR': 0.893694106564198}, {'Unnamed: 0': 'PPBP', 'logFC': 0.20513613888314602, 'logCPM': -0.0671538385354104, 'F': 0.12449452834222699, 'PValue': 0.7293707618801991, 'FDR': 0.897029179643542}, {'Unnamed: 0': 'AREG', 'logFC': 0.0344233938867834, 'logCPM': 2.53998731302081, 'F': 0.0243646399080234, 'PValue': 0.87814878022467, 'FDR': 0.955723216884511}, {'Unnamed: 0': 'TNFSF13', 'logFC': -0.0168436311695401, 'logCPM': 3.8018157584725203, 'F': 0.0176376079343967, 'PValue': 0.896202051399177, 'FDR': 0.961837558178231}, {'Unnamed: 0': 'CCL5', 'logFC': -0.0544784416614119, 'logCPM': 0.20506792828527398, 'F': 0.0130094392965013, 'PValue': 0.9107813405692059, 'FDR': 0.9682990281595041}]}
OK[200], content: 
Returning 'cyrest_put': ''
Returning 'load_table_data': 'Success: Data loaded in defaultnode table'
--------------------
Calling set_node_color_mapping('logFC', table_column_values=[-1, 0, 1], colors=['#0000FF', '#FFFFFF', '#FF0000'], style_name='WikiPathways')
Calling get_table_column_names('node', network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 78
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 78}]
Returning 'get_network_suid': 78
Calling cyrest_get('networks/78/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"IsGPMLShape","type":"Boolean","immutable":false,"primaryKey":false},{"name":"Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Height","type":"Double","immutable":false,"primaryKey":false},{"name":"FillColor","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"LabelFont","type":"String","immutable":false,"primaryKey":false},{"name":"LabelSize","type":"Double","immutable":false,"primaryKey":false},{"name":"Transparent","type":"String","immutable":false,"primaryKey":false},{"name":"BorderThickness","type":"Double","immutable":false,"primaryKey":false},{"name":"BorderStyle","type":"String","immutable":false,"primaryKey":false},{"name":"Shape","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"Unnamed: 0","type":"String","immutable":false,"primaryKey":false},{"name":"logFC","type":"Double","immutable":false,"primaryKey":false},{"name":"logCPM","type":"Double","immutable":false,"primaryKey":false},{"name":"F","type":"Double","immutable":false,"primaryKey":false},{"name":"PValue","type":"Double","immutable":false,"primaryKey":false},{"name":"FDR","type":"Double","immutable":false,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'IsGPMLShape', 'type': 'Boolean', 'immutable': False, 'primaryKey': False}, {'name': 'Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Height', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FillColor', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'LabelFont', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'LabelSize', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Transparent', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'BorderThickness', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'BorderStyle', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Shape', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'Unnamed: 0', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'logFC', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'logCPM', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'F', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'PValue', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FDR', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
Returning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'XrefId', 'XrefDatasource', 'Type', 'IsGPMLShape', 'Width', 'Height', 'FillColor', 'Color', 'LabelFont', 'LabelSize', 'Transparent', 'BorderThickness', 'BorderStyle', 'Shape', 'Ensembl', 'Unnamed: 0', 'logFC', 'logCPM', 'F', 'PValue', 'FDR']
Calling map_visual_property('NODE_FILL_COLOR', 'logFC', 'c', [-1, 0, 1], ['#0000FF', '#FFFFFF', '#FF0000'], network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 78
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 78}]
Returning 'get_network_suid': 78
Calling get_visual_property_names(base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('styles/default/defaults', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/styles/default/defaults)
OK[200], content: {
  "defaults" : [ {
    "visualProperty" : "COMPOUND_NODE_PADDING",
    "value" : 10.0
  }, {
    "visualProperty" : "COMPOUND_NODE_SHAPE",
    "value" : "ROUND_RECTANGLE"
  }, {
    "visualProperty" : "DING_RENDERING_ENGINE_ROOT",
    "value" : "org.cytoscape.view.presentation.property.NullVisualProperty$NullDataTypeImpl@8bda2fe"
  }, {
    "visualProperty" : "EDGE",
    "value" : "DefaultVisualizableVisualProperty(id=EDGE, name=Edge Visual Property)"
  }, {
    "visualProperty" : "EDGE_BEND",
    "value" : ""
  }, {
    "visualProperty" : "EDGE_CURVED",
    "value" : true
  }, {
    "visualProperty" : "EDGE_LABEL",
    "value" : ""
  }, {
    "visualProperty" : "EDGE_LABEL_COLOR",
    "value" : "#000000"
  }, {
    "visualProperty" : "EDGE_LABEL_FONT_FACE",
    "value" : "Dialog.plain,plain,10"
  }, {
    "visualProperty" : "EDGE_LABEL_FONT_SIZE",
    "value" : 10
  }, {
    "visualProperty" : "EDGE_LABEL_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "EDGE_LABEL_WIDTH",
    "value" : 200.0
  }, {
    "visualProperty" : "EDGE_LINE_TYPE",
    "value" : "SOLID"
  }, {
    "visualProperty" : "EDGE_PAINT",
    "value" : "#323232"
  }, {
    "visualProperty" : "EDGE_SELECTED",
    "value" : false
  }, {
    "visualProperty" : "EDGE_SELECTED_PAINT",
    "value" : "#FF0000"
  }, {
    "visualProperty" : "EDGE_SOURCE_ARROW_SELECTED_PAINT",
    "value" : "#FFFF00"
  }, {
    "visualProperty" : "EDGE_SOURCE_ARROW_SHAPE",
    "value" : "NONE"
  }, {
    "visualProperty" : "EDGE_SOURCE_ARROW_SIZE",
    "value" : 6.0
  }, {
    "visualProperty" : "EDGE_SOURCE_ARROW_UNSELECTED_PAINT",
    "value" : "#000000"
  }, {
    "visualProperty" : "EDGE_STROKE_SELECTED_PAINT",
    "value" : "#FF0000"
  }, {
    "visualProperty" : "EDGE_STROKE_UNSELECTED_PAINT",
    "value" : "#848484"
  }, {
    "visualProperty" : "EDGE_TARGET_ARROW_SELECTED_PAINT",
    "value" : "#FFFF00"
  }, {
    "visualProperty" : "EDGE_TARGET_ARROW_SHAPE",
    "value" : "NONE"
  }, {
    "visualProperty" : "EDGE_TARGET_ARROW_SIZE",
    "value" : 6.0
  }, {
    "visualProperty" : "EDGE_TARGET_ARROW_UNSELECTED_PAINT",
    "value" : "#000000"
  }, {
    "visualProperty" : "EDGE_TOOLTIP",
    "value" : ""
  }, {
    "visualProperty" : "EDGE_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "EDGE_UNSELECTED_PAINT",
    "value" : "#404040"
  }, {
    "visualProperty" : "EDGE_VISIBLE",
    "value" : true
  }, {
    "visualProperty" : "EDGE_WIDTH",
    "value" : 2.0
  }, {
    "visualProperty" : "NETWORK",
    "value" : "DefaultVisualizableVisualProperty(id=NETWORK, name=Network Visual Property)"
  }, {
    "visualProperty" : "NETWORK_ANNOTATION_SELECTION",
    "value" : false
  }, {
    "visualProperty" : "NETWORK_BACKGROUND_PAINT",
    "value" : "#FFFFFF"
  }, {
    "visualProperty" : "NETWORK_CENTER_X_LOCATION",
    "value" : 0.0
  }, {
    "visualProperty" : "NETWORK_CENTER_Y_LOCATION",
    "value" : 0.0
  }, {
    "visualProperty" : "NETWORK_CENTER_Z_LOCATION",
    "value" : 0.0
  }, {
    "visualProperty" : "NETWORK_DEPTH",
    "value" : 0.0
  }, {
    "visualProperty" : "NETWORK_EDGE_SELECTION",
    "value" : true
  }, {
    "visualProperty" : "NETWORK_FORCE_HIGH_DETAIL",
    "value" : false
  }, {
    "visualProperty" : "NETWORK_HEIGHT",
    "value" : 400.0
  }, {
    "visualProperty" : "NETWORK_NODE_LABEL_SELECTION",
    "value" : false
  }, {
    "visualProperty" : "NETWORK_NODE_SELECTION",
    "value" : true
  }, {
    "visualProperty" : "NETWORK_SCALE_FACTOR",
    "value" : 1.0
  }, {
    "visualProperty" : "NETWORK_SIZE",
    "value" : 550.0
  }, {
    "visualProperty" : "NETWORK_TITLE",
    "value" : ""
  }, {
    "visualProperty" : "NETWORK_WIDTH",
    "value" : 550.0
  }, {
    "visualProperty" : "NODE",
    "value" : "DefaultVisualizableVisualProperty(id=NODE, name=Node Visual Property)"
  }, {
    "visualProperty" : "NODE_BORDER_PAINT",
    "value" : "#CCCCCC"
  }, {
    "visualProperty" : "NODE_BORDER_STROKE",
    "value" : "SOLID"
  }, {
    "visualProperty" : "NODE_BORDER_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "NODE_BORDER_WIDTH",
    "value" : 0.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_1",
    "value" : "org.cytoscape.ding.customgraphics.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_2",
    "value" : "org.cytoscape.ding.customgraphics.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_3",
    "value" : "org.cytoscape.ding.customgraphics.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_4",
    "value" : "org.cytoscape.ding.customgraphics.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_5",
    "value" : "org.cytoscape.ding.customgraphics.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_6",
    "value" : "org.cytoscape.ding.customgraphics.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_7",
    "value" : "org.cytoscape.ding.customgraphics.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_8",
    "value" : "org.cytoscape.ding.customgraphics.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_9",
    "value" : "org.cytoscape.ding.customgraphics.NullCustomGraphics,0,[ Remove Graphics ],"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_1",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_2",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_3",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_4",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_5",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_6",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_7",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_8",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_POSITION_9",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_1",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_2",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_3",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_4",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_5",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_6",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_7",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_8",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMGRAPHICS_SIZE_9",
    "value" : 50.0
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_1",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_1, name=Node Custom Paint 1)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_2",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_2, name=Node Custom Paint 2)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_3",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_3, name=Node Custom Paint 3)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_4",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_4, name=Node Custom Paint 4)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_5",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_5, name=Node Custom Paint 5)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_6",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_6, name=Node Custom Paint 6)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_7",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_7, name=Node Custom Paint 7)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_8",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_8, name=Node Custom Paint 8)"
  }, {
    "visualProperty" : "NODE_CUSTOMPAINT_9",
    "value" : "DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_9, name=Node Custom Paint 9)"
  }, {
    "visualProperty" : "NODE_DEPTH",
    "value" : 0.0
  }, {
    "visualProperty" : "NODE_FILL_COLOR",
    "value" : "#89D0F5"
  }, {
    "visualProperty" : "NODE_HEIGHT",
    "value" : 35.0
  }, {
    "visualProperty" : "NODE_LABEL",
    "value" : ""
  }, {
    "visualProperty" : "NODE_LABEL_COLOR",
    "value" : "#000000"
  }, {
    "visualProperty" : "NODE_LABEL_FONT_FACE",
    "value" : "SansSerif.plain,plain,12"
  }, {
    "visualProperty" : "NODE_LABEL_FONT_SIZE",
    "value" : 12
  }, {
    "visualProperty" : "NODE_LABEL_POSITION",
    "value" : "C,C,c,0.00,0.00"
  }, {
    "visualProperty" : "NODE_LABEL_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "NODE_LABEL_WIDTH",
    "value" : 200.0
  }, {
    "visualProperty" : "NODE_NESTED_NETWORK_IMAGE_VISIBLE",
    "value" : true
  }, {
    "visualProperty" : "NODE_PAINT",
    "value" : "#1E90FF"
  }, {
    "visualProperty" : "NODE_SELECTED",
    "value" : false
  }, {
    "visualProperty" : "NODE_SELECTED_PAINT",
    "value" : "#FFFF00"
  }, {
    "visualProperty" : "NODE_SHAPE",
    "value" : "ROUND_RECTANGLE"
  }, {
    "visualProperty" : "NODE_SIZE",
    "value" : 35.0
  }, {
    "visualProperty" : "NODE_TOOLTIP",
    "value" : ""
  }, {
    "visualProperty" : "NODE_TRANSPARENCY",
    "value" : 255
  }, {
    "visualProperty" : "NODE_VISIBLE",
    "value" : true
  }, {
    "visualProperty" : "NODE_WIDTH",
    "value" : 75.0
  }, {
    "visualProperty" : "NODE_X_LOCATION",
    "value" : 0.0
  }, {
    "visualProperty" : "NODE_Y_LOCATION",
    "value" : 0.0
  }, {
    "visualProperty" : "NODE_Z_LOCATION",
    "value" : 0.0
  } ]
}
Returning 'cyrest_get': {'defaults': [{'visualProperty': 'COMPOUND_NODE_PADDING', 'value': 10.0}, {'visualProperty': 'COMPOUND_NODE_SHAPE', 'value': 'ROUND_RECTANGLE'}, {'visualProperty': 'DING_RENDERING_ENGINE_ROOT', 'value': 'org.cytoscape.view.presentation.property.NullVisualProperty$NullDataTypeImpl@8bda2fe'}, {'visualProperty': 'EDGE', 'value': 'DefaultVisualizableVisualProperty(id=EDGE, name=Edge Visual Property)'}, {'visualProperty': 'EDGE_BEND', 'value': ''}, {'visualProperty': 'EDGE_CURVED', 'value': True}, {'visualProperty': 'EDGE_LABEL', 'value': ''}, {'visualProperty': 'EDGE_LABEL_COLOR', 'value': '#000000'}, {'visualProperty': 'EDGE_LABEL_FONT_FACE', 'value': 'Dialog.plain,plain,10'}, {'visualProperty': 'EDGE_LABEL_FONT_SIZE', 'value': 10}, {'visualProperty': 'EDGE_LABEL_TRANSPARENCY', 'value': 255}, {'visualProperty': 'EDGE_LABEL_WIDTH', 'value': 200.0}, {'visualProperty': 'EDGE_LINE_TYPE', 'value': 'SOLID'}, {'visualProperty': 'EDGE_PAINT', 'value': '#323232'}, {'visualProperty': 'EDGE_SELECTED', 'value': False}, {'visualProperty': 'EDGE_SELECTED_PAINT', 'value': '#FF0000'}, {'visualProperty': 'EDGE_SOURCE_ARROW_SELECTED_PAINT', 'value': '#FFFF00'}, {'visualProperty': 'EDGE_SOURCE_ARROW_SHAPE', 'value': 'NONE'}, {'visualProperty': 'EDGE_SOURCE_ARROW_SIZE', 'value': 6.0}, {'visualProperty': 'EDGE_SOURCE_ARROW_UNSELECTED_PAINT', 'value': '#000000'}, {'visualProperty': 'EDGE_STROKE_SELECTED_PAINT', 'value': '#FF0000'}, {'visualProperty': 'EDGE_STROKE_UNSELECTED_PAINT', 'value': '#848484'}, {'visualProperty': 'EDGE_TARGET_ARROW_SELECTED_PAINT', 'value': '#FFFF00'}, {'visualProperty': 'EDGE_TARGET_ARROW_SHAPE', 'value': 'NONE'}, {'visualProperty': 'EDGE_TARGET_ARROW_SIZE', 'value': 6.0}, {'visualProperty': 'EDGE_TARGET_ARROW_UNSELECTED_PAINT', 'value': '#000000'}, {'visualProperty': 'EDGE_TOOLTIP', 'value': ''}, {'visualProperty': 'EDGE_TRANSPARENCY', 'value': 255}, {'visualProperty': 'EDGE_UNSELECTED_PAINT', 'value': '#404040'}, {'visualProperty': 'EDGE_VISIBLE', 'value': True}, {'visualProperty': 'EDGE_WIDTH', 'value': 2.0}, {'visualProperty': 'NETWORK', 'value': 'DefaultVisualizableVisualProperty(id=NETWORK, name=Network Visual Property)'}, {'visualProperty': 'NETWORK_ANNOTATION_SELECTION', 'value': False}, {'visualProperty': 'NETWORK_BACKGROUND_PAINT', 'value': '#FFFFFF'}, {'visualProperty': 'NETWORK_CENTER_X_LOCATION', 'value': 0.0}, {'visualProperty': 'NETWORK_CENTER_Y_LOCATION', 'value': 0.0}, {'visualProperty': 'NETWORK_CENTER_Z_LOCATION', 'value': 0.0}, {'visualProperty': 'NETWORK_DEPTH', 'value': 0.0}, {'visualProperty': 'NETWORK_EDGE_SELECTION', 'value': True}, {'visualProperty': 'NETWORK_FORCE_HIGH_DETAIL', 'value': False}, {'visualProperty': 'NETWORK_HEIGHT', 'value': 400.0}, {'visualProperty': 'NETWORK_NODE_LABEL_SELECTION', 'value': False}, {'visualProperty': 'NETWORK_NODE_SELECTION', 'value': True}, {'visualProperty': 'NETWORK_SCALE_FACTOR', 'value': 1.0}, {'visualProperty': 'NETWORK_SIZE', 'value': 550.0}, {'visualProperty': 'NETWORK_TITLE', 'value': ''}, {'visualProperty': 'NETWORK_WIDTH', 'value': 550.0}, {'visualProperty': 'NODE', 'value': 'DefaultVisualizableVisualProperty(id=NODE, name=Node Visual Property)'}, {'visualProperty': 'NODE_BORDER_PAINT', 'value': '#CCCCCC'}, {'visualProperty': 'NODE_BORDER_STROKE', 'value': 'SOLID'}, {'visualProperty': 'NODE_BORDER_TRANSPARENCY', 'value': 255}, {'visualProperty': 'NODE_BORDER_WIDTH', 'value': 0.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_1', 'value': 'org.cytoscape.ding.customgraphics.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_2', 'value': 'org.cytoscape.ding.customgraphics.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_3', 'value': 'org.cytoscape.ding.customgraphics.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_4', 'value': 'org.cytoscape.ding.customgraphics.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_5', 'value': 'org.cytoscape.ding.customgraphics.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_6', 'value': 'org.cytoscape.ding.customgraphics.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_7', 'value': 'org.cytoscape.ding.customgraphics.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_8', 'value': 'org.cytoscape.ding.customgraphics.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_9', 'value': 'org.cytoscape.ding.customgraphics.NullCustomGraphics,0,[ Remove Graphics ],'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_1', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_2', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_3', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_4', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_5', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_6', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_7', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_8', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_POSITION_9', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_1', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_2', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_3', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_4', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_5', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_6', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_7', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_8', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMGRAPHICS_SIZE_9', 'value': 50.0}, {'visualProperty': 'NODE_CUSTOMPAINT_1', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_1, name=Node Custom Paint 1)'}, {'visualProperty': 'NODE_CUSTOMPAINT_2', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_2, name=Node Custom Paint 2)'}, {'visualProperty': 'NODE_CUSTOMPAINT_3', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_3, name=Node Custom Paint 3)'}, {'visualProperty': 'NODE_CUSTOMPAINT_4', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_4, name=Node Custom Paint 4)'}, {'visualProperty': 'NODE_CUSTOMPAINT_5', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_5, name=Node Custom Paint 5)'}, {'visualProperty': 'NODE_CUSTOMPAINT_6', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_6, name=Node Custom Paint 6)'}, {'visualProperty': 'NODE_CUSTOMPAINT_7', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_7, name=Node Custom Paint 7)'}, {'visualProperty': 'NODE_CUSTOMPAINT_8', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_8, name=Node Custom Paint 8)'}, {'visualProperty': 'NODE_CUSTOMPAINT_9', 'value': 'DefaultVisualizableVisualProperty(id=NODE_CUSTOMPAINT_9, name=Node Custom Paint 9)'}, {'visualProperty': 'NODE_DEPTH', 'value': 0.0}, {'visualProperty': 'NODE_FILL_COLOR', 'value': '#89D0F5'}, {'visualProperty': 'NODE_HEIGHT', 'value': 35.0}, {'visualProperty': 'NODE_LABEL', 'value': ''}, {'visualProperty': 'NODE_LABEL_COLOR', 'value': '#000000'}, {'visualProperty': 'NODE_LABEL_FONT_FACE', 'value': 'SansSerif.plain,plain,12'}, {'visualProperty': 'NODE_LABEL_FONT_SIZE', 'value': 12}, {'visualProperty': 'NODE_LABEL_POSITION', 'value': 'C,C,c,0.00,0.00'}, {'visualProperty': 'NODE_LABEL_TRANSPARENCY', 'value': 255}, {'visualProperty': 'NODE_LABEL_WIDTH', 'value': 200.0}, {'visualProperty': 'NODE_NESTED_NETWORK_IMAGE_VISIBLE', 'value': True}, {'visualProperty': 'NODE_PAINT', 'value': '#1E90FF'}, {'visualProperty': 'NODE_SELECTED', 'value': False}, {'visualProperty': 'NODE_SELECTED_PAINT', 'value': '#FFFF00'}, {'visualProperty': 'NODE_SHAPE', 'value': 'ROUND_RECTANGLE'}, {'visualProperty': 'NODE_SIZE', 'value': 35.0}, {'visualProperty': 'NODE_TOOLTIP', 'value': ''}, {'visualProperty': 'NODE_TRANSPARENCY', 'value': 255}, {'visualProperty': 'NODE_VISIBLE', 'value': True}, {'visualProperty': 'NODE_WIDTH', 'value': 75.0}, {'visualProperty': 'NODE_X_LOCATION', 'value': 0.0}, {'visualProperty': 'NODE_Y_LOCATION', 'value': 0.0}, {'visualProperty': 'NODE_Z_LOCATION', 'value': 0.0}]}
Returning 'get_visual_property_names': ['COMPOUND_NODE_PADDING', 'COMPOUND_NODE_SHAPE', 'DING_RENDERING_ENGINE_ROOT', 'EDGE', 'EDGE_BEND', 'EDGE_CURVED', 'EDGE_LABEL', 'EDGE_LABEL_COLOR', 'EDGE_LABEL_FONT_FACE', 'EDGE_LABEL_FONT_SIZE', 'EDGE_LABEL_TRANSPARENCY', 'EDGE_LABEL_WIDTH', 'EDGE_LINE_TYPE', 'EDGE_PAINT', 'EDGE_SELECTED', 'EDGE_SELECTED_PAINT', 'EDGE_SOURCE_ARROW_SELECTED_PAINT', 'EDGE_SOURCE_ARROW_SHAPE', 'EDGE_SOURCE_ARROW_SIZE', 'EDGE_SOURCE_ARROW_UNSELECTED_PAINT', 'EDGE_STROKE_SELECTED_PAINT', 'EDGE_STROKE_UNSELECTED_PAINT', 'EDGE_TARGET_ARROW_SELECTED_PAINT', 'EDGE_TARGET_ARROW_SHAPE', 'EDGE_TARGET_ARROW_SIZE', 'EDGE_TARGET_ARROW_UNSELECTED_PAINT', 'EDGE_TOOLTIP', 'EDGE_TRANSPARENCY', 'EDGE_UNSELECTED_PAINT', 'EDGE_VISIBLE', 'EDGE_WIDTH', 'NETWORK', 'NETWORK_ANNOTATION_SELECTION', 'NETWORK_BACKGROUND_PAINT', 'NETWORK_CENTER_X_LOCATION', 'NETWORK_CENTER_Y_LOCATION', 'NETWORK_CENTER_Z_LOCATION', 'NETWORK_DEPTH', 'NETWORK_EDGE_SELECTION', 'NETWORK_FORCE_HIGH_DETAIL', 'NETWORK_HEIGHT', 'NETWORK_NODE_LABEL_SELECTION', 'NETWORK_NODE_SELECTION', 'NETWORK_SCALE_FACTOR', 'NETWORK_SIZE', 'NETWORK_TITLE', 'NETWORK_WIDTH', 'NODE', 'NODE_BORDER_PAINT', 'NODE_BORDER_STROKE', 'NODE_BORDER_TRANSPARENCY', 'NODE_BORDER_WIDTH', 'NODE_CUSTOMGRAPHICS_1', 'NODE_CUSTOMGRAPHICS_2', 'NODE_CUSTOMGRAPHICS_3', 'NODE_CUSTOMGRAPHICS_4', 'NODE_CUSTOMGRAPHICS_5', 'NODE_CUSTOMGRAPHICS_6', 'NODE_CUSTOMGRAPHICS_7', 'NODE_CUSTOMGRAPHICS_8', 'NODE_CUSTOMGRAPHICS_9', 'NODE_CUSTOMGRAPHICS_POSITION_1', 'NODE_CUSTOMGRAPHICS_POSITION_2', 'NODE_CUSTOMGRAPHICS_POSITION_3', 'NODE_CUSTOMGRAPHICS_POSITION_4', 'NODE_CUSTOMGRAPHICS_POSITION_5', 'NODE_CUSTOMGRAPHICS_POSITION_6', 'NODE_CUSTOMGRAPHICS_POSITION_7', 'NODE_CUSTOMGRAPHICS_POSITION_8', 'NODE_CUSTOMGRAPHICS_POSITION_9', 'NODE_CUSTOMGRAPHICS_SIZE_1', 'NODE_CUSTOMGRAPHICS_SIZE_2', 'NODE_CUSTOMGRAPHICS_SIZE_3', 'NODE_CUSTOMGRAPHICS_SIZE_4', 'NODE_CUSTOMGRAPHICS_SIZE_5', 'NODE_CUSTOMGRAPHICS_SIZE_6', 'NODE_CUSTOMGRAPHICS_SIZE_7', 'NODE_CUSTOMGRAPHICS_SIZE_8', 'NODE_CUSTOMGRAPHICS_SIZE_9', 'NODE_CUSTOMPAINT_1', 'NODE_CUSTOMPAINT_2', 'NODE_CUSTOMPAINT_3', 'NODE_CUSTOMPAINT_4', 'NODE_CUSTOMPAINT_5', 'NODE_CUSTOMPAINT_6', 'NODE_CUSTOMPAINT_7', 'NODE_CUSTOMPAINT_8', 'NODE_CUSTOMPAINT_9', 'NODE_DEPTH', 'NODE_FILL_COLOR', 'NODE_HEIGHT', 'NODE_LABEL', 'NODE_LABEL_COLOR', 'NODE_LABEL_FONT_FACE', 'NODE_LABEL_FONT_SIZE', 'NODE_LABEL_POSITION', 'NODE_LABEL_TRANSPARENCY', 'NODE_LABEL_WIDTH', 'NODE_NESTED_NETWORK_IMAGE_VISIBLE', 'NODE_PAINT', 'NODE_SELECTED', 'NODE_SELECTED_PAINT', 'NODE_SHAPE', 'NODE_SIZE', 'NODE_TOOLTIP', 'NODE_TRANSPARENCY', 'NODE_VISIBLE', 'NODE_WIDTH', 'NODE_X_LOCATION', 'NODE_Y_LOCATION', 'NODE_Z_LOCATION']
Calling cyrest_get('networks/78/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"IsGPMLShape","type":"Boolean","immutable":false,"primaryKey":false},{"name":"Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Height","type":"Double","immutable":false,"primaryKey":false},{"name":"FillColor","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"LabelFont","type":"String","immutable":false,"primaryKey":false},{"name":"LabelSize","type":"Double","immutable":false,"primaryKey":false},{"name":"Transparent","type":"String","immutable":false,"primaryKey":false},{"name":"BorderThickness","type":"Double","immutable":false,"primaryKey":false},{"name":"BorderStyle","type":"String","immutable":false,"primaryKey":false},{"name":"Shape","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"Unnamed: 0","type":"String","immutable":false,"primaryKey":false},{"name":"logFC","type":"Double","immutable":false,"primaryKey":false},{"name":"logCPM","type":"Double","immutable":false,"primaryKey":false},{"name":"F","type":"Double","immutable":false,"primaryKey":false},{"name":"PValue","type":"Double","immutable":false,"primaryKey":false},{"name":"FDR","type":"Double","immutable":false,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'IsGPMLShape', 'type': 'Boolean', 'immutable': False, 'primaryKey': False}, {'name': 'Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Height', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FillColor', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'LabelFont', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'LabelSize', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Transparent', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'BorderThickness', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'BorderStyle', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Shape', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'Unnamed: 0', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'logFC', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'logCPM', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'F', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'PValue', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FDR', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
Returning 'map_visual_property': {'mappingType': 'continuous', 'mappingColumn': 'logFC', 'mappingColumnType': 'Double', 'visualProperty': 'NODE_FILL_COLOR', 'points': [{'value': -1, 'lesser': '#0000FF', 'equal': '#0000FF', 'greater': '#0000FF'}, {'value': 0, 'lesser': '#FFFFFF', 'equal': '#FFFFFF', 'greater': '#FFFFFF'}, {'value': 1, 'lesser': '#FF0000', 'equal': '#FF0000', 'greater': '#FF0000'}]}
Calling update_style_mapping('WikiPathways', {'mappingType': 'continuous', 'mappingColumn': 'logFC', 'mappingColumnType': 'Double', 'visualProperty': 'NODE_FILL_COLOR', 'points': [{'value': -1, 'lesser': '#0000FF', 'equal': '#0000FF', 'greater': '#0000FF'}, {'value': 0, 'lesser': '#FFFFFF', 'equal': '#FFFFFF', 'greater': '#FFFFFF'}, {'value': 1, 'lesser': '#FF0000', 'equal': '#FF0000', 'greater': '#FF0000'}]}, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('styles/WikiPathways/mappings', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/styles/WikiPathways/mappings)
OK[200], content: [ {
  "mappingType" : "passthrough",
  "mappingColumn" : "Color",
  "mappingColumnType" : "String",
  "visualProperty" : "NODE_LABEL_COLOR"
}, {
  "mappingType" : "passthrough",
  "mappingColumn" : "LineThickness",
  "mappingColumnType" : "Double",
  "visualProperty" : "EDGE_WIDTH"
}, {
  "mappingType" : "passthrough",
  "mappingColumn" : "Width",
  "mappingColumnType" : "Double",
  "visualProperty" : "NODE_WIDTH"
}, {
  "mappingType" : "discrete",
  "mappingColumn" : "Shape",
  "mappingColumnType" : "String",
  "visualProperty" : "NODE_SHAPE",
  "map" : [ {
    "key" : "Nucleus",
    "value" : "Nucleus"
  }, {
    "key" : "Hexagon",
    "value" : "HEXAGON"
  }, {
    "key" : "Ellipse",
    "value" : "ELLIPSE"
  }, {
    "key" : "Brace",
    "value" : "Brace"
  }, {
    "key" : "RoundRectangle",
    "value" : "ROUND_RECTANGLE"
  }, {
    "key" : "Rectangle",
    "value" : "RECTANGLE"
  }, {
    "key" : "Triangle",
    "value" : "TRIANGLE"
  }, {
    "key" : "Octagon",
    "value" : "OCTAGON"
  }, {
    "key" : "Sarcoplasmic Reticulum",
    "value" : "Sarcoplasmic Reticulum"
  }, {
    "key" : "Endoplasmic Reticulum",
    "value" : "Endoplasmic Reticulum"
  }, {
    "key" : "Golgi Apparatus",
    "value" : "Golgi Apparatus"
  }, {
    "key" : "Mitochondria",
    "value" : "Mitochondria"
  }, {
    "key" : "Arc",
    "value" : "Arc"
  }, {
    "key" : "Oval",
    "value" : "ELLIPSE"
  }, {
    "key" : "Pentagon",
    "value" : "HEXAGON"
  }, {
    "key" : "Organelle",
    "value" : "ROUND_RECTANGLE"
  }, {
    "key" : "Cell",
    "value" : "Cell"
  }, {
    "key" : "RoundedRectangle",
    "value" : "ROUND_RECTANGLE"
  } ]
}, {
  "mappingType" : "passthrough",
  "mappingColumn" : "Color",
  "mappingColumnType" : "String",
  "visualProperty" : "EDGE_UNSELECTED_PAINT"
}, {
  "mappingType" : "discrete",
  "mappingColumn" : "EndArrow",
  "mappingColumnType" : "String",
  "visualProperty" : "EDGE_TARGET_ARROW_SHAPE",
  "map" : [ {
    "key" : "Arrow",
    "value" : "DELTA"
  }, {
    "key" : "mim-branching-right",
    "value" : "CROSS_OPEN_DELTA"
  }, {
    "key" : "mim-covalent-bond",
    "value" : "CROSS_DELTA"
  }, {
    "key" : "mim-branching-left",
    "value" : "CROSS_DELTA"
  }, {
    "key" : "mim-transcription-translation",
    "value" : "DELTA"
  }, {
    "key" : "mim-binding",
    "value" : "ARROW"
  }, {
    "key" : "Line",
    "value" : "NONE"
  }, {
    "key" : "mim-cleavage",
    "value" : "DIAMOND"
  }, {
    "key" : "mim-gap",
    "value" : "DELTA"
  }, {
    "key" : "mim-stimulation",
    "value" : "OPEN_DELTA"
  }, {
    "key" : "mim-catalysis",
    "value" : "OPEN_CIRCLE"
  }, {
    "key" : "mim-inhibition",
    "value" : "T"
  }, {
    "key" : "TBar",
    "value" : "T"
  }, {
    "key" : "mim-modification",
    "value" : "DELTA"
  }, {
    "key" : "mim-necessary-stimulation",
    "value" : "CROSS_OPEN_DELTA"
  }, {
    "key" : "mim-conversion",
    "value" : "DELTA"
  } ]
}, {
  "mappingType" : "passthrough",
  "mappingColumn" : "BorderThickness",
  "mappingColumnType" : "Double",
  "visualProperty" : "NODE_BORDER_WIDTH"
}, {
  "mappingType" : "passthrough",
  "mappingColumn" : "LabelFont",
  "mappingColumnType" : "String",
  "visualProperty" : "NODE_LABEL_FONT_FACE"
}, {
  "mappingType" : "passthrough",
  "mappingColumn" : "name",
  "mappingColumnType" : "String",
  "visualProperty" : "NODE_LABEL"
}, {
  "mappingType" : "passthrough",
  "mappingColumn" : "FillColor",
  "mappingColumnType" : "String",
  "visualProperty" : "NODE_FILL_COLOR"
}, {
  "mappingType" : "discrete",
  "mappingColumn" : "Transparent",
  "mappingColumnType" : "String",
  "visualProperty" : "NODE_TRANSPARENCY",
  "map" : [ {
    "key" : "true",
    "value" : "0"
  }, {
    "key" : "false",
    "value" : "255"
  } ]
}, {
  "mappingType" : "passthrough",
  "mappingColumn" : "Height",
  "mappingColumnType" : "Double",
  "visualProperty" : "NODE_HEIGHT"
}, {
  "mappingType" : "discrete",
  "mappingColumn" : "LineStyle",
  "mappingColumnType" : "String",
  "visualProperty" : "EDGE_LINE_TYPE",
  "map" : [ {
    "key" : "Dots",
    "value" : "DOT"
  }, {
    "key" : "Double",
    "value" : "PARALLEL_LINES"
  }, {
    "key" : "Solid",
    "value" : "SOLID"
  }, {
    "key" : "Dashed",
    "value" : "LONG_DASH"
  } ]
}, {
  "mappingType" : "discrete",
  "mappingColumn" : "ConnectorType",
  "mappingColumnType" : "String",
  "visualProperty" : "EDGE_TOOLTIP",
  "map" : [ {
    "key" : "Elbow",
    "value" : "Elbow"
  }, {
    "key" : "Curved",
    "value" : "Curved"
  }, {
    "key" : "Straight",
    "value" : "Straight"
  } ]
}, {
  "mappingType" : "discrete",
  "mappingColumn" : "StartArrow",
  "mappingColumnType" : "String",
  "visualProperty" : "EDGE_SOURCE_ARROW_SHAPE",
  "map" : [ {
    "key" : "Arrow",
    "value" : "DELTA"
  }, {
    "key" : "mim-branching-right",
    "value" : "CROSS_OPEN_DELTA"
  }, {
    "key" : "mim-covalent-bond",
    "value" : "CROSS_DELTA"
  }, {
    "key" : "mim-branching-left",
    "value" : "CROSS_DELTA"
  }, {
    "key" : "mim-transcription-translation",
    "value" : "DELTA"
  }, {
    "key" : "mim-binding",
    "value" : "ARROW"
  }, {
    "key" : "Line",
    "value" : "NONE"
  }, {
    "key" : "mim-cleavage",
    "value" : "DIAMOND"
  }, {
    "key" : "mim-gap",
    "value" : "DELTA"
  }, {
    "key" : "mim-stimulation",
    "value" : "OPEN_DELTA"
  }, {
    "key" : "mim-catalysis",
    "value" : "OPEN_CIRCLE"
  }, {
    "key" : "mim-inhibition",
    "value" : "T"
  }, {
    "key" : "TBar",
    "value" : "T"
  }, {
    "key" : "mim-modification",
    "value" : "DELTA"
  }, {
    "key" : "mim-necessary-stimulation",
    "value" : "CROSS_OPEN_DELTA"
  }, {
    "key" : "mim-conversion",
    "value" : "DELTA"
  } ]
}, {
  "mappingType" : "passthrough",
  "mappingColumn" : "LabelSize",
  "mappingColumnType" : "Double",
  "visualProperty" : "NODE_LABEL_FONT_SIZE"
}, {
  "mappingType" : "passthrough",
  "mappingColumn" : "Color",
  "mappingColumnType" : "String",
  "visualProperty" : "NODE_BORDER_PAINT"
} ]
Returning 'cyrest_get': [{'mappingType': 'passthrough', 'mappingColumn': 'Color', 'mappingColumnType': 'String', 'visualProperty': 'NODE_LABEL_COLOR'}, {'mappingType': 'passthrough', 'mappingColumn': 'LineThickness', 'mappingColumnType': 'Double', 'visualProperty': 'EDGE_WIDTH'}, {'mappingType': 'passthrough', 'mappingColumn': 'Width', 'mappingColumnType': 'Double', 'visualProperty': 'NODE_WIDTH'}, {'mappingType': 'discrete', 'mappingColumn': 'Shape', 'mappingColumnType': 'String', 'visualProperty': 'NODE_SHAPE', 'map': [{'key': 'Nucleus', 'value': 'Nucleus'}, {'key': 'Hexagon', 'value': 'HEXAGON'}, {'key': 'Ellipse', 'value': 'ELLIPSE'}, {'key': 'Brace', 'value': 'Brace'}, {'key': 'RoundRectangle', 'value': 'ROUND_RECTANGLE'}, {'key': 'Rectangle', 'value': 'RECTANGLE'}, {'key': 'Triangle', 'value': 'TRIANGLE'}, {'key': 'Octagon', 'value': 'OCTAGON'}, {'key': 'Sarcoplasmic Reticulum', 'value': 'Sarcoplasmic Reticulum'}, {'key': 'Endoplasmic Reticulum', 'value': 'Endoplasmic Reticulum'}, {'key': 'Golgi Apparatus', 'value': 'Golgi Apparatus'}, {'key': 'Mitochondria', 'value': 'Mitochondria'}, {'key': 'Arc', 'value': 'Arc'}, {'key': 'Oval', 'value': 'ELLIPSE'}, {'key': 'Pentagon', 'value': 'HEXAGON'}, {'key': 'Organelle', 'value': 'ROUND_RECTANGLE'}, {'key': 'Cell', 'value': 'Cell'}, {'key': 'RoundedRectangle', 'value': 'ROUND_RECTANGLE'}]}, {'mappingType': 'passthrough', 'mappingColumn': 'Color', 'mappingColumnType': 'String', 'visualProperty': 'EDGE_UNSELECTED_PAINT'}, {'mappingType': 'discrete', 'mappingColumn': 'EndArrow', 'mappingColumnType': 'String', 'visualProperty': 'EDGE_TARGET_ARROW_SHAPE', 'map': [{'key': 'Arrow', 'value': 'DELTA'}, {'key': 'mim-branching-right', 'value': 'CROSS_OPEN_DELTA'}, {'key': 'mim-covalent-bond', 'value': 'CROSS_DELTA'}, {'key': 'mim-branching-left', 'value': 'CROSS_DELTA'}, {'key': 'mim-transcription-translation', 'value': 'DELTA'}, {'key': 'mim-binding', 'value': 'ARROW'}, {'key': 'Line', 'value': 'NONE'}, {'key': 'mim-cleavage', 'value': 'DIAMOND'}, {'key': 'mim-gap', 'value': 'DELTA'}, {'key': 'mim-stimulation', 'value': 'OPEN_DELTA'}, {'key': 'mim-catalysis', 'value': 'OPEN_CIRCLE'}, {'key': 'mim-inhibition', 'value': 'T'}, {'key': 'TBar', 'value': 'T'}, {'key': 'mim-modification', 'value': 'DELTA'}, {'key': 'mim-necessary-stimulation', 'value': 'CROSS_OPEN_DELTA'}, {'key': 'mim-conversion', 'value': 'DELTA'}]}, {'mappingType': 'passthrough', 'mappingColumn': 'BorderThickness', 'mappingColumnType': 'Double', 'visualProperty': 'NODE_BORDER_WIDTH'}, {'mappingType': 'passthrough', 'mappingColumn': 'LabelFont', 'mappingColumnType': 'String', 'visualProperty': 'NODE_LABEL_FONT_FACE'}, {'mappingType': 'passthrough', 'mappingColumn': 'name', 'mappingColumnType': 'String', 'visualProperty': 'NODE_LABEL'}, {'mappingType': 'passthrough', 'mappingColumn': 'FillColor', 'mappingColumnType': 'String', 'visualProperty': 'NODE_FILL_COLOR'}, {'mappingType': 'discrete', 'mappingColumn': 'Transparent', 'mappingColumnType': 'String', 'visualProperty': 'NODE_TRANSPARENCY', 'map': [{'key': 'true', 'value': '0'}, {'key': 'false', 'value': '255'}]}, {'mappingType': 'passthrough', 'mappingColumn': 'Height', 'mappingColumnType': 'Double', 'visualProperty': 'NODE_HEIGHT'}, {'mappingType': 'discrete', 'mappingColumn': 'LineStyle', 'mappingColumnType': 'String', 'visualProperty': 'EDGE_LINE_TYPE', 'map': [{'key': 'Dots', 'value': 'DOT'}, {'key': 'Double', 'value': 'PARALLEL_LINES'}, {'key': 'Solid', 'value': 'SOLID'}, {'key': 'Dashed', 'value': 'LONG_DASH'}]}, {'mappingType': 'discrete', 'mappingColumn': 'ConnectorType', 'mappingColumnType': 'String', 'visualProperty': 'EDGE_TOOLTIP', 'map': [{'key': 'Elbow', 'value': 'Elbow'}, {'key': 'Curved', 'value': 'Curved'}, {'key': 'Straight', 'value': 'Straight'}]}, {'mappingType': 'discrete', 'mappingColumn': 'StartArrow', 'mappingColumnType': 'String', 'visualProperty': 'EDGE_SOURCE_ARROW_SHAPE', 'map': [{'key': 'Arrow', 'value': 'DELTA'}, {'key': 'mim-branching-right', 'value': 'CROSS_OPEN_DELTA'}, {'key': 'mim-covalent-bond', 'value': 'CROSS_DELTA'}, {'key': 'mim-branching-left', 'value': 'CROSS_DELTA'}, {'key': 'mim-transcription-translation', 'value': 'DELTA'}, {'key': 'mim-binding', 'value': 'ARROW'}, {'key': 'Line', 'value': 'NONE'}, {'key': 'mim-cleavage', 'value': 'DIAMOND'}, {'key': 'mim-gap', 'value': 'DELTA'}, {'key': 'mim-stimulation', 'value': 'OPEN_DELTA'}, {'key': 'mim-catalysis', 'value': 'OPEN_CIRCLE'}, {'key': 'mim-inhibition', 'value': 'T'}, {'key': 'TBar', 'value': 'T'}, {'key': 'mim-modification', 'value': 'DELTA'}, {'key': 'mim-necessary-stimulation', 'value': 'CROSS_OPEN_DELTA'}, {'key': 'mim-conversion', 'value': 'DELTA'}]}, {'mappingType': 'passthrough', 'mappingColumn': 'LabelSize', 'mappingColumnType': 'Double', 'visualProperty': 'NODE_LABEL_FONT_SIZE'}, {'mappingType': 'passthrough', 'mappingColumn': 'Color', 'mappingColumnType': 'String', 'visualProperty': 'NODE_BORDER_PAINT'}]
Calling cyrest_put('styles/WikiPathways/mappings/NODE_FILL_COLOR', body=[{'mappingType': 'continuous', 'mappingColumn': 'logFC', 'mappingColumnType': 'Double', 'visualProperty': 'NODE_FILL_COLOR', 'points': [{'value': -1, 'lesser': '#0000FF', 'equal': '#0000FF', 'greater': '#0000FF'}, {'value': 0, 'lesser': '#FFFFFF', 'equal': '#FFFFFF', 'greater': '#FFFFFF'}, {'value': 1, 'lesser': '#FF0000', 'equal': '#FF0000', 'greater': '#FF0000'}]}], base_url='http://127.0.0.1:1234/v1', require_json=False)
HTTP PUT(http://127.0.0.1:1234/v1/styles/WikiPathways/mappings/NODE_FILL_COLOR), json: [{'mappingType': 'continuous', 'mappingColumn': 'logFC', 'mappingColumnType': 'Double', 'visualProperty': 'NODE_FILL_COLOR', 'points': [{'value': -1, 'lesser': '#0000FF', 'equal': '#0000FF', 'greater': '#0000FF'}, {'value': 0, 'lesser': '#FFFFFF', 'equal': '#FFFFFF', 'greater': '#FFFFFF'}, {'value': 1, 'lesser': '#FF0000', 'equal': '#FF0000', 'greater': '#FF0000'}]}]
OK[200], content: 
Returning 'cyrest_put': ''
Returning 'update_style_mapping': ''
Returning 'set_node_color_mapping': ''
--------------------
Calling create_column_filter('sig_gene_list', 'PValue', 0.05, 'LESS_THAN')
Calling set_current_network(None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None)
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 78
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 78}]
Returning 'get_network_suid': 78
Calling commands_post('network set current network="SUID:78"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/set%20current), json: {'network': 'SUID:78'}
OK[200], content: {
 "data": {},
 "errors":[]
}
Returning 'commands_post': {}
Returning 'set_current_network': {}
Calling get_table_column_names('node', base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 78
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 78}]
Returning 'get_network_suid': 78
Calling cyrest_get('networks/78/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"IsGPMLShape","type":"Boolean","immutable":false,"primaryKey":false},{"name":"Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Height","type":"Double","immutable":false,"primaryKey":false},{"name":"FillColor","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"LabelFont","type":"String","immutable":false,"primaryKey":false},{"name":"LabelSize","type":"Double","immutable":false,"primaryKey":false},{"name":"Transparent","type":"String","immutable":false,"primaryKey":false},{"name":"BorderThickness","type":"Double","immutable":false,"primaryKey":false},{"name":"BorderStyle","type":"String","immutable":false,"primaryKey":false},{"name":"Shape","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"Unnamed: 0","type":"String","immutable":false,"primaryKey":false},{"name":"logFC","type":"Double","immutable":false,"primaryKey":false},{"name":"logCPM","type":"Double","immutable":false,"primaryKey":false},{"name":"F","type":"Double","immutable":false,"primaryKey":false},{"name":"PValue","type":"Double","immutable":false,"primaryKey":false},{"name":"FDR","type":"Double","immutable":false,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'IsGPMLShape', 'type': 'Boolean', 'immutable': False, 'primaryKey': False}, {'name': 'Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Height', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FillColor', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'LabelFont', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'LabelSize', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Transparent', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'BorderThickness', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'BorderStyle', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Shape', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'Unnamed: 0', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'logFC', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'logCPM', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'F', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'PValue', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FDR', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
Returning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'GraphID', 'XrefId', 'XrefDatasource', 'Type', 'IsGPMLShape', 'Width', 'Height', 'FillColor', 'Color', 'LabelFont', 'LabelSize', 'Transparent', 'BorderThickness', 'BorderStyle', 'Shape', 'Ensembl', 'Unnamed: 0', 'logFC', 'logCPM', 'F', 'PValue', 'FDR']
Calling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/version)
OK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.8.2"}
Returning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2'}
Returning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2', 'automationAPIVersion': '1.2.0', 'py4cytoscapeVersion': '0.0.9'}
Calling cyrest_post('commands/filter/create', body={'name': 'sig_gene_list', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": 0.05, "columnName": "PValue", "predicate": "LESS_THAN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}'}, base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/filter/create), json: {'name': 'sig_gene_list', 'json': '{"id": "ColumnFilter", "parameters": {"criterion": 0.05, "columnName": "PValue", "predicate": "LESS_THAN", "caseSensitive": false, "anyMatch": true, "type": "nodes"}}'}
OK[200], content: {
 "data": {},
 "errors":[]
}
Returning 'cyrest_post': {'data': {}, 'errors': []}
Calling get_node_count(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 78
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 78}]
Returning 'get_network_suid': 78
Calling cyrest_get('networks/78/nodes/count', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/nodes/count)
OK[200], content: {"count":196}
Returning 'cyrest_get': {'count': 196}
Returning 'get_node_count': 196
Calling get_edge_count(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 78
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 78}]
Returning 'get_network_suid': 78
Calling cyrest_get('networks/78/edges/count', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/edges/count)
OK[200], content: {"count":7}
Returning 'cyrest_get': {'count': 7}
Returning 'get_edge_count': 7
Calling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/version)
OK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.8.2"}
Returning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2'}
Returning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.8.2', 'automationAPIVersion': '1.2.0', 'py4cytoscapeVersion': '0.0.9'}
Calling get_selected_nodes(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 78
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 78}]
Returning 'get_network_suid': 78
Calling get_selected_node_count(78, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(78, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [78]
Returning 'cyrest_get': [78]
Returning 'get_network_suid': 78
Calling cyrest_get('networks/78/nodes', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/nodes), params: {'column': 'selected', 'query': 'true'}
OK[200], content: [93,104,106,109,118,123,127,128,133,135,136,140,148,154,159,161,163,168,176,177,179,180,190,193,201,207,208,225,235,236,237,238,240,243,251]
Returning 'cyrest_get': [93, 104, 106, 109, 118, 123, 127, 128, 133, 135, 136, 140, 148, 154, 159, 161, 163, 168, 176, 177, 179, 180, 190, 193, 201, 207, 208, 225, 235, 236, 237, 238, 240, 243, 251]
Returning 'get_selected_node_count': 35
Calling cyrest_get('networks/78/nodes', parameters={'column': 'selected', 'query': 'true'})
HTTP GET(http://127.0.0.1:1234/v1/networks/78/nodes), params: {'column': 'selected', 'query': 'true'}
OK[200], content: [93,104,106,109,118,123,127,128,133,135,136,140,148,154,159,161,163,168,176,177,179,180,190,193,201,207,208,225,235,236,237,238,240,243,251]
Returning 'cyrest_get': [93, 104, 106, 109, 118, 123, 127, 128, 133, 135, 136, 140, 148, 154, 159, 161, 163, 168, 176, 177, 179, 180, 190, 193, 201, 207, 208, 225, 235, 236, 237, 238, 240, 243, 251]
Calling get_table_columns('node', ['name'], 'default', 78, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(78, 'http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [78]
Returning 'cyrest_get': [78]
Returning 'get_network_suid': 78
Calling get_table_column_types('node', namespace='default', network=78, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(78, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [78]
Returning 'cyrest_get': [78]
Returning 'get_network_suid': 78
Calling cyrest_get('networks/78/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"IsGPMLShape","type":"Boolean","immutable":false,"primaryKey":false},{"name":"Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Height","type":"Double","immutable":false,"primaryKey":false},{"name":"FillColor","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"LabelFont","type":"String","immutable":false,"primaryKey":false},{"name":"LabelSize","type":"Double","immutable":false,"primaryKey":false},{"name":"Transparent","type":"String","immutable":false,"primaryKey":false},{"name":"BorderThickness","type":"Double","immutable":false,"primaryKey":false},{"name":"BorderStyle","type":"String","immutable":false,"primaryKey":false},{"name":"Shape","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"Unnamed: 0","type":"String","immutable":false,"primaryKey":false},{"name":"logFC","type":"Double","immutable":false,"primaryKey":false},{"name":"logCPM","type":"Double","immutable":false,"primaryKey":false},{"name":"F","type":"Double","immutable":false,"primaryKey":false},{"name":"PValue","type":"Double","immutable":false,"primaryKey":false},{"name":"FDR","type":"Double","immutable":false,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'IsGPMLShape', 'type': 'Boolean', 'immutable': False, 'primaryKey': False}, {'name': 'Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Height', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FillColor', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'LabelFont', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'LabelSize', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Transparent', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'BorderThickness', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'BorderStyle', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Shape', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'Unnamed: 0', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'logFC', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'logCPM', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'F', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'PValue', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FDR', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
Returning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'GraphID': 'String', 'XrefId': 'String', 'XrefDatasource': 'String', 'Type': 'String', 'IsGPMLShape': 'Boolean', 'Width': 'Double', 'Height': 'Double', 'FillColor': 'String', 'Color': 'String', 'LabelFont': 'String', 'LabelSize': 'Double', 'Transparent': 'String', 'BorderThickness': 'Double', 'BorderStyle': 'String', 'Shape': 'String', 'Ensembl': 'String', 'Unnamed: 0': 'String', 'logFC': 'Double', 'logCPM': 'Double', 'F': 'Double', 'PValue': 'Double', 'FDR': 'Double'}
Calling cyrest_get('networks/78/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/tables/defaultnode/columns/SUID)
OK[200], content: {"name":"SUID","values":[89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284]}
Returning 'cyrest_get': {'name': 'SUID', 'values': [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284]}
Calling cyrest_get('networks/78/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/tables/defaultnode/columns/name)
OK[200], content: {"name":"name","values":["IL4","IFNG","IFNB1","SPP1","IL23A","IFNA16","IL24","IFNA17","IFNK","IFNL2","IL12B","IFNA8","CCL1","IL13","IFNA13","IL36A","IFNL3","CXCL1","IL21","IL12B","IL15","IFNA2","IL2","IL24","TSLP","IL1F10","IL19","IL36RN","OSM","TNF","IL9","IL26","IFNL2","IL10","IL6","IL25","IFNA14","IL7","CSF1","IL1A","IFNL1","IFNA7","IL20","EPO","CCL28","IFNW1","LIF","CSF2","IL3","IL12A","IL27","IL1RN","IFNA1","IL11","IL22","IFNA5","IL31","IL5","CTF1","IL1B","EBI3","IL37","IFNA4","IFNA6","IL18","IL33","CNTF","IL2","IL-8","MMP3","CSF3","CCL2","CSF2","ROS","CXCL10","TNF alpha","IL-12","NF-kappa-B  ","IL-1 Beta","MMP1","IL-6","IL-6","IL-1 Beta","IL-8","CCL2","TNF alpha","IL-12","VEGFA","MMP9","TGFB1","CXCL1","CSF1","AREG","IL17F","IL17A","IL22","CXCL9","IFNG","IFNA1","Prostaglandin E2","Prostaglandin I2","IL15","IL2","IL36B","IL36G","Lymphotoxin-alpha","TNFSF13B","TNFSF13","IL17A","IL17B","IL17D","IL17F","IL17C","IFNA10","IFNA21","IL12A","IFNL3","IFNL1","CSF3","CSF2","CCL2","CCL3","CCL3L3","CCL4","CCL4L2","CCL5","CCL13","CCL7","CCL8","CCL11","CCL14","CCL15","CCL16","CCL17","CCL18","CCL19","CCL20","CCL21","CCL22","CCL23","CCL24","CCL25","CCL27","CCL26","XCL1","XCL2","CXCL2","CXCL3","CXCL5","CXCL6","PPBP","CXCL10","CXCL11","CXCL12","CXCL16","CXCL17","CX3CL1","PF4","PF4V1","CXCL8","CXCL9","CXCL13","CXCL14","","","",null,null,null,null,null,null,null,null,"Colony stimulating factors","Shared IL-2 \nchain (CD122)","Type I IFN","IL-1","C chemokine/receptor family","CX3C chemokine/receptor family","CC chemokine/receptor family","Type III IFN","IL-17","Common  chain \nreceptor ligands","Adaptive immunity","CXC chemokine/receptor family","Cytokines","TNF","Shared receptors","Type II IFN","Common  chain (CD131) \nreceptor ligands","Cytokine storm","Pro-inflammatory signalling","Anti-inflammatory signalling","IL-6","Chemokines"]}
Returning 'cyrest_get': {'name': 'name', 'values': ['IL4', 'IFNG', 'IFNB1', 'SPP1', 'IL23A', 'IFNA16', 'IL24', 'IFNA17', 'IFNK', 'IFNL2', 'IL12B', 'IFNA8', 'CCL1', 'IL13', 'IFNA13', 'IL36A', 'IFNL3', 'CXCL1', 'IL21', 'IL12B', 'IL15', 'IFNA2', 'IL2', 'IL24', 'TSLP', 'IL1F10', 'IL19', 'IL36RN', 'OSM', 'TNF', 'IL9', 'IL26', 'IFNL2', 'IL10', 'IL6', 'IL25', 'IFNA14', 'IL7', 'CSF1', 'IL1A', 'IFNL1', 'IFNA7', 'IL20', 'EPO', 'CCL28', 'IFNW1', 'LIF', 'CSF2', 'IL3', 'IL12A', 'IL27', 'IL1RN', 'IFNA1', 'IL11', 'IL22', 'IFNA5', 'IL31', 'IL5', 'CTF1', 'IL1B', 'EBI3', 'IL37', 'IFNA4', 'IFNA6', 'IL18', 'IL33', 'CNTF', 'IL2', 'IL-8', 'MMP3', 'CSF3', 'CCL2', 'CSF2', 'ROS', 'CXCL10', 'TNF alpha', 'IL-12', 'NF-kappa-B  ', 'IL-1 Beta', 'MMP1', 'IL-6', 'IL-6', 'IL-1 Beta', 'IL-8', 'CCL2', 'TNF alpha', 'IL-12', 'VEGFA', 'MMP9', 'TGFB1', 'CXCL1', 'CSF1', 'AREG', 'IL17F', 'IL17A', 'IL22', 'CXCL9', 'IFNG', 'IFNA1', 'Prostaglandin E2', 'Prostaglandin I2', 'IL15', 'IL2', 'IL36B', 'IL36G', 'Lymphotoxin-alpha', 'TNFSF13B', 'TNFSF13', 'IL17A', 'IL17B', 'IL17D', 'IL17F', 'IL17C', 'IFNA10', 'IFNA21', 'IL12A', 'IFNL3', 'IFNL1', 'CSF3', 'CSF2', 'CCL2', 'CCL3', 'CCL3L3', 'CCL4', 'CCL4L2', 'CCL5', 'CCL13', 'CCL7', 'CCL8', 'CCL11', 'CCL14', 'CCL15', 'CCL16', 'CCL17', 'CCL18', 'CCL19', 'CCL20', 'CCL21', 'CCL22', 'CCL23', 'CCL24', 'CCL25', 'CCL27', 'CCL26', 'XCL1', 'XCL2', 'CXCL2', 'CXCL3', 'CXCL5', 'CXCL6', 'PPBP', 'CXCL10', 'CXCL11', 'CXCL12', 'CXCL16', 'CXCL17', 'CX3CL1', 'PF4', 'PF4V1', 'CXCL8', 'CXCL9', 'CXCL13', 'CXCL14', '', '', '', None, None, None, None, None, None, None, None, 'Colony stimulating factors', 'Shared IL-2 \nchain (CD122)', 'Type I IFN', 'IL-1', 'C chemokine/receptor family', 'CX3C chemokine/receptor family', 'CC chemokine/receptor family', 'Type III IFN', 'IL-17', 'Common  chain \nreceptor ligands', 'Adaptive immunity', 'CXC chemokine/receptor family', 'Cytokines', 'TNF', 'Shared receptors', 'Type II IFN', 'Common  chain (CD131) \nreceptor ligands', 'Cytokine storm', 'Pro-inflammatory signalling', 'Anti-inflammatory signalling', 'IL-6', 'Chemokines']}
Returning 'get_table_columns':                              name
89                            IL4
90                           IFNG
91                          IFNB1
92                           SPP1
93                          IL23A
..                            ...
280                Cytokine storm
281   Pro-inflammatory signalling
282  Anti-inflammatory signalling
283                          IL-6
284                    Chemokines

[196 rows x 1 columns]
Returning 'get_selected_nodes': ['IL23A', 'IL36A', 'CXCL1', 'IL15', 'TNF', 'IL6', 'CSF1', 'IL1A', 'CCL28', 'LIF', 'CSF2', 'IL1RN', 'IL1B', 'IL33', 'CSF3', 'CSF2', 'CXCL10', 'MMP1', 'VEGFA', 'MMP9', 'CXCL1', 'CSF1', 'IL15', 'IL36G', 'IL17C', 'CSF3', 'CSF2', 'CCL20', 'CXCL2', 'CXCL3', 'CXCL5', 'CXCL6', 'CXCL10', 'CXCL16', 'CXCL14']
Calling get_selected_edges(network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 78
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 78}]
Returning 'get_network_suid': 78
Calling get_selected_edge_count(78, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(78, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [78]
Returning 'cyrest_get': [78]
Returning 'get_network_suid': 78
Calling cyrest_get('networks/78/edges', parameters={'column': 'selected', 'query': 'true'}, base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/edges), params: {'column': 'selected', 'query': 'true'}
OK[200], content: []
Returning 'cyrest_get': []
Returning 'get_selected_edge_count': 0
Returning 'get_selected_edges': None
Returning 'create_column_filter': {'nodes': ['IL23A', 'IL36A', 'CXCL1', 'IL15', 'TNF', 'IL6', 'CSF1', 'IL1A', 'CCL28', 'LIF', 'CSF2', 'IL1RN', 'IL1B', 'IL33', 'CSF3', 'CSF2', 'CXCL10', 'MMP1', 'VEGFA', 'MMP9', 'CXCL1', 'CSF1', 'IL15', 'IL36G', 'IL17C', 'CSF3', 'CSF2', 'CCL20', 'CXCL2', 'CXCL3', 'CXCL5', 'CXCL6', 'CXCL10', 'CXCL16', 'CXCL14'], 'edges': None}
--------------------
Calling set_node_border_color_bypass(['IL23A', 'IL36A', 'CXCL1', 'IL15', 'TNF', 'IL6', 'CSF1', 'IL1A', 'CCL28', 'LIF', 'CSF2', 'IL1RN', 'IL1B', 'IL33', 'CSF3', 'CSF2', 'CXCL10', 'MMP1', 'VEGFA', 'MMP9', 'CXCL1', 'CSF1', 'IL15', 'IL36G', 'IL17C', 'CSF3', 'CSF2', 'CCL20', 'CXCL2', 'CXCL3', 'CXCL5', 'CXCL6', 'CXCL10', 'CXCL16', 'CXCL14'], '#90ee90')
Calling set_node_property_bypass(['IL23A', 'IL36A', 'CXCL1', 'IL15', 'TNF', 'IL6', 'CSF1', 'IL1A', 'CCL28', 'LIF', 'CSF2', 'IL1RN', 'IL1B', 'IL33', 'CSF3', 'CSF2', 'CXCL10', 'MMP1', 'VEGFA', 'MMP9', 'CXCL1', 'CSF1', 'IL15', 'IL36G', 'IL17C', 'CSF3', 'CSF2', 'CCL20', 'CXCL2', 'CXCL3', 'CXCL5', 'CXCL6', 'CXCL10', 'CXCL16', 'CXCL14'], ['#90ee90'], 'NODE_BORDER_PAINT', network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 78
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 78}]
Returning 'get_network_suid': 78
Calling get_network_views(78, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(78, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [78]
Returning 'cyrest_get': [78]
Returning 'get_network_suid': 78
Calling cyrest_get('networks/78/views', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/views)
OK[200], content: [88]
Returning 'cyrest_get': [88]
Returning 'get_network_views': [88]
Calling get_table_columns('node', ['name'], 'default', None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, 'http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 78
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 78}]
Returning 'get_network_suid': 78
Calling get_table_column_types('node', namespace='default', network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 78
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 78}]
Returning 'get_network_suid': 78
Calling cyrest_get('networks/78/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"IsGPMLShape","type":"Boolean","immutable":false,"primaryKey":false},{"name":"Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Height","type":"Double","immutable":false,"primaryKey":false},{"name":"FillColor","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"LabelFont","type":"String","immutable":false,"primaryKey":false},{"name":"LabelSize","type":"Double","immutable":false,"primaryKey":false},{"name":"Transparent","type":"String","immutable":false,"primaryKey":false},{"name":"BorderThickness","type":"Double","immutable":false,"primaryKey":false},{"name":"BorderStyle","type":"String","immutable":false,"primaryKey":false},{"name":"Shape","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"Unnamed: 0","type":"String","immutable":false,"primaryKey":false},{"name":"logFC","type":"Double","immutable":false,"primaryKey":false},{"name":"logCPM","type":"Double","immutable":false,"primaryKey":false},{"name":"F","type":"Double","immutable":false,"primaryKey":false},{"name":"PValue","type":"Double","immutable":false,"primaryKey":false},{"name":"FDR","type":"Double","immutable":false,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'IsGPMLShape', 'type': 'Boolean', 'immutable': False, 'primaryKey': False}, {'name': 'Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Height', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FillColor', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'LabelFont', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'LabelSize', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Transparent', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'BorderThickness', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'BorderStyle', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Shape', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'Unnamed: 0', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'logFC', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'logCPM', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'F', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'PValue', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FDR', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
Returning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'GraphID': 'String', 'XrefId': 'String', 'XrefDatasource': 'String', 'Type': 'String', 'IsGPMLShape': 'Boolean', 'Width': 'Double', 'Height': 'Double', 'FillColor': 'String', 'Color': 'String', 'LabelFont': 'String', 'LabelSize': 'Double', 'Transparent': 'String', 'BorderThickness': 'Double', 'BorderStyle': 'String', 'Shape': 'String', 'Ensembl': 'String', 'Unnamed: 0': 'String', 'logFC': 'Double', 'logCPM': 'Double', 'F': 'Double', 'PValue': 'Double', 'FDR': 'Double'}
Calling cyrest_get('networks/78/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/tables/defaultnode/columns/SUID)
OK[200], content: {"name":"SUID","values":[89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284]}
Returning 'cyrest_get': {'name': 'SUID', 'values': [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284]}
Calling cyrest_get('networks/78/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/tables/defaultnode/columns/name)
OK[200], content: {"name":"name","values":["IL4","IFNG","IFNB1","SPP1","IL23A","IFNA16","IL24","IFNA17","IFNK","IFNL2","IL12B","IFNA8","CCL1","IL13","IFNA13","IL36A","IFNL3","CXCL1","IL21","IL12B","IL15","IFNA2","IL2","IL24","TSLP","IL1F10","IL19","IL36RN","OSM","TNF","IL9","IL26","IFNL2","IL10","IL6","IL25","IFNA14","IL7","CSF1","IL1A","IFNL1","IFNA7","IL20","EPO","CCL28","IFNW1","LIF","CSF2","IL3","IL12A","IL27","IL1RN","IFNA1","IL11","IL22","IFNA5","IL31","IL5","CTF1","IL1B","EBI3","IL37","IFNA4","IFNA6","IL18","IL33","CNTF","IL2","IL-8","MMP3","CSF3","CCL2","CSF2","ROS","CXCL10","TNF alpha","IL-12","NF-kappa-B  ","IL-1 Beta","MMP1","IL-6","IL-6","IL-1 Beta","IL-8","CCL2","TNF alpha","IL-12","VEGFA","MMP9","TGFB1","CXCL1","CSF1","AREG","IL17F","IL17A","IL22","CXCL9","IFNG","IFNA1","Prostaglandin E2","Prostaglandin I2","IL15","IL2","IL36B","IL36G","Lymphotoxin-alpha","TNFSF13B","TNFSF13","IL17A","IL17B","IL17D","IL17F","IL17C","IFNA10","IFNA21","IL12A","IFNL3","IFNL1","CSF3","CSF2","CCL2","CCL3","CCL3L3","CCL4","CCL4L2","CCL5","CCL13","CCL7","CCL8","CCL11","CCL14","CCL15","CCL16","CCL17","CCL18","CCL19","CCL20","CCL21","CCL22","CCL23","CCL24","CCL25","CCL27","CCL26","XCL1","XCL2","CXCL2","CXCL3","CXCL5","CXCL6","PPBP","CXCL10","CXCL11","CXCL12","CXCL16","CXCL17","CX3CL1","PF4","PF4V1","CXCL8","CXCL9","CXCL13","CXCL14","","","",null,null,null,null,null,null,null,null,"Colony stimulating factors","Shared IL-2 \nchain (CD122)","Type I IFN","IL-1","C chemokine/receptor family","CX3C chemokine/receptor family","CC chemokine/receptor family","Type III IFN","IL-17","Common  chain \nreceptor ligands","Adaptive immunity","CXC chemokine/receptor family","Cytokines","TNF","Shared receptors","Type II IFN","Common  chain (CD131) \nreceptor ligands","Cytokine storm","Pro-inflammatory signalling","Anti-inflammatory signalling","IL-6","Chemokines"]}
Returning 'cyrest_get': {'name': 'name', 'values': ['IL4', 'IFNG', 'IFNB1', 'SPP1', 'IL23A', 'IFNA16', 'IL24', 'IFNA17', 'IFNK', 'IFNL2', 'IL12B', 'IFNA8', 'CCL1', 'IL13', 'IFNA13', 'IL36A', 'IFNL3', 'CXCL1', 'IL21', 'IL12B', 'IL15', 'IFNA2', 'IL2', 'IL24', 'TSLP', 'IL1F10', 'IL19', 'IL36RN', 'OSM', 'TNF', 'IL9', 'IL26', 'IFNL2', 'IL10', 'IL6', 'IL25', 'IFNA14', 'IL7', 'CSF1', 'IL1A', 'IFNL1', 'IFNA7', 'IL20', 'EPO', 'CCL28', 'IFNW1', 'LIF', 'CSF2', 'IL3', 'IL12A', 'IL27', 'IL1RN', 'IFNA1', 'IL11', 'IL22', 'IFNA5', 'IL31', 'IL5', 'CTF1', 'IL1B', 'EBI3', 'IL37', 'IFNA4', 'IFNA6', 'IL18', 'IL33', 'CNTF', 'IL2', 'IL-8', 'MMP3', 'CSF3', 'CCL2', 'CSF2', 'ROS', 'CXCL10', 'TNF alpha', 'IL-12', 'NF-kappa-B  ', 'IL-1 Beta', 'MMP1', 'IL-6', 'IL-6', 'IL-1 Beta', 'IL-8', 'CCL2', 'TNF alpha', 'IL-12', 'VEGFA', 'MMP9', 'TGFB1', 'CXCL1', 'CSF1', 'AREG', 'IL17F', 'IL17A', 'IL22', 'CXCL9', 'IFNG', 'IFNA1', 'Prostaglandin E2', 'Prostaglandin I2', 'IL15', 'IL2', 'IL36B', 'IL36G', 'Lymphotoxin-alpha', 'TNFSF13B', 'TNFSF13', 'IL17A', 'IL17B', 'IL17D', 'IL17F', 'IL17C', 'IFNA10', 'IFNA21', 'IL12A', 'IFNL3', 'IFNL1', 'CSF3', 'CSF2', 'CCL2', 'CCL3', 'CCL3L3', 'CCL4', 'CCL4L2', 'CCL5', 'CCL13', 'CCL7', 'CCL8', 'CCL11', 'CCL14', 'CCL15', 'CCL16', 'CCL17', 'CCL18', 'CCL19', 'CCL20', 'CCL21', 'CCL22', 'CCL23', 'CCL24', 'CCL25', 'CCL27', 'CCL26', 'XCL1', 'XCL2', 'CXCL2', 'CXCL3', 'CXCL5', 'CXCL6', 'PPBP', 'CXCL10', 'CXCL11', 'CXCL12', 'CXCL16', 'CXCL17', 'CX3CL1', 'PF4', 'PF4V1', 'CXCL8', 'CXCL9', 'CXCL13', 'CXCL14', '', '', '', None, None, None, None, None, None, None, None, 'Colony stimulating factors', 'Shared IL-2 \nchain (CD122)', 'Type I IFN', 'IL-1', 'C chemokine/receptor family', 'CX3C chemokine/receptor family', 'CC chemokine/receptor family', 'Type III IFN', 'IL-17', 'Common  chain \nreceptor ligands', 'Adaptive immunity', 'CXC chemokine/receptor family', 'Cytokines', 'TNF', 'Shared receptors', 'Type II IFN', 'Common  chain (CD131) \nreceptor ligands', 'Cytokine storm', 'Pro-inflammatory signalling', 'Anti-inflammatory signalling', 'IL-6', 'Chemokines']}
Returning 'get_table_columns':                              name
89                            IL4
90                           IFNG
91                          IFNB1
92                           SPP1
93                          IL23A
..                            ...
280                Cytokine storm
281   Pro-inflammatory signalling
282  Anti-inflammatory signalling
283                          IL-6
284                    Chemokines

[196 rows x 1 columns]
Calling cyrest_put('networks/78/views/88/nodes', parameters={'bypass': True}, body=[{'SUID': '93', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '104', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '106', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '109', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '118', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '123', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '127', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '128', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '133', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '135', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '136', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '140', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '148', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '154', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '159', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '161', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '163', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '168', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '176', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '177', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '179', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '180', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '190', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '193', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '201', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '207', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '208', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '225', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '235', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '236', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '237', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '238', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '240', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '243', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '251', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}], base_url='http://127.0.0.1:1234/v1', require_json=False)
HTTP PUT(http://127.0.0.1:1234/v1/networks/78/views/88/nodes), params: {'bypass': True}, json: [{'SUID': '93', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '104', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '106', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '109', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '118', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '123', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '127', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '128', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '133', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '135', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '136', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '140', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '148', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '154', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '159', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '161', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '163', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '168', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '176', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '177', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '179', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '180', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '190', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '193', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '201', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '207', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '208', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '225', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '235', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '236', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '237', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '238', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '240', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '243', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}, {'SUID': '251', 'view': [{'visualProperty': 'NODE_BORDER_PAINT', 'value': '#90ee90'}]}]
OK[200], content: 
Returning 'cyrest_put': ''
Returning 'set_node_property_bypass': ''
Returning 'set_node_border_color_bypass': ''
--------------------
Calling set_node_border_width_bypass(['IL23A', 'IL36A', 'CXCL1', 'IL15', 'TNF', 'IL6', 'CSF1', 'IL1A', 'CCL28', 'LIF', 'CSF2', 'IL1RN', 'IL1B', 'IL33', 'CSF3', 'CSF2', 'CXCL10', 'MMP1', 'VEGFA', 'MMP9', 'CXCL1', 'CSF1', 'IL15', 'IL36G', 'IL17C', 'CSF3', 'CSF2', 'CCL20', 'CXCL2', 'CXCL3', 'CXCL5', 'CXCL6', 'CXCL10', 'CXCL16', 'CXCL14'], 10)
Calling set_node_property_bypass(['IL23A', 'IL36A', 'CXCL1', 'IL15', 'TNF', 'IL6', 'CSF1', 'IL1A', 'CCL28', 'LIF', 'CSF2', 'IL1RN', 'IL1B', 'IL33', 'CSF3', 'CSF2', 'CXCL10', 'MMP1', 'VEGFA', 'MMP9', 'CXCL1', 'CSF1', 'IL15', 'IL36G', 'IL17C', 'CSF3', 'CSF2', 'CCL20', 'CXCL2', 'CXCL3', 'CXCL5', 'CXCL6', 'CXCL10', 'CXCL16', 'CXCL14'], [10], 'NODE_BORDER_WIDTH', network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 78
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 78}]
Returning 'get_network_suid': 78
Calling get_network_views(78, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(78, base_url='http://127.0.0.1:1234/v1')
Calling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks)
OK[200], content: [78]
Returning 'cyrest_get': [78]
Returning 'get_network_suid': 78
Calling cyrest_get('networks/78/views', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/views)
OK[200], content: [88]
Returning 'cyrest_get': [88]
Returning 'get_network_views': [88]
Calling get_table_columns('node', ['name'], 'default', None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, 'http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 78
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 78}]
Returning 'get_network_suid': 78
Calling get_table_column_types('node', namespace='default', network=None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 78
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 78}]
Returning 'get_network_suid': 78
Calling cyrest_get('networks/78/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/tables/defaultnode/columns)
OK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"GraphID","type":"String","immutable":false,"primaryKey":false},{"name":"XrefId","type":"String","immutable":false,"primaryKey":false},{"name":"XrefDatasource","type":"String","immutable":false,"primaryKey":false},{"name":"Type","type":"String","immutable":false,"primaryKey":false},{"name":"IsGPMLShape","type":"Boolean","immutable":false,"primaryKey":false},{"name":"Width","type":"Double","immutable":false,"primaryKey":false},{"name":"Height","type":"Double","immutable":false,"primaryKey":false},{"name":"FillColor","type":"String","immutable":false,"primaryKey":false},{"name":"Color","type":"String","immutable":false,"primaryKey":false},{"name":"LabelFont","type":"String","immutable":false,"primaryKey":false},{"name":"LabelSize","type":"Double","immutable":false,"primaryKey":false},{"name":"Transparent","type":"String","immutable":false,"primaryKey":false},{"name":"BorderThickness","type":"Double","immutable":false,"primaryKey":false},{"name":"BorderStyle","type":"String","immutable":false,"primaryKey":false},{"name":"Shape","type":"String","immutable":false,"primaryKey":false},{"name":"Ensembl","type":"String","immutable":true,"primaryKey":false},{"name":"Unnamed: 0","type":"String","immutable":false,"primaryKey":false},{"name":"logFC","type":"Double","immutable":false,"primaryKey":false},{"name":"logCPM","type":"Double","immutable":false,"primaryKey":false},{"name":"F","type":"Double","immutable":false,"primaryKey":false},{"name":"PValue","type":"Double","immutable":false,"primaryKey":false},{"name":"FDR","type":"Double","immutable":false,"primaryKey":false}]
Returning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'GraphID', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefId', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'XrefDatasource', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Type', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'IsGPMLShape', 'type': 'Boolean', 'immutable': False, 'primaryKey': False}, {'name': 'Width', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Height', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FillColor', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Color', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'LabelFont', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'LabelSize', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'Transparent', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'BorderThickness', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'BorderStyle', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Shape', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'Ensembl', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'Unnamed: 0', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'logFC', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'logCPM', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'F', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'PValue', 'type': 'Double', 'immutable': False, 'primaryKey': False}, {'name': 'FDR', 'type': 'Double', 'immutable': False, 'primaryKey': False}]
Returning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'GraphID': 'String', 'XrefId': 'String', 'XrefDatasource': 'String', 'Type': 'String', 'IsGPMLShape': 'Boolean', 'Width': 'Double', 'Height': 'Double', 'FillColor': 'String', 'Color': 'String', 'LabelFont': 'String', 'LabelSize': 'Double', 'Transparent': 'String', 'BorderThickness': 'Double', 'BorderStyle': 'String', 'Shape': 'String', 'Ensembl': 'String', 'Unnamed: 0': 'String', 'logFC': 'Double', 'logCPM': 'Double', 'F': 'Double', 'PValue': 'Double', 'FDR': 'Double'}
Calling cyrest_get('networks/78/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/tables/defaultnode/columns/SUID)
OK[200], content: {"name":"SUID","values":[89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284]}
Returning 'cyrest_get': {'name': 'SUID', 'values': [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284]}
Calling cyrest_get('networks/78/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/tables/defaultnode/columns/name)
OK[200], content: {"name":"name","values":["IL4","IFNG","IFNB1","SPP1","IL23A","IFNA16","IL24","IFNA17","IFNK","IFNL2","IL12B","IFNA8","CCL1","IL13","IFNA13","IL36A","IFNL3","CXCL1","IL21","IL12B","IL15","IFNA2","IL2","IL24","TSLP","IL1F10","IL19","IL36RN","OSM","TNF","IL9","IL26","IFNL2","IL10","IL6","IL25","IFNA14","IL7","CSF1","IL1A","IFNL1","IFNA7","IL20","EPO","CCL28","IFNW1","LIF","CSF2","IL3","IL12A","IL27","IL1RN","IFNA1","IL11","IL22","IFNA5","IL31","IL5","CTF1","IL1B","EBI3","IL37","IFNA4","IFNA6","IL18","IL33","CNTF","IL2","IL-8","MMP3","CSF3","CCL2","CSF2","ROS","CXCL10","TNF alpha","IL-12","NF-kappa-B  ","IL-1 Beta","MMP1","IL-6","IL-6","IL-1 Beta","IL-8","CCL2","TNF alpha","IL-12","VEGFA","MMP9","TGFB1","CXCL1","CSF1","AREG","IL17F","IL17A","IL22","CXCL9","IFNG","IFNA1","Prostaglandin E2","Prostaglandin I2","IL15","IL2","IL36B","IL36G","Lymphotoxin-alpha","TNFSF13B","TNFSF13","IL17A","IL17B","IL17D","IL17F","IL17C","IFNA10","IFNA21","IL12A","IFNL3","IFNL1","CSF3","CSF2","CCL2","CCL3","CCL3L3","CCL4","CCL4L2","CCL5","CCL13","CCL7","CCL8","CCL11","CCL14","CCL15","CCL16","CCL17","CCL18","CCL19","CCL20","CCL21","CCL22","CCL23","CCL24","CCL25","CCL27","CCL26","XCL1","XCL2","CXCL2","CXCL3","CXCL5","CXCL6","PPBP","CXCL10","CXCL11","CXCL12","CXCL16","CXCL17","CX3CL1","PF4","PF4V1","CXCL8","CXCL9","CXCL13","CXCL14","","","",null,null,null,null,null,null,null,null,"Colony stimulating factors","Shared IL-2 \nchain (CD122)","Type I IFN","IL-1","C chemokine/receptor family","CX3C chemokine/receptor family","CC chemokine/receptor family","Type III IFN","IL-17","Common  chain \nreceptor ligands","Adaptive immunity","CXC chemokine/receptor family","Cytokines","TNF","Shared receptors","Type II IFN","Common  chain (CD131) \nreceptor ligands","Cytokine storm","Pro-inflammatory signalling","Anti-inflammatory signalling","IL-6","Chemokines"]}
Returning 'cyrest_get': {'name': 'name', 'values': ['IL4', 'IFNG', 'IFNB1', 'SPP1', 'IL23A', 'IFNA16', 'IL24', 'IFNA17', 'IFNK', 'IFNL2', 'IL12B', 'IFNA8', 'CCL1', 'IL13', 'IFNA13', 'IL36A', 'IFNL3', 'CXCL1', 'IL21', 'IL12B', 'IL15', 'IFNA2', 'IL2', 'IL24', 'TSLP', 'IL1F10', 'IL19', 'IL36RN', 'OSM', 'TNF', 'IL9', 'IL26', 'IFNL2', 'IL10', 'IL6', 'IL25', 'IFNA14', 'IL7', 'CSF1', 'IL1A', 'IFNL1', 'IFNA7', 'IL20', 'EPO', 'CCL28', 'IFNW1', 'LIF', 'CSF2', 'IL3', 'IL12A', 'IL27', 'IL1RN', 'IFNA1', 'IL11', 'IL22', 'IFNA5', 'IL31', 'IL5', 'CTF1', 'IL1B', 'EBI3', 'IL37', 'IFNA4', 'IFNA6', 'IL18', 'IL33', 'CNTF', 'IL2', 'IL-8', 'MMP3', 'CSF3', 'CCL2', 'CSF2', 'ROS', 'CXCL10', 'TNF alpha', 'IL-12', 'NF-kappa-B  ', 'IL-1 Beta', 'MMP1', 'IL-6', 'IL-6', 'IL-1 Beta', 'IL-8', 'CCL2', 'TNF alpha', 'IL-12', 'VEGFA', 'MMP9', 'TGFB1', 'CXCL1', 'CSF1', 'AREG', 'IL17F', 'IL17A', 'IL22', 'CXCL9', 'IFNG', 'IFNA1', 'Prostaglandin E2', 'Prostaglandin I2', 'IL15', 'IL2', 'IL36B', 'IL36G', 'Lymphotoxin-alpha', 'TNFSF13B', 'TNFSF13', 'IL17A', 'IL17B', 'IL17D', 'IL17F', 'IL17C', 'IFNA10', 'IFNA21', 'IL12A', 'IFNL3', 'IFNL1', 'CSF3', 'CSF2', 'CCL2', 'CCL3', 'CCL3L3', 'CCL4', 'CCL4L2', 'CCL5', 'CCL13', 'CCL7', 'CCL8', 'CCL11', 'CCL14', 'CCL15', 'CCL16', 'CCL17', 'CCL18', 'CCL19', 'CCL20', 'CCL21', 'CCL22', 'CCL23', 'CCL24', 'CCL25', 'CCL27', 'CCL26', 'XCL1', 'XCL2', 'CXCL2', 'CXCL3', 'CXCL5', 'CXCL6', 'PPBP', 'CXCL10', 'CXCL11', 'CXCL12', 'CXCL16', 'CXCL17', 'CX3CL1', 'PF4', 'PF4V1', 'CXCL8', 'CXCL9', 'CXCL13', 'CXCL14', '', '', '', None, None, None, None, None, None, None, None, 'Colony stimulating factors', 'Shared IL-2 \nchain (CD122)', 'Type I IFN', 'IL-1', 'C chemokine/receptor family', 'CX3C chemokine/receptor family', 'CC chemokine/receptor family', 'Type III IFN', 'IL-17', 'Common  chain \nreceptor ligands', 'Adaptive immunity', 'CXC chemokine/receptor family', 'Cytokines', 'TNF', 'Shared receptors', 'Type II IFN', 'Common  chain (CD131) \nreceptor ligands', 'Cytokine storm', 'Pro-inflammatory signalling', 'Anti-inflammatory signalling', 'IL-6', 'Chemokines']}
Returning 'get_table_columns':                              name
89                            IL4
90                           IFNG
91                          IFNB1
92                           SPP1
93                          IL23A
..                            ...
280                Cytokine storm
281   Pro-inflammatory signalling
282  Anti-inflammatory signalling
283                          IL-6
284                    Chemokines

[196 rows x 1 columns]
Calling cyrest_put('networks/78/views/88/nodes', parameters={'bypass': True}, body=[{'SUID': '93', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '104', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '106', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '109', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '118', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '123', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '127', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '128', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '133', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '135', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '136', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '140', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '148', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '154', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '159', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '161', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '163', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '168', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '176', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '177', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '179', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '180', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '190', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '193', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '201', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '207', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '208', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '225', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '235', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '236', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '237', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '238', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '240', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '243', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '251', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}], base_url='http://127.0.0.1:1234/v1', require_json=False)
HTTP PUT(http://127.0.0.1:1234/v1/networks/78/views/88/nodes), params: {'bypass': True}, json: [{'SUID': '93', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '104', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '106', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '109', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '118', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '123', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '127', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '128', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '133', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '135', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '136', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '140', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '148', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '154', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '159', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '161', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '163', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '168', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '176', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '177', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '179', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '180', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '190', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '193', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '201', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '207', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '208', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '225', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '235', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '236', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '237', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '238', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '240', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '243', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}, {'SUID': '251', 'view': [{'visualProperty': 'NODE_BORDER_WIDTH', 'value': 10}]}]
OK[200], content: 
Returning 'cyrest_put': ''
Returning 'set_node_property_bypass': ''
Returning 'set_node_border_width_bypass': ''
--------------------
Calling export_image(filename='pathway4756.png')
Calling get_network_view_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_views(None, base_url='http://127.0.0.1:1234/v1')
Calling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
Calling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
OK[200], content: {
 "data": [ {
  "SUID": 78
}
],
 "errors":[]
}
Returning 'commands_post': [{'SUID': 78}]
Returning 'get_network_suid': 78
Calling cyrest_get('networks/78/views', base_url='http://127.0.0.1:1234/v1')
HTTP GET(http://127.0.0.1:1234/v1/networks/78/views)
OK[200], content: [88]
Returning 'cyrest_get': [88]
Returning 'get_network_views': [88]
Returning 'get_network_view_suid': 88
Calling sandbox_get_file_info('pathway4756.png', base_url='http://127.0.0.1:1234/v1')
Calling commands_post('filetransfer getFileInfo sandboxName="default_sandbox" fileName="pathway4756.png"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'sandboxName': 'default_sandbox', 'fileName': 'pathway4756.png'}
OK[200], content: {
 "data": {"filePath":"C:\\Users\\stefa\\CytoscapeConfiguration\\filetransfer\\default_sandbox\\pathway4756.png","modifiedTime":"","isFile":false},
 "errors":[]
}
Returning 'commands_post': {'filePath': 'C:\\Users\\stefa\\CytoscapeConfiguration\\filetransfer\\default_sandbox\\pathway4756.png', 'modifiedTime': '', 'isFile': False}
Returning 'sandbox_get_file_info': {'filePath': 'C:\\Users\\stefa\\CytoscapeConfiguration\\filetransfer\\default_sandbox\\pathway4756.png', 'modifiedTime': '', 'isFile': False}
Calling commands_post('view export OutputFile="C:\\Users\\stefa\\CytoscapeConfiguration\\filetransfer\\default_sandbox\\pathway4756.png" options="PNG" view="SUID:88"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/view/export), json: {'OutputFile': 'C:\\Users\\stefa\\CytoscapeConfiguration\\filetransfer\\default_sandbox\\pathway4756.png', 'options': 'PNG', 'view': 'SUID:88'}
OK[200], content: {
 "data": {"file":"C:\\Users\\stefa\\CytoscapeConfiguration\\filetransfer\\default_sandbox\\pathway4756.png"},
 "errors":[]
}
Returning 'commands_post': {'file': 'C:\\Users\\stefa\\CytoscapeConfiguration\\filetransfer\\default_sandbox\\pathway4756.png'}
Returning 'export_image': {'file': 'C:\\Users\\stefa\\CytoscapeConfiguration\\filetransfer\\default_sandbox\\pathway4756.png'}
--------------------
Calling sandbox_get_from('pathway4756.png')
Calling commands_post('filetransfer fromSandbox sandboxName="default_sandbox" fileName="pathway4756.png"', base_url='http://127.0.0.1:1234/v1')
HTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/fromSandbox), json: {'sandboxName': 'default_sandbox', 'fileName': 'pathway4756.png'}
OK[200], content: {
 "data": {"filePath":"C:\\Users\\stefa\\CytoscapeConfiguration\\filetransfer\\default_sandbox\\pathway4756.png","modifiedTime":"2021-06-22 14:31:31.0613","fileByteCount":64322,"fileBase64":"\u003d"},
 "errors":[]
}
Returning 'commands_post': {'filePath': 'C:\\Users\\stefa\\CytoscapeConfiguration\\filetransfer\\default_sandbox\\pathway4756.png', 'modifiedTime': '2021-06-22 14:31:31.0613', 'fileByteCount': 64322, 'fileBase64': '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OIURLheVFqnue7snptYdX2eugu3QyUNp08a5hhwYYq5CRk6cOqGWHV2WmFpzbI25Cr5IUPb6668nooYOHap2795trkKVRo4caTbFmpwIsSoyrvC6de7v1ThaunSp2VSB3H/06FGzObaqCsvjtD/pZ1k2bChRPTt3VGrlysTUC506qg8+WJuTsbZ37Nihli9frvbv35+IGjt2rLkKafxsHwiGcBme3nzzzSr/QAIAkocdLABOYYbLL2x+Vo19vX4sa9S/G6VC2UzC5demP6LGDL8/lvXSyvZZhculJ0vTguo416ADg8xV8GXq1KlmU2zJ+K9yMje//v3vf5tNsZZpuLx582azObZWr15tNlUg362dJ+aLu3fffddsqiBO+5OZLMvHH39svbcWqO3bN6nXBvRLC3DjXINe6KV27fpQLVo0T+3bt89ctVBJuBz1/xGmTDpEZrJ9IDuEy/A0ZswY+xcrAED1wg4WAKcww+XB77WyvmEU+K4Sqw5btcqqU472PeUl1zdatd1l3kzr4He+nAorMwmX195wSdpj+ClZp0UFFddHaoZVH7pM76cm9/qbvYyEy5mpKiSLkxMnThAulyNczq+q3jdx2p+sbFnKesB/oFatWqIOH95rj2mcTbhcMmmSOrxokVo1dqw6tWJFqn2P9bdU6rj1Ohf176+2TZtmt2+cPFltl+fS5bEyLQmXZbmPHNmn1qxZbm1rq+zhK6JAuIwgCswGQBs9erT1ObbSbAYAJBw7WACc4hAud7Nqg1VNrTpR3rbJqtpWzSy/3caqdi7zZlq5DpdlneoVfLo+Ur2tmmzV0y7T+6kww+XVdWupT874XCyrqHw9CZerFjRcLikpUYcPH1Zr1qyxA18p6eldWlpq319cXGxfbty4UW3fvj013549e+wKKhfhcqbrJpcjRoxQH374oXN236IMl2Vdli1blloPeV5kuZ3rsmrVqgrDJmT7GlX1vonT/qTXssjrv3jxfLV795YKJ8zLJlzu1qqV2jBpkmp6553qhPWaSNumoiJV+7e/VTMHDVLtGzVSswYPVnddf719X5v771ftHngg7XH8lA6Xde3b95HdC/vAgQPmKmctjHBZv/e8tkkJxmXfI9v/RxAux0OB2QBoMm5XVX8gAQDJww4WAKe4hst7rRpTUBYu77aqg1WtrPrYZf5MKg7hciOrnisoC5nN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'}
